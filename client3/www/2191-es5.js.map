{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-textarea.entry.js"],"names":["Textarea","hostRef","r","this","ionChange","ionInput","ionStyle","ionBlur","ionFocus","inputId","textareaIds","didBlurAfterEdit","inheritedAttributes","fireFocusEvents","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","emit","onFocus","focusChange","onBlur","onKeyDown","checkClearOnEdit","getValue","runAutoGrow","debounceChanged","document","dispatchEvent","CustomEvent","detail","el","i","style","height","scrollHeight","textareaWrapper","focus","blur","Promise","resolve","placeholder","hasValue","mode","labelId","label","id","h","H","class","c","color","ref","Object","assign","autoCapitalize","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","maxLength","maxlength","minLength","minlength","readOnly","cols","rows","wrap","ios","md"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, e as createEvent, f as readTask, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { f as debounceEvent, i as inheritAttributes, r as raf, h as findItemLabel } from './helpers-dd7e4b7b.js';\r\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\r\n\r\nconst textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-ios{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-ios-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-textarea-ios-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-ios-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-textarea-ios-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\r\n\r\nconst textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-md{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-md-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-textarea-md-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-md-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-textarea-md-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\r\n\r\nconst Textarea = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    this.ionInput = createEvent(this, \"ionInput\", 7);\r\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n    this.inputId = `ion-textarea-${textareaIds++}`;\r\n    this.didBlurAfterEdit = false;\r\n    this.inheritedAttributes = {};\r\n    /**\r\n     * This is required for a WebKit bug which requires us to\r\n     * blur and focus an input to properly focus the input in\r\n     * an item with delegatesFocus. It will no longer be needed\r\n     * with iOS 14.\r\n     *\r\n     * @internal\r\n     */\r\n    this.fireFocusEvents = true;\r\n    this.hasFocus = false;\r\n    /**\r\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n     */\r\n    this.autocapitalize = 'none';\r\n    /**\r\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n     */\r\n    this.autofocus = false;\r\n    /**\r\n     * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\r\n     */\r\n    this.clearOnEdit = false;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.\r\n     */\r\n    this.debounce = 0;\r\n    /**\r\n     * If `true`, the user cannot interact with the textarea.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * The name of the control, which is submitted with the form data.\r\n     */\r\n    this.name = this.inputId;\r\n    /**\r\n     * If `true`, the user cannot modify the value.\r\n     */\r\n    this.readonly = false;\r\n    /**\r\n     * If `true`, the user must fill in a value before submitting a form.\r\n     */\r\n    this.required = false;\r\n    /**\r\n     * If `true`, the element will have its spelling and grammar checked.\r\n     */\r\n    this.spellcheck = false;\r\n    /**\r\n     * If `true`, the element height will increase based on the value.\r\n     */\r\n    this.autoGrow = false;\r\n    /**\r\n     * The value of the textarea.\r\n     */\r\n    this.value = '';\r\n    this.onInput = (ev) => {\r\n      if (this.nativeInput) {\r\n        this.value = this.nativeInput.value;\r\n      }\r\n      this.emitStyle();\r\n      this.ionInput.emit(ev);\r\n    };\r\n    this.onFocus = (ev) => {\r\n      this.hasFocus = true;\r\n      this.focusChange();\r\n      if (this.fireFocusEvents) {\r\n        this.ionFocus.emit(ev);\r\n      }\r\n    };\r\n    this.onBlur = (ev) => {\r\n      this.hasFocus = false;\r\n      this.focusChange();\r\n      if (this.fireFocusEvents) {\r\n        this.ionBlur.emit(ev);\r\n      }\r\n    };\r\n    this.onKeyDown = () => {\r\n      this.checkClearOnEdit();\r\n    };\r\n  }\r\n  debounceChanged() {\r\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n  }\r\n  disabledChanged() {\r\n    this.emitStyle();\r\n  }\r\n  /**\r\n   * Update the native input element when the value changes\r\n   */\r\n  valueChanged() {\r\n    const nativeInput = this.nativeInput;\r\n    const value = this.getValue();\r\n    if (nativeInput && nativeInput.value !== value) {\r\n      nativeInput.value = value;\r\n    }\r\n    this.runAutoGrow();\r\n    this.emitStyle();\r\n    this.ionChange.emit({ value });\r\n  }\r\n  connectedCallback() {\r\n    this.emitStyle();\r\n    this.debounceChanged();\r\n    {\r\n      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n        detail: this.el\r\n      }));\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    {\r\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n        detail: this.el\r\n      }));\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    this.inheritedAttributes = inheritAttributes(this.el, ['title']);\r\n  }\r\n  componentDidLoad() {\r\n    raf(() => this.runAutoGrow());\r\n  }\r\n  runAutoGrow() {\r\n    const nativeInput = this.nativeInput;\r\n    if (nativeInput && this.autoGrow) {\r\n      readTask(() => {\r\n        nativeInput.style.height = 'auto';\r\n        nativeInput.style.height = nativeInput.scrollHeight + 'px';\r\n        if (this.textareaWrapper) {\r\n          this.textareaWrapper.style.height = nativeInput.scrollHeight + 'px';\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Sets focus on the native `textarea` in `ion-textarea`. Use this method instead of the global\r\n   * `textarea.focus()`.\r\n   */\r\n  async setFocus() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.focus();\r\n    }\r\n  }\r\n  /**\r\n   * Sets blur on the native `textarea` in `ion-textarea`. Use this method instead of the global\r\n   * `textarea.blur()`.\r\n   * @internal\r\n   */\r\n  async setBlur() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.blur();\r\n    }\r\n  }\r\n  /**\r\n   * Returns the native `<textarea>` element used under the hood.\r\n   */\r\n  getInputElement() {\r\n    return Promise.resolve(this.nativeInput);\r\n  }\r\n  emitStyle() {\r\n    this.ionStyle.emit({\r\n      'interactive': true,\r\n      'textarea': true,\r\n      'input': true,\r\n      'interactive-disabled': this.disabled,\r\n      'has-placeholder': this.placeholder != null,\r\n      'has-value': this.hasValue(),\r\n      'has-focus': this.hasFocus\r\n    });\r\n  }\r\n  /**\r\n   * Check if we need to clear the text input if clearOnEdit is enabled\r\n   */\r\n  checkClearOnEdit() {\r\n    if (!this.clearOnEdit) {\r\n      return;\r\n    }\r\n    // Did the input value change after it was blurred and edited?\r\n    if (this.didBlurAfterEdit && this.hasValue()) {\r\n      // Clear the input\r\n      this.value = '';\r\n    }\r\n    // Reset the flag\r\n    this.didBlurAfterEdit = false;\r\n  }\r\n  focusChange() {\r\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n    if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\r\n      this.didBlurAfterEdit = true;\r\n    }\r\n    this.emitStyle();\r\n  }\r\n  hasValue() {\r\n    return this.getValue() !== '';\r\n  }\r\n  getValue() {\r\n    return this.value || '';\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    const value = this.getValue();\r\n    const labelId = this.inputId + '-lbl';\r\n    const label = findItemLabel(this.el);\r\n    if (label) {\r\n      label.id = labelId;\r\n    }\r\n    return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\r\n        [mode]: true,\r\n      }) }, h(\"div\", { class: \"textarea-wrapper\", ref: el => this.textareaWrapper = el }, h(\"textarea\", Object.assign({ class: \"native-textarea\", \"aria-labelledby\": label ? labelId : null, ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, this.inheritedAttributes), value))));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"debounce\": [\"debounceChanged\"],\r\n    \"disabled\": [\"disabledChanged\"],\r\n    \"value\": [\"valueChanged\"]\r\n  }; }\r\n};\r\nlet textareaIds = 0;\r\nTextarea.style = {\r\n  ios: textareaIosCss,\r\n  md: textareaMdCss\r\n};\r\n\r\nexport { Textarea as ion_textarea };\r\n"]}