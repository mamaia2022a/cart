{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/tap-click-cc1ae2b2.js"],"names":["startTapClick","config","scrollingEl","activatableEle","activeRipple","activeDefer","lastTouch","MOUSE_WAIT","lastActivated","useRippleEffect","getBoolean","clearDefers","WeakMap","onTouchEnd","ev","pointerUp","cancelActive","clearTimeout","undefined","removeActivated","pointerDown","parentElement","setActivatedElement","getActivatableTarget","el","x","y","p","has","Error","classList","contains","ACTIVATED","addActivated","deferId","get","delete","delay","isInstant","ADD_ACTIVATED_DEFERS","remove","setTimeout","Date","now","add","rippleEffect","getRippleEffect","addRipple","removeRipple","then","smooth","active","time","CLEAR_STATE_DEFERS","set","doc","document","addEventListener","target","t","composedPath","closest","path","i","length","shadowRoot","ripple","querySelector"],"mappings":"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","file":"x","sourcesContent":["import { o as now, p as pointerCoord } from './helpers-dd7e4b7b.js';\r\n\r\nconst startTapClick = (config) => {\r\n  let lastTouch = -MOUSE_WAIT * 10;\r\n  let lastActivated = 0;\r\n  let scrollingEl;\r\n  let activatableEle;\r\n  let activeRipple;\r\n  let activeDefer;\r\n  const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\r\n  const clearDefers = new WeakMap();\r\n  const isScrolling = () => {\r\n    return scrollingEl !== undefined && scrollingEl.parentElement !== null;\r\n  };\r\n  // Touch Events\r\n  const onTouchStart = (ev) => {\r\n    lastTouch = now(ev);\r\n    pointerDown(ev);\r\n  };\r\n  const onTouchEnd = (ev) => {\r\n    lastTouch = now(ev);\r\n    pointerUp(ev);\r\n  };\r\n  const onMouseDown = (ev) => {\r\n    const t = now(ev) - MOUSE_WAIT;\r\n    if (lastTouch < t) {\r\n      pointerDown(ev);\r\n    }\r\n  };\r\n  const onMouseUp = (ev) => {\r\n    const t = now(ev) - MOUSE_WAIT;\r\n    if (lastTouch < t) {\r\n      pointerUp(ev);\r\n    }\r\n  };\r\n  const cancelActive = () => {\r\n    clearTimeout(activeDefer);\r\n    activeDefer = undefined;\r\n    if (activatableEle) {\r\n      removeActivated(false);\r\n      activatableEle = undefined;\r\n    }\r\n  };\r\n  const pointerDown = (ev) => {\r\n    if (activatableEle || isScrolling()) {\r\n      return;\r\n    }\r\n    scrollingEl = undefined;\r\n    setActivatedElement(getActivatableTarget(ev), ev);\r\n  };\r\n  const pointerUp = (ev) => {\r\n    setActivatedElement(undefined, ev);\r\n  };\r\n  const setActivatedElement = (el, ev) => {\r\n    // do nothing\r\n    if (el && el === activatableEle) {\r\n      return;\r\n    }\r\n    clearTimeout(activeDefer);\r\n    activeDefer = undefined;\r\n    const { x, y } = pointerCoord(ev);\r\n    // deactivate selected\r\n    if (activatableEle) {\r\n      if (clearDefers.has(activatableEle)) {\r\n        throw new Error('internal error');\r\n      }\r\n      if (!activatableEle.classList.contains(ACTIVATED)) {\r\n        addActivated(activatableEle, x, y);\r\n      }\r\n      removeActivated(true);\r\n    }\r\n    // activate\r\n    if (el) {\r\n      const deferId = clearDefers.get(el);\r\n      if (deferId) {\r\n        clearTimeout(deferId);\r\n        clearDefers.delete(el);\r\n      }\r\n      const delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\r\n      el.classList.remove(ACTIVATED);\r\n      activeDefer = setTimeout(() => {\r\n        addActivated(el, x, y);\r\n        activeDefer = undefined;\r\n      }, delay);\r\n    }\r\n    activatableEle = el;\r\n  };\r\n  const addActivated = (el, x, y) => {\r\n    lastActivated = Date.now();\r\n    el.classList.add(ACTIVATED);\r\n    const rippleEffect = useRippleEffect && getRippleEffect(el);\r\n    if (rippleEffect && rippleEffect.addRipple) {\r\n      removeRipple();\r\n      activeRipple = rippleEffect.addRipple(x, y);\r\n    }\r\n  };\r\n  const removeRipple = () => {\r\n    if (activeRipple !== undefined) {\r\n      activeRipple.then(remove => remove());\r\n      activeRipple = undefined;\r\n    }\r\n  };\r\n  const removeActivated = (smooth) => {\r\n    removeRipple();\r\n    const active = activatableEle;\r\n    if (!active) {\r\n      return;\r\n    }\r\n    const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\r\n    if (smooth && time > 0 && !isInstant(active)) {\r\n      const deferId = setTimeout(() => {\r\n        active.classList.remove(ACTIVATED);\r\n        clearDefers.delete(active);\r\n      }, CLEAR_STATE_DEFERS);\r\n      clearDefers.set(active, deferId);\r\n    }\r\n    else {\r\n      active.classList.remove(ACTIVATED);\r\n    }\r\n  };\r\n  const doc = document;\r\n  doc.addEventListener('ionScrollStart', ev => {\r\n    scrollingEl = ev.target;\r\n    cancelActive();\r\n  });\r\n  doc.addEventListener('ionScrollEnd', () => {\r\n    scrollingEl = undefined;\r\n  });\r\n  doc.addEventListener('ionGestureCaptured', cancelActive);\r\n  doc.addEventListener('touchstart', onTouchStart, true);\r\n  doc.addEventListener('touchcancel', onTouchEnd, true);\r\n  doc.addEventListener('touchend', onTouchEnd, true);\r\n  doc.addEventListener('mousedown', onMouseDown, true);\r\n  doc.addEventListener('mouseup', onMouseUp, true);\r\n};\r\nconst getActivatableTarget = (ev) => {\r\n  if (ev.composedPath) {\r\n    const path = ev.composedPath();\r\n    for (let i = 0; i < path.length - 2; i++) {\r\n      const el = path[i];\r\n      if (el.classList && el.classList.contains('ion-activatable')) {\r\n        return el;\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    return ev.target.closest('.ion-activatable');\r\n  }\r\n};\r\nconst isInstant = (el) => {\r\n  return el.classList.contains('ion-activatable-instant');\r\n};\r\nconst getRippleEffect = (el) => {\r\n  if (el.shadowRoot) {\r\n    const ripple = el.shadowRoot.querySelector('ion-ripple-effect');\r\n    if (ripple) {\r\n      return ripple;\r\n    }\r\n  }\r\n  return el.querySelector('ion-ripple-effect');\r\n};\r\nconst ACTIVATED = 'ion-activated';\r\nconst ADD_ACTIVATED_DEFERS = 200;\r\nconst CLEAR_STATE_DEFERS = 200;\r\nconst MOUSE_WAIT = 2500;\r\n\r\nexport { startTapClick };\r\n"]}