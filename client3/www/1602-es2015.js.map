{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js"],"names":["RippleEffect","hostRef","r","this","type","x","y","Promise","resolve","rect","el","getBoundingClientRect","width","height","hypotenuse","Math","sqrt","maxDim","max","maxRadius","unbounded","PADDING","initialSize","floor","INITIAL_ORIGIN_SCALE","finalScale","posX","left","posY","top","styleX","styleY","moveX","moveY","div","document","createElement","classList","add","style","setProperty","shadowRoot","appendChild","setTimeout","removeRipple","mode","h","H","role","class","ripple","remove"],"mappings":"sLAGA,MAEMA,EAAe,MACnB,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,GAUvBE,KAAKC,KAAO,UAQd,gBAAgBC,EAAGC,GACjB,OAAO,IAAIC,QAAQC,KACjB,OAAS,KACP,MAAMC,EAAON,KAAKO,GAAGC,wBACfC,EAAQH,EAAKG,MACbC,EAASJ,EAAKI,OACdC,EAAaC,KAAKC,KAAKJ,EAAQA,EAAQC,EAASA,GAChDI,EAASF,KAAKG,IAAIL,EAAQD,GAC1BO,EAAYhB,KAAKiB,UAAYH,EAASH,EAAaO,EACnDC,EAAcP,KAAKQ,MAAMN,EAASO,GAClCC,EAAaN,EAAYG,EAC/B,IAAII,EAAOrB,EAAII,EAAKkB,KAChBC,EAAOtB,EAAIG,EAAKoB,IAChB1B,KAAKiB,YACPM,EAAe,GAARd,EACPgB,EAAgB,GAATf,GAET,MAAMiB,EAASJ,EAAqB,GAAdJ,EAChBS,EAASH,EAAqB,GAAdN,EAChBU,EAAgB,GAARpB,EAAcc,EACtBO,EAAiB,GAATpB,EAAee,GAC7B,OAAU,KACR,MAAMM,EAAMC,SAASC,cAAc,OACnCF,EAAIG,UAAUC,IAAI,iBAClB,MAAMC,EAAQL,EAAIK,MAClBA,EAAMV,IAAME,EAAS,KACrBQ,EAAMZ,KAAOG,EAAS,KACtBS,EAAM3B,MAAQ2B,EAAM1B,OAASS,EAAc,KAC3CiB,EAAMC,YAAY,gBAAiB,GAAGf,KACtCc,EAAMC,YAAY,kBAAmB,GAAGR,QAAYC,QAClC9B,KAAKO,GAAG+B,YAActC,KAAKO,IACnCgC,YAAYR,GACtBS,WAAW,KACTnC,EAAQ,KACNoC,EAAaV,MAEd,WAKX,gBACE,MAAqB,cAAd/B,KAAKC,KAEd,SACE,MAAMyC,GAAO,OAAW1C,MACxB,OAAQ,IAAA2C,GAAE,EAAAC,EAAM,CAAEC,KAAM,eAAgBC,MAAO,CAC3C,CAACJ,IAAO,EACR,UAAa1C,KAAKiB,aAGxB,SAAW,OAAO,OAAWjB,QAEzByC,EAAgBM,IACpBA,EAAOb,UAAUC,IAAI,YACrBK,WAAW,KACTO,EAAOC,UACN,MAEC9B,EAAU,GACVG,EAAuB,GAC7BxB,EAAauC,MAnFW","file":"x","sourcesContent":["import { r as registerInstance, f as readTask, c as writeTask, h, i as getElement, H as Host } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\n\r\nconst rippleEffectCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;-webkit-animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1));-webkit-animation:150ms fadeOutAnimation forwards;animation:150ms fadeOutAnimation forwards}@-webkit-keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@-webkit-keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@-webkit-keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}@keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}\";\r\n\r\nconst RippleEffect = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /**\r\n     * Sets the type of ripple-effect:\r\n     *\r\n     * - `bounded`: the ripple effect expands from the user's click position\r\n     * - `unbounded`: the ripple effect expands from the center of the button and overflows the container.\r\n     *\r\n     * NOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\r\n     * while surfaces for unbounded ripples should have it set to visible.\r\n     */\r\n    this.type = 'bounded';\r\n  }\r\n  /**\r\n   * Adds the ripple effect to the parent element.\r\n   *\r\n   * @param x The horizontal coordinate of where the ripple should start.\r\n   * @param y The vertical coordinate of where the ripple should start.\r\n   */\r\n  async addRipple(x, y) {\r\n    return new Promise(resolve => {\r\n      readTask(() => {\r\n        const rect = this.el.getBoundingClientRect();\r\n        const width = rect.width;\r\n        const height = rect.height;\r\n        const hypotenuse = Math.sqrt(width * width + height * height);\r\n        const maxDim = Math.max(height, width);\r\n        const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\r\n        const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\r\n        const finalScale = maxRadius / initialSize;\r\n        let posX = x - rect.left;\r\n        let posY = y - rect.top;\r\n        if (this.unbounded) {\r\n          posX = width * 0.5;\r\n          posY = height * 0.5;\r\n        }\r\n        const styleX = posX - initialSize * 0.5;\r\n        const styleY = posY - initialSize * 0.5;\r\n        const moveX = width * 0.5 - posX;\r\n        const moveY = height * 0.5 - posY;\r\n        writeTask(() => {\r\n          const div = document.createElement('div');\r\n          div.classList.add('ripple-effect');\r\n          const style = div.style;\r\n          style.top = styleY + 'px';\r\n          style.left = styleX + 'px';\r\n          style.width = style.height = initialSize + 'px';\r\n          style.setProperty('--final-scale', `${finalScale}`);\r\n          style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\r\n          const container = this.el.shadowRoot || this.el;\r\n          container.appendChild(div);\r\n          setTimeout(() => {\r\n            resolve(() => {\r\n              removeRipple(div);\r\n            });\r\n          }, 225 + 100);\r\n        });\r\n      });\r\n    });\r\n  }\r\n  get unbounded() {\r\n    return this.type === 'unbounded';\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { role: \"presentation\", class: {\r\n        [mode]: true,\r\n        'unbounded': this.unbounded\r\n      } }));\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\nconst removeRipple = (ripple) => {\r\n  ripple.classList.add('fade-out');\r\n  setTimeout(() => {\r\n    ripple.remove();\r\n  }, 200);\r\n};\r\nconst PADDING = 10;\r\nconst INITIAL_ORIGIN_SCALE = 0.5;\r\nRippleEffect.style = rippleEffectCss;\r\n\r\nexport { RippleEffect as ion_ripple_effect };\r\n"]}