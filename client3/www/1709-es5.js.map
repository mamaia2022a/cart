{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":["Img","hostRef","r","this","ionImgWillLoad","ionImgDidLoad","ionError","onLoad","emit","onError","addIO","src","window","IntersectionObserverEntry","prototype","removeIO","io","IntersectionObserver","data","isIntersecting","load","observe","el","setTimeout","loadError","loadSrc","disconnect","h","H","class","decoding","alt","part","style"],"mappings":"8VAKMA,EAAG,WACP,WAAYC,GAAQ,Y,4FAAA,UAARA,EACV,EAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,kBAAiB,KAAYD,KAAM,iBAAkB,GAC1DA,KAAKE,iBAAgB,KAAYF,KAAM,gBAAiB,GACxDA,KAAKG,YAAW,KAAYH,KAAM,WAAY,GAC9CA,KAAKI,OAAS,WACZJ,EAAKE,cAAcG,QAErBL,KAAKM,QAAU,WACbN,EAAKG,SAASE,Q,UAVX,O,EAAA,E,EAAA,qBA2DP,WAAwB,MAAO,CAC7B,IAAO,CAAC,mB,EA5DH,yBAaP,WACEL,KAAKO,UAdA,8BAgBP,WACEP,KAAKO,UAjBA,mBAmBP,WAAO,gBAAP,IACMP,KAAKQ,MAGa,oBAAXC,QACT,yBAA0BA,QAC1B,8BAA+BA,QAC/B,mBAAoBA,OAAOC,0BAA0BC,WACrDX,KAAKY,WACLZ,KAAKa,GAAK,IAAIC,qBAAqBC,YAI7BA,EAAK,GAAGC,iBACVhB,EAAKiB,OACLjB,EAAKY,cAGTZ,KAAKa,GAAGK,QAAQlB,KAAKmB,KAIrBC,WAAW,kBAAMpB,EAAKiB,QAAQ,QAzC3B,kBA4CP,WACEjB,KAAKqB,UAAYrB,KAAKM,QACtBN,KAAKsB,QAAUtB,KAAKQ,IACpBR,KAAKC,eAAeI,SA/Cf,sBAiDP,WACML,KAAKa,KACPb,KAAKa,GAAGU,aACRvB,KAAKa,aApDF,oBAuDP,WACE,OAAM,EAAE,EAAAW,GAAE,EAAAC,EAAM,CAAEC,OAAM,EAAC,KAAW1B,UAAS,EAAAwB,GAAE,MAAO,CAAEG,SAAU,QAASnB,IAAKR,KAAKsB,QAASM,IAAK5B,KAAK4B,IAAKxB,OAAQJ,KAAKI,OAAQE,QAASN,KAAKqB,UAAWQ,KAAM,aAxD5J,cA0DP,WAAW,OAAM,EAAC,KAAW7B,W,2BA1DtB,KA+DTH,EAAIiC,MAjEW,yM","file":"x","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\n\r\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\r\n\r\nconst Img = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\r\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\r\n    this.ionError = createEvent(this, \"ionError\", 7);\r\n    this.onLoad = () => {\r\n      this.ionImgDidLoad.emit();\r\n    };\r\n    this.onError = () => {\r\n      this.ionError.emit();\r\n    };\r\n  }\r\n  srcChanged() {\r\n    this.addIO();\r\n  }\r\n  componentDidLoad() {\r\n    this.addIO();\r\n  }\r\n  addIO() {\r\n    if (this.src === undefined) {\r\n      return;\r\n    }\r\n    if (typeof window !== 'undefined' &&\r\n      'IntersectionObserver' in window &&\r\n      'IntersectionObserverEntry' in window &&\r\n      'isIntersecting' in window.IntersectionObserverEntry.prototype) {\r\n      this.removeIO();\r\n      this.io = new IntersectionObserver(data => {\r\n        // because there will only ever be one instance\r\n        // of the element we are observing\r\n        // we can just use data[0]\r\n        if (data[0].isIntersecting) {\r\n          this.load();\r\n          this.removeIO();\r\n        }\r\n      });\r\n      this.io.observe(this.el);\r\n    }\r\n    else {\r\n      // fall back to setTimeout for Safari and IE\r\n      setTimeout(() => this.load(), 200);\r\n    }\r\n  }\r\n  load() {\r\n    this.loadError = this.onError;\r\n    this.loadSrc = this.src;\r\n    this.ionImgWillLoad.emit();\r\n  }\r\n  removeIO() {\r\n    if (this.io) {\r\n      this.io.disconnect();\r\n      this.io = undefined;\r\n    }\r\n  }\r\n  render() {\r\n    return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"src\": [\"srcChanged\"]\r\n  }; }\r\n};\r\nImg.style = imgCss;\r\n\r\nexport { Img as ion_img };\r\n"]}