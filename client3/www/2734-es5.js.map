{"version":3,"sources":["webpack:///src/app/pages/aut/userroluri/userroluri.page.ts","webpack:///src/app/pages/aut/userroluri/userroluri.page.html","webpack:///src/app/pages/aut/userroluri/userroluri.page.scss","webpack:///src/app/pages/aut/userroluri/userroluri-routing.module.ts","webpack:///src/app/pages/aut/userroluri/userroluri.module.ts"],"names":["UserRoluriPage","storage","store","menuController","self","this","getLocalStorageData","then","data","data2","get","loginResponse","userroluri","autUser","roles","userroluri$","of","console","log","Promise","resolve","value","frmUserRoluri","valid","userrolid","dispatch","toggle","selector","template","routes","path","component","UserRoluriPageRoutingModule","imports","exports","UserRoluriPageModule","declarations"],"mappings":"+hBAeaA,EAAc,WAOzB,WAAoBC,EAA0BC,EAAsBC,wBAAhD,KAAAF,UAA0B,KAAAC,QAAsB,KAAAC,iBAgBnE,IAAIC,EAAOC,KAEVA,KAAKC,sBAEIC,KAAWC,YAAI,OAAJA,EAAO,sBAAPA,wBAAO,kGACbC,OADa,SACCL,EAAKH,QAAQS,IAAI,iBADlB,OACbD,EADa,iBAED,MAATA,EAFU,gBAGfA,OAHe,SAGDL,EAAKH,QAAQS,IAAI,iBAHhB,OAGfD,EAHe,oCAKjBL,EAAKO,cAAgBF,EACrBL,EAAKQ,WAAaR,EAAKO,cAAcE,QAAQC,MAC7CV,EAAKW,eAAcC,MAAGZ,EAAKQ,YAC3BK,QAAQC,IAAIT,GARK,4CAF3BJ,MAaqBG,YAAI,OAAJA,EAAO,sBAAPA,wBAAO,kGACdC,OADc,SACAL,EAAKH,QAAQS,IAAI,iBADjB,OACdD,EADc,iBAEF,MAATA,EAFW,gBAGhBA,OAHgB,SAGFL,EAAKH,QAAQS,IAAI,iBAHf,OAGhBD,EAHgB,oCAKlBL,EAAKO,cAAgBF,EACrBL,EAAKQ,WAAaR,EAAKO,cAAcE,QAAQC,MAC7CV,EAAKW,eAAcC,MAAGZ,EAAKQ,YAC3BK,QAAQC,IAAIT,GARM,4C,UAtCL,O,EAAA,G,EAAA,kCAoDzB,WACE,IAAIL,EAAMC,KACV,OAAO,IAAIc,QAAQC,YACjBhB,EAAKH,QAAQS,IAAI,OACdH,KAAMc,YAKDJ,QAAQC,IAAIG,GACZD,EAAQC,SA9DK,kBAoEzB,WACMhB,KAAKiB,cAAcC,OACrBN,QAAQC,IAAIb,KAAKiB,cAAcD,SAtEV,yBA0EzB,SAAYG,GACRP,QAAQC,IAAI,kBAAoBM,GAEhCnB,KAAKH,MAAMuB,SAAS,IAAI,oBAA2BD,EAAWnB,KAAKM,kBA7E9C,sBAgFzB,WACEN,KAAKiB,cAAgB,IAAI,KAAY,GAAI,CAAC,cAAqB,aAC/DL,QAAQC,IAAIb,KAAKO,cAlFM,+BAqFzB,WACEK,QAAQC,IAAI,qBAIZb,KAAKF,eAAeuB,OAAO,WAAWnB,KAAK,mB,2BA1FpB,K,yCAZlB,K,MACA,M,MAFY,QAaRP,KAAc,UAL1B,OAAU,CACT2B,SAAU,gBACVC,SCZF,0jE,QCAA,OFea5B,G,eGXP6B,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAW/B,IAQFgC,EAA2B,wBAA3BA,KAA2B,UAJvC,OAAS,CACRC,QAAS,CAAC,cAAsBJ,IAChCK,QAAS,CAAC,SAECF,G,ICFAG,EAAoB,wBAApBA,KAAoB,UAJhC,OAAS,CACRF,QAAS,CAAC,KAAc,KAAa,KAAaD,EAA6B,KAC/EI,aAAc,CAACpC,MAEJmC,O","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { IonContent, MenuController } from '@ionic/angular';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { RolGrupActiuniAction } from '../../../core/aut/rol_grupactiuni/rol_grupactiuni.actions';\r\nimport { AuthAction } from '../../../core/auth-guard/auth-guard.actions';\r\n\r\n\r\n@Component({\r\n  selector: 'app-userroles',\r\n  templateUrl: './userroluri.page.html',\r\n  styleUrls: ['./userroluri.page.scss'],\r\n})\r\nexport class UserRoluriPage implements OnInit {\r\n  frmUserRoluri: FormControl;\r\n  userroluri: any ;\r\n  userroluri$: Observable<any> ;\r\n  loginResponse: any;\r\n\r\n\r\n  constructor(private storage: Storage, private store: Store, private menuController: MenuController) \r\n  {\r\n    //this.userroluri = null;\r\n    /*\r\n    var self = this;\r\n    async () => {\r\n      var data2 = await self.storage.get(\"loginresponse\");\r\n      while (data2 == null) \r\n        data2 = await self.storage.get(\"loginresponse\");\r\n      //---\r\n      self.loginResponse = data2;\r\n      self.userroluri = self.loginResponse.autUser.roles;\r\n      self.userroluri$ = of(self.userroluri);\r\n      console.log(data2);\r\n    }\r\n    */\r\n   var self = this;\r\n    \r\n    this.getLocalStorageData()\r\n       \r\n            .then(async data =>{\r\n              var data2 = await self.storage.get(\"loginresponse\");\r\n              while (data2 == null) \r\n                data2 = await self.storage.get(\"loginresponse\");\r\n              //---\r\n              self.loginResponse = data2;\r\n              self.userroluri = self.loginResponse.autUser.roles;\r\n              self.userroluri$ = of(self.userroluri);\r\n              console.log(data2);\r\n        \r\n            })\r\n            .catch(async data =>{\r\n              var data2 = await self.storage.get(\"loginresponse\");\r\n              while (data2 == null) \r\n                data2 = await self.storage.get(\"loginresponse\");\r\n              //---\r\n              self.loginResponse = data2;\r\n              self.userroluri = self.loginResponse.autUser.roles;\r\n              self.userroluri$ = of(self.userroluri);\r\n              console.log(data2);\r\n        \r\n            })\r\n          \r\n  }\r\n\r\n  getLocalStorageData(){\r\n    var self =this;\r\n    return new Promise(resolve => {\r\n      self.storage.get(\"xxx\")\r\n        .then( value => \r\n            { \r\n              //self.loginResponse = value;\r\n              //self.userroluri = self.loginResponse.autUser.roles;\r\n              //self.userroluri$ = of(self.userroluri);\r\n              console.log(value);\r\n              resolve(value);\r\n            });\r\n            \r\n         });\r\n    }\r\n\r\n  done() {\r\n    if (this.frmUserRoluri.valid) {\r\n      console.log(this.frmUserRoluri.value);\r\n    }\r\n  }\r\n\r\n  selectieRol(userrolid : number) {\r\n      console.log(\"selectie rol : \" + userrolid);\r\n      //this.store.dispatch(new RolGrupActiuniAction.Rolgrupactiuni(userrolid, this.loginResponse));\r\n      this.store.dispatch(new AuthAction.Rolgrupactiunii(userrolid, this.loginResponse));\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.frmUserRoluri = new FormControl('', [Validators.required, Validators.email]);\r\n    console.log(this.userroluri);\r\n  }\r\n\r\n  toggleProfileMenu() {\r\n    console.log('toggleProfileMenu');\r\n    //this.menuController.toggle('profile');\r\n    \r\n    var self = this;\r\n    this.menuController.toggle(\"profile\").then(() => {\r\n      //this.menuController.open();\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"dark\\\">\\r\\n    <ion-buttons slot=\\\"secondary\\\">\\r\\n      <ion-button>\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"person-circle\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!-- \\r\\n      <ion-button>\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      -->\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"primary\\\">\\r\\n      <ion-menu-button menuId=\\\"mainmenu\\\"></ion-menu-button>\\r\\n      <!-- \\r\\n      <ion-button color=\\\"danger\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" ios=\\\"ellipsis-horizontal\\\" md=\\\"ellipsis-vertical\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    -->\\r\\n    </ion-buttons>\\r\\n    <ion-title>Bine Ai Venit ! &nbsp; &nbsp; &nbsp; </ion-title>\\r\\n  </ion-toolbar>  \\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <!-- List of Text Items -->\\r\\n\\r\\n      <ng-container *ngIf=\\\"userroluri$\\\">\\r\\n        <h3>Funcțiile dumneavoastră în Partid</h3>\\r\\n        <ion-list>\\r\\n          <ion-item button=\\\"true\\\" detail *ngFor='let userrol of userroluri' (click)=\\\"selectieRol(userrol.autUserrolId)\\\">\\r\\n            <ion-label>\\r\\n              <h2>{{userrol.rol.autRolDisplayNume}}</h2>\\r\\n              <p>{{userrol.rol.autRolDisplaydescriere}}</p>\\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n\\r\\n          <!--\\r\\n          <ion-item detail *ngFor='let rol of roles' (click)=\\\"selectieRol(rol.autUserrolId)\\\">\\r\\n            <ion-label>\\r\\n              <h2>{{rol.rol.autRolDisplayNume}}</h2>\\r\\n              <p>{{rol.rol.autRolDisplaydescriere}}</p>\\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n          \\r\\n          \\r\\n          <button width=\\\"100%\\\" ion-item *ngFor='let userrol of userroluri' (click)=\\\"selectieRol(userrol.autUserrolId)\\\"> \\r\\n            <ion-label>\\r\\n              <h2>{{userrol.rol.autRolDisplayNume}}</h2>\\r\\n              <p>{{userrol.rol.autRolDisplaydescriere}}</p>\\r\\n            </ion-label>\\r\\n\\r\\n          </button>\\r\\n          -->\\r\\n        </ion-list>\\r\\n     </ng-container>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserRoluriPage } from './userroluri.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserRoluriPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserRoluriPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { UserRoluriPage } from './userroluri.page';\r\nimport { UserRoluriPageRoutingModule } from './userroluri-routing.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, UserRoluriPageRoutingModule, SharedModule],\r\n  declarations: [UserRoluriPage],\r\n})\r\nexport class UserRoluriPageModule {}\r\n"]}