{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/tap-click-cc1ae2b2.js"],"names":["startTapClick","config","scrollingEl","activatableEle","activeRipple","activeDefer","lastTouch","MOUSE_WAIT","lastActivated","useRippleEffect","getBoolean","clearDefers","WeakMap","onTouchEnd","ev","pointerUp","cancelActive","clearTimeout","removeActivated","pointerDown","parentElement","setActivatedElement","getActivatableTarget","el","y","p","x","has","Error","classList","contains","ACTIVATED","addActivated","deferId","get","delay","isInstant","ADD_ACTIVATED_DEFERS","remove","setTimeout","Date","now","add","rippleEffect","getRippleEffect","addRipple","removeRipple","then","smooth","active","time","CLEAR_STATE_DEFERS","set","doc","document","addEventListener","target","t","composedPath","closest","path","i","length","shadowRoot","ripple","querySelector"],"mappings":"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","file":"x","sourcesContent":["import { o as now, p as pointerCoord } from './helpers-dd7e4b7b.js';\r\n\r\nconst startTapClick = (config) => {\r\n  let lastTouch = -MOUSE_WAIT * 10;\r\n  let lastActivated = 0;\r\n  let scrollingEl;\r\n  let activatableEle;\r\n  let activeRipple;\r\n  let activeDefer;\r\n  const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\r\n  const clearDefers = new WeakMap();\r\n  const isScrolling = () => {\r\n    return scrollingEl !== undefined && scrollingEl.parentElement !== null;\r\n  };\r\n  // Touch Events\r\n  const onTouchStart = (ev) => {\r\n    lastTouch = now(ev);\r\n    pointerDown(ev);\r\n  };\r\n  const onTouchEnd = (ev) => {\r\n    lastTouch = now(ev);\r\n    pointerUp(ev);\r\n  };\r\n  const onMouseDown = (ev) => {\r\n    const t = now(ev) - MOUSE_WAIT;\r\n    if (lastTouch < t) {\r\n      pointerDown(ev);\r\n    }\r\n  };\r\n  const onMouseUp = (ev) => {\r\n    const t = now(ev) - MOUSE_WAIT;\r\n    if (lastTouch < t) {\r\n      pointerUp(ev);\r\n    }\r\n  };\r\n  const cancelActive = () => {\r\n    clearTimeout(activeDefer);\r\n    activeDefer = undefined;\r\n    if (activatableEle) {\r\n      removeActivated(false);\r\n      activatableEle = undefined;\r\n    }\r\n  };\r\n  const pointerDown = (ev) => {\r\n    if (activatableEle || isScrolling()) {\r\n      return;\r\n    }\r\n    scrollingEl = undefined;\r\n    setActivatedElement(getActivatableTarget(ev), ev);\r\n  };\r\n  const pointerUp = (ev) => {\r\n    setActivatedElement(undefined, ev);\r\n  };\r\n  const setActivatedElement = (el, ev) => {\r\n    // do nothing\r\n    if (el && el === activatableEle) {\r\n      return;\r\n    }\r\n    clearTimeout(activeDefer);\r\n    activeDefer = undefined;\r\n    const { x, y } = pointerCoord(ev);\r\n    // deactivate selected\r\n    if (activatableEle) {\r\n      if (clearDefers.has(activatableEle)) {\r\n        throw new Error('internal error');\r\n      }\r\n      if (!activatableEle.classList.contains(ACTIVATED)) {\r\n        addActivated(activatableEle, x, y);\r\n      }\r\n      removeActivated(true);\r\n    }\r\n    // activate\r\n    if (el) {\r\n      const deferId = clearDefers.get(el);\r\n      if (deferId) {\r\n        clearTimeout(deferId);\r\n        clearDefers.delete(el);\r\n      }\r\n      const delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\r\n      el.classList.remove(ACTIVATED);\r\n      activeDefer = setTimeout(() => {\r\n        addActivated(el, x, y);\r\n        activeDefer = undefined;\r\n      }, delay);\r\n    }\r\n    activatableEle = el;\r\n  };\r\n  const addActivated = (el, x, y) => {\r\n    lastActivated = Date.now();\r\n    el.classList.add(ACTIVATED);\r\n    const rippleEffect = useRippleEffect && getRippleEffect(el);\r\n    if (rippleEffect && rippleEffect.addRipple) {\r\n      removeRipple();\r\n      activeRipple = rippleEffect.addRipple(x, y);\r\n    }\r\n  };\r\n  const removeRipple = () => {\r\n    if (activeRipple !== undefined) {\r\n      activeRipple.then(remove => remove());\r\n      activeRipple = undefined;\r\n    }\r\n  };\r\n  const removeActivated = (smooth) => {\r\n    removeRipple();\r\n    const active = activatableEle;\r\n    if (!active) {\r\n      return;\r\n    }\r\n    const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\r\n    if (smooth && time > 0 && !isInstant(active)) {\r\n      const deferId = setTimeout(() => {\r\n        active.classList.remove(ACTIVATED);\r\n        clearDefers.delete(active);\r\n      }, CLEAR_STATE_DEFERS);\r\n      clearDefers.set(active, deferId);\r\n    }\r\n    else {\r\n      active.classList.remove(ACTIVATED);\r\n    }\r\n  };\r\n  const doc = document;\r\n  doc.addEventListener('ionScrollStart', ev => {\r\n    scrollingEl = ev.target;\r\n    cancelActive();\r\n  });\r\n  doc.addEventListener('ionScrollEnd', () => {\r\n    scrollingEl = undefined;\r\n  });\r\n  doc.addEventListener('ionGestureCaptured', cancelActive);\r\n  doc.addEventListener('touchstart', onTouchStart, true);\r\n  doc.addEventListener('touchcancel', onTouchEnd, true);\r\n  doc.addEventListener('touchend', onTouchEnd, true);\r\n  doc.addEventListener('mousedown', onMouseDown, true);\r\n  doc.addEventListener('mouseup', onMouseUp, true);\r\n};\r\nconst getActivatableTarget = (ev) => {\r\n  if (ev.composedPath) {\r\n    const path = ev.composedPath();\r\n    for (let i = 0; i < path.length - 2; i++) {\r\n      const el = path[i];\r\n      if (el.classList && el.classList.contains('ion-activatable')) {\r\n        return el;\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    return ev.target.closest('.ion-activatable');\r\n  }\r\n};\r\nconst isInstant = (el) => {\r\n  return el.classList.contains('ion-activatable-instant');\r\n};\r\nconst getRippleEffect = (el) => {\r\n  if (el.shadowRoot) {\r\n    const ripple = el.shadowRoot.querySelector('ion-ripple-effect');\r\n    if (ripple) {\r\n      return ripple;\r\n    }\r\n  }\r\n  return el.querySelector('ion-ripple-effect');\r\n};\r\nconst ACTIVATED = 'ion-activated';\r\nconst ADD_ACTIVATED_DEFERS = 200;\r\nconst CLEAR_STATE_DEFERS = 200;\r\nconst MOUSE_WAIT = 2500;\r\n\r\nexport { startTapClick };\r\n"]}