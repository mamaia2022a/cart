{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-input.entry.js"],"names":["Input","hostRef","r","this","ionInput","ionChange","ionBlur","ionFocus","ionStyle","inputId","inputIds","didBlurAfterEdit","inheritedAttributes","fireFocusEvents","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","emit","onBlur","focusChanged","emitStyle","onFocus","onKeydown","shouldClearOnEdit","hasValue","key","clearTextInput","clearTextOnEnter","preventDefault","stopPropagation","setFocus","nativeInput","toString","i","el","debounceChanged","document","dispatchEvent","CustomEvent","detail","focus","blur","Promise","resolve","clearOnEdit","undefined","placeholder","getValue","length","mode","labelId","label","id","h","H","class","c","color","Object","assign","ref","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","step","size","onKeyDown","onTouchStart","onMouseDown","style","ios","md"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { f as debounceEvent, i as inheritAttributes, h as findItemLabel } from './helpers-dd7e4b7b.js';\r\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\r\n\r\nconst inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:0.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-ios:focus{opacity:0.5}.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h button.sc-ion-input-ios{pointer-events:auto}.item-label-floating.item-has-placeholder.sc-ion-input-ios-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-input-ios-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-input-ios-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-input-ios-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-input-ios-h,.item-label-stacked .sc-ion-input-ios-h,.item-label-floating.sc-ion-input-ios-h,.item-label-floating .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><path%20fill='var(--ion-color-step-600,%20%23666666)'%20d='M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\r\n\r\nconst inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-md-h{--padding-start:0}.ion-color.sc-ion-input-md-h{color:var(--ion-color-base)}.native-input.sc-ion-input-md{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.native-input[disabled].sc-ion-input-md{opacity:0.4}.cloned-input.sc-ion-input-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-md .cloned-input.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h .cloned-input.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h .cloned-input.sc-ion-input-md{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-md:focus{opacity:0.5}.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.has-focus.sc-ion-input-md-h{pointer-events:none}.has-focus.sc-ion-input-md-h input.sc-ion-input-md,.has-focus.sc-ion-input-md-h a.sc-ion-input-md,.has-focus.sc-ion-input-md-h button.sc-ion-input-md{pointer-events:auto}.item-label-floating.item-has-placeholder.sc-ion-input-md-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-input-md-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-input-md-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-input-md-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-input-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:8px;font-size:inherit}.item-label-stacked.sc-ion-input-md-h,.item-label-stacked .sc-ion-input-md-h,.item-label-floating.sc-ion-input-md-h,.item-label-floating .sc-ion-input-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}.input-clear-icon.sc-ion-input-md{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><polygon%20fill='var(--ion-color-step-600,%20%23666666)'%20points='405,136.798%20375.202,107%20256,226.202%20136.798,107%20107,136.798%20226.202,256%20107,375.202%20136.798,405%20256,285.798%20375.202,405%20405,375.202%20285.798,256'/></svg>\\\");width:30px;height:30px;background-size:22px}\";\r\n\r\nconst Input = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionInput = createEvent(this, \"ionInput\", 7);\r\n    this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    this.inputId = `ion-input-${inputIds++}`;\r\n    this.didBlurAfterEdit = false;\r\n    this.inheritedAttributes = {};\r\n    /**\r\n     * This is required for a WebKit bug which requires us to\r\n     * blur and focus an input to properly focus the input in\r\n     * an item with delegatesFocus. It will no longer be needed\r\n     * with iOS 14.\r\n     *\r\n     * @internal\r\n     */\r\n    this.fireFocusEvents = true;\r\n    this.hasFocus = false;\r\n    /**\r\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n     * Available options: `\"off\"`, `\"none\"`, `\"on\"`, `\"sentences\"`, `\"words\"`, `\"characters\"`.\r\n     */\r\n    this.autocapitalize = 'off';\r\n    /**\r\n     * Indicates whether the value of the control can be automatically completed by the browser.\r\n     */\r\n    this.autocomplete = 'off';\r\n    /**\r\n     * Whether auto correction should be enabled when the user is entering/editing the text value.\r\n     */\r\n    this.autocorrect = 'off';\r\n    /**\r\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n     */\r\n    this.autofocus = false;\r\n    /**\r\n     * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\r\n     */\r\n    this.clearInput = false;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.\r\n     */\r\n    this.debounce = 0;\r\n    /**\r\n     * If `true`, the user cannot interact with the input.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * The name of the control, which is submitted with the form data.\r\n     */\r\n    this.name = this.inputId;\r\n    /**\r\n     * If `true`, the user cannot modify the value.\r\n     */\r\n    this.readonly = false;\r\n    /**\r\n     * If `true`, the user must fill in a value before submitting a form.\r\n     */\r\n    this.required = false;\r\n    /**\r\n     * If `true`, the element will have its spelling and grammar checked.\r\n     */\r\n    this.spellcheck = false;\r\n    /**\r\n     * The type of control to display. The default type is text.\r\n     */\r\n    this.type = 'text';\r\n    /**\r\n     * The value of the input.\r\n     */\r\n    this.value = '';\r\n    this.onInput = (ev) => {\r\n      const input = ev.target;\r\n      if (input) {\r\n        this.value = input.value || '';\r\n      }\r\n      this.ionInput.emit(ev);\r\n    };\r\n    this.onBlur = (ev) => {\r\n      this.hasFocus = false;\r\n      this.focusChanged();\r\n      this.emitStyle();\r\n      if (this.fireFocusEvents) {\r\n        this.ionBlur.emit(ev);\r\n      }\r\n    };\r\n    this.onFocus = (ev) => {\r\n      this.hasFocus = true;\r\n      this.focusChanged();\r\n      this.emitStyle();\r\n      if (this.fireFocusEvents) {\r\n        this.ionFocus.emit(ev);\r\n      }\r\n    };\r\n    this.onKeydown = (ev) => {\r\n      if (this.shouldClearOnEdit()) {\r\n        // Did the input value change after it was blurred and edited?\r\n        // Do not clear if user is hitting Enter to submit form\r\n        if (this.didBlurAfterEdit && this.hasValue() && ev.key !== 'Enter') {\r\n          // Clear the input\r\n          this.clearTextInput();\r\n        }\r\n        // Reset the flag\r\n        this.didBlurAfterEdit = false;\r\n      }\r\n    };\r\n    this.clearTextOnEnter = (ev) => {\r\n      if (ev.key === 'Enter') {\r\n        this.clearTextInput(ev);\r\n      }\r\n    };\r\n    this.clearTextInput = (ev) => {\r\n      if (this.clearInput && !this.readonly && !this.disabled && ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        // Attempt to focus input again after pressing clear button\r\n        this.setFocus();\r\n      }\r\n      this.value = '';\r\n      /**\r\n       * This is needed for clearOnEdit\r\n       * Otherwise the value will not be cleared\r\n       * if user is inside the input\r\n       */\r\n      if (this.nativeInput) {\r\n        this.nativeInput.value = '';\r\n      }\r\n    };\r\n  }\r\n  debounceChanged() {\r\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n  }\r\n  disabledChanged() {\r\n    this.emitStyle();\r\n  }\r\n  /**\r\n   * Update the item classes when the placeholder changes\r\n   */\r\n  placeholderChanged() {\r\n    this.emitStyle();\r\n  }\r\n  /**\r\n   * Update the native input element when the value changes\r\n   */\r\n  valueChanged() {\r\n    this.emitStyle();\r\n    this.ionChange.emit({ value: this.value == null ? this.value : this.value.toString() });\r\n  }\r\n  componentWillLoad() {\r\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label', 'tabindex', 'title']);\r\n  }\r\n  connectedCallback() {\r\n    this.emitStyle();\r\n    this.debounceChanged();\r\n    {\r\n      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n        detail: this.el\r\n      }));\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    {\r\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n        detail: this.el\r\n      }));\r\n    }\r\n  }\r\n  /**\r\n   * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  async setFocus() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.focus();\r\n    }\r\n  }\r\n  /**\r\n   * Sets blur on the native `input` in `ion-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   * @internal\r\n   */\r\n  async setBlur() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.blur();\r\n    }\r\n  }\r\n  /**\r\n   * Returns the native `<input>` element used under the hood.\r\n   */\r\n  getInputElement() {\r\n    return Promise.resolve(this.nativeInput);\r\n  }\r\n  shouldClearOnEdit() {\r\n    const { type, clearOnEdit } = this;\r\n    return (clearOnEdit === undefined)\r\n      ? type === 'password'\r\n      : clearOnEdit;\r\n  }\r\n  getValue() {\r\n    return typeof this.value === 'number' ? this.value.toString() :\r\n      (this.value || '').toString();\r\n  }\r\n  emitStyle() {\r\n    this.ionStyle.emit({\r\n      'interactive': true,\r\n      'input': true,\r\n      'has-placeholder': this.placeholder != null,\r\n      'has-value': this.hasValue(),\r\n      'has-focus': this.hasFocus,\r\n      'interactive-disabled': this.disabled,\r\n    });\r\n  }\r\n  focusChanged() {\r\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n    if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\r\n      this.didBlurAfterEdit = true;\r\n    }\r\n  }\r\n  hasValue() {\r\n    return this.getValue().length > 0;\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    const value = this.getValue();\r\n    const labelId = this.inputId + '-lbl';\r\n    const label = findItemLabel(this.el);\r\n    if (label) {\r\n      label.id = labelId;\r\n    }\r\n    return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\r\n        [mode]: true,\r\n        'has-value': this.hasValue(),\r\n        'has-focus': this.hasFocus\r\n      }) }, h(\"input\", Object.assign({ class: \"native-input\", ref: input => this.nativeInput = input, \"aria-labelledby\": label ? labelId : null, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, step: this.step, size: this.size, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }, this.inheritedAttributes)), (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { \"aria-label\": \"reset\", type: \"button\", class: \"input-clear-icon\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput, onKeyDown: this.clearTextOnEnter })));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"debounce\": [\"debounceChanged\"],\r\n    \"disabled\": [\"disabledChanged\"],\r\n    \"placeholder\": [\"placeholderChanged\"],\r\n    \"value\": [\"valueChanged\"]\r\n  }; }\r\n};\r\nlet inputIds = 0;\r\nInput.style = {\r\n  ios: inputIosCss,\r\n  md: inputMdCss\r\n};\r\n\r\nexport { Input as ion_input };\r\n"]}