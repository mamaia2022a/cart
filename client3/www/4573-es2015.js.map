{"version":3,"sources":["webpack:///src/app/pages/sefgrup/gestgrup/vizualizmem/vizualizmem.page.ts","webpack:///src/app/pages/sefgrup/gestgrup/vizualizmem/vizualizmem.page.html","webpack:///src/app/pages/sefgrup/gestgrup/vizualizmem/vizualizmem.page.scss","webpack:///src/app/pages/sefgrup/gestgrup/vizualizmem/vizualizmem-routing.module.ts","webpack:///src/app/pages/sefgrup/gestgrup/vizualizmem/vizualizmem.module.ts"],"names":["VizualizMemPage","store","navController","platform","storage","frmVizualizMemerea","mesaj","crtgrupact","crtactiune","grupmembri$","grupmembri","infogrup$","memGrupRequestVizualizare","MemGrupRequest_Vizualizare","infogrup","crtsubactiune$","crtsubactiune","crtsubactiuniparams$","crtsubactiuniparams","membru","self","this","getLocalStorageData","then","data","get","token","dispatch","subscribe","membriGrup","of","data2","params","data3","error","console","log","Promise","resolve","value","actiuneid","memMembrugrupId","autActiuneId","autGrupactiuniId","actiuneParams","ActiuneParametri","memMembruGrup","getSelectedMembruGrup","setData","arrmembrigrup","selMembruGrup","idx","crtMembruGrup","valid","memMembruTipRequestSchimbare","MemMembruTipRequest_Schimbare","crtmemtipcod","newmemtipcod","crtmemrolcod","newmemrolcod","selector","template","routes","path","component","VizualizMemPageRoutingModule","imports","exports","VizualizMemPageModule","declarations"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, SelectControlValueAccessor, Validators } from '@angular/forms';\n\nimport { IonSelect, NavController, Platform } from '@ionic/angular';\nimport { Store } from '@ngxs/store';\nimport { Observable, of } from 'rxjs';\nimport { Storage } from '@ionic/storage';\nimport { MemMembruTipRequest_Schimbare } from '../../../../payloads/mem/MemMembruTipRequest_Schimbare';\nimport { AuthAction } from '../../../../core/auth-guard/auth-guard.actions';\nimport { MemGrupRequest_Vizualizare } from '../../../../payloads/mem/MemGrupRequest_Vizualizare';\nimport { ActiuneParametri } from '../../../../payloads/aut/ActiuneParametri';\n\n\n@Component({\n  selector: 'app-vizualizmem',\n  templateUrl: './vizualizmem.page.html',\n  styleUrls: ['./vizualizmem.page.scss'],\n})\nexport class VizualizMemPage implements OnInit {\n\n  frmVizualizMemerea: FormGroup = new FormGroup(\n    {\n       mesaj: new FormControl('Trimite Confirmarea Cererii de a deveni Membru',[]),// [Validators.required, Validators.minLength(8), Validators.maxLength(16)]),\n    });\n  crtgrupact = null;\n  crtactiune : any = null;\n  loginResponse : any;\n  token : string;\n  grupmembri$ : Observable<any> = null;\n  grupmembri  : any = null;\n  infogrup$ : Observable<any> = null;\n  memGrupRequestVizualizare : MemGrupRequest_Vizualizare = new MemGrupRequest_Vizualizare();\n  infogrup : any = null; //.gruinfogrupp infogrup.membriGrup infogrup.sefGrup infogrup.membru\n\n  crtsubactiune$        : Observable<any> = null;\n  crtsubactiune         : any = null;\n  crtsubactiuniparams$  : Observable<any> = null;\n  crtsubactiuniparams   : any = null;\n  membru  : any = null;\n\n  constructor(private store: Store, private navController: NavController, private platform: Platform, private storage: Storage)  \n  {\n    var self = this;\n\n    //this.confirmsimact = null;\n    var self = this;\n    this.getLocalStorageData()\n            .then(async data =>{\n              data = await self.storage.get(\"token\");\n              while (data == null) \n                data = await this.storage.get(\"token\");\n              //---\n              self.token = <string>(data);\n\n              //---------------------------\n              var storageResultKey = \"grupmembri\";\n              this.store.dispatch(new AuthAction.MemGrupVizualizare(\n                                        self.memGrupRequestVizualizare, self.token, storageResultKey)).subscribe(async () => \n              {\n                //console.log('Call Action Mem Grup Vizualizare: ');\n                \n                var data = await this.storage.get(storageResultKey);\n                while (data == null) \n                  data = await this.storage.get(storageResultKey);\n                //---\n                self.grupmembri = data.membriGrup;\n                self.infogrup   = data; \n                self.infogrup$   = data; \n                self.grupmembri$ = of(data.membriGrup);\n          \n                var data = await this.storage.get(\"crtgrupact\");\n                while (data == null) \n                  data = await this.storage.get(\"crtgrupact\");\n                //---\n                self.crtgrupact = data;\n\n                var data2 = await this.storage.get(\"crtsubactiuniparams\");\n                while (data2 == null) \n                  data2 = await this.storage.get(\"crtsubactiuniparams\");\n                //---\n                self.crtsubactiuniparams = data2;\n                self.crtsubactiuniparams$ = of(data2);\n                self.membru = data2.params;\n\n                var data3 = await this.storage.get(\"crtsubactiune\");\n                while (data3 == null) \n                  data3 = await this.storage.get(\"crtsubactiune\");\n                //---\n                self.crtsubactiune = data3;\n                self.crtsubactiune$ = of(data3);\n\n              },\n              error => {\n                console.log('Error Calling Action Vizualizare Grup: ' + error);\n              }\n              );          \n              //------------------------\n            })\n  }\n\n  getLocalStorageData(){\n    var self =this;\n    return new Promise(resolve => {\n      self.storage.get(\"crtactiune\")\n        .then( value => \n            { \n              self.crtactiune = value;\n              console.log(value);\n              resolve(value);\n            });\n            \n         });\n    }\n\n  done() {\n    /**\n    if (this.frmVizualizMem.valid) {\n      console.log(this.frmVizualizMem.value);\n    }*/\n  }\n\n  selectieFaActiune(actiuneid : number) {\n      console.log(\"selectie fa actiune : \" + actiuneid);\n  }\n\n  selectieMembruGrup(memMembrugrupId : number) \n  {\n    console.log(\"selectie membru grup id:\" + memMembrugrupId);\n    //this.selDomZonataraid  = event.detail.value; //this.register.get(\"domzonatara\").value;\n    var parentactiuneid : number = this.crtactiune.autActiuneId;\n    var grupactactiuniid : number = this.crtgrupact.autGrupactiuniId;\n    var actiuneParams = new ActiuneParametri();\n    var memMembruGrup = this.getSelectedMembruGrup(memMembrugrupId, this.grupmembri);\n    actiuneParams.setData(memMembruGrup);\n    //this.store.dispatch(new AuthAction.ActiuneSubactiuni(parentactiuneid, grupactactiuniid, this.crtgrupact, actiuneParams));\n  }\n\n\n  getSelectedMembruGrup(memMembrugrupId : number, arrmembrigrup : any) : any\n  {\n    var selMembruGrup = null;\n    //var crtMembruGrup = null;\n    for (let idx in arrmembrigrup)\n    {\n      var crtMembruGrup = arrmembrigrup[idx];\n      if (crtMembruGrup.memMembrugrupId == memMembrugrupId)\n      {\n        selMembruGrup = crtMembruGrup;\n        break;\n      }\n    }\n    return selMembruGrup;\n  }\n\n\n  onVizualizMemerea() {\n    if (this.frmVizualizMemerea.valid) \n    {\n      console.log(this.frmVizualizMemerea.value);\n      var memMembruTipRequestSchimbare : MemMembruTipRequest_Schimbare = new MemMembruTipRequest_Schimbare();\n      //---\n      memMembruTipRequestSchimbare.crtmemtipcod = \"MEMINCNFL\";\n\t    memMembruTipRequestSchimbare.newmemtipcod = \"MEMACTNFL\";\n      //---\n\t    memMembruTipRequestSchimbare.crtmemrolcod = \"MEMINCNFL\";\n\t    memMembruTipRequestSchimbare.newmemrolcod = \"MEMACTNFL\";\n      //---\n      this.store.dispatch(new AuthAction.MemMembruTipSchimbare(memMembruTipRequestSchimbare, this.token));\n\n    }\n  }\n\n  ngOnInit(){\n    //this.frmVizualizMem = new FormControl('', [Validators.required, Validators.email]);\n    console.log(this.crtactiune);\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button [text]=\\\"'backButtonTitle' | translate\\\" defaultHref=\\\"/aut/actiunesubactiuni\\\"></ion-back-button>\\n        </ion-buttons>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"person-circle\\\"></ion-icon>\\n      </ion-button>\\n      <!-- \\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n      -->\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button color=\\\"danger\\\">\\n        <ion-icon slot=\\\"icon-only\\\" ios=\\\"ellipsis-horizontal\\\" md=\\\"ellipsis-vertical\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Bine Ai Venit ! &nbsp; &nbsp; &nbsp; </ion-title>\\n  </ion-toolbar>  \\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n    \\n  <ng-container *ngIf=\\\"crtsubactiune$\\\">\\n        <h3>{{crtsubactiune.autActiuneDisplaynume}}</h3>\\n  </ng-container>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col class=\\\"ion-text-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n\\n      <ng-container *ngIf=\\\"crtsubactiuniparams$\\\">\\n      \\n        <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n          <ion-input type=\\\"text\\\" value=\\\"Nume: {{membru.userinfo.autUserInfoNume}}\\\" [readonly]=\\\"true\\\"></ion-input>\\n        </ion-item>\\n        <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n          <ion-input type=\\\"text\\\" value=\\\"Prenume: {{membru.userinfo.autUserInfoPrenume}}\\\" [readonly]=\\\"true\\\"></ion-input>\\n        </ion-item>\\n        <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n          <ion-input type=\\\"text\\\" value=\\\"Membru Cod Unic: {{membru.memMembrugrupMembrucodunic}}\\\" [readonly]=\\\"true\\\"></ion-input>\\n        </ion-item>\\n      </ng-container>\\n     </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\\n\\n</ion-content>\\n\";","export default \"\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VizualizMemPage } from './vizualizmem.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VizualizMemPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VizualizMemPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../../.././../shared/shared.module';\nimport { VizualizMemPage } from './vizualizmem.page';\nimport { VizualizMemPageRoutingModule } from './vizualizmem-routing.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, VizualizMemPageRoutingModule, SharedModule],\n  declarations: [VizualizMemPage],\n})\nexport class VizualizMemPageModule {}\n"]}