{"version":3,"sources":["webpack:///src/app/payloads/mem/MemMembruRequest_GrupulMeuVizualizare.ts","webpack:///src/app/pages/memafl/vizgrupmem/vizgrup/vizgrup.page.ts","webpack:///src/app/pages/memafl/vizgrupmem/vizgrup/vizgrup.page.html","webpack:///src/app/pages/memafl/vizgrupmem/vizgrup/vizgrup.page.scss","webpack:///src/app/pages/memafl/vizgrupmem/vizgrup/vizgrup-routing.module.ts","webpack:///src/app/pages/memafl/vizgrupmem/vizgrup/vizgrup.module.ts"],"names":["MemMembruRequest_GrupulMeuVizualizare","VizGrupPage","store","navController","platform","storage","frmVizGruperea","mesaj","crtgrupact","crtactiune","grupmembri$","grupmembri","infogrup$","memGrupRequestVizualizare","infogrup","self","this","getLocalStorageData","then","data","get","token","dispatch","subscribe","membriGrup","of","error","console","log","Promise","resolve","value","actiuneid","memMembrugrupId","arrmembrigrup","selMembruGrup","idx","crtMembruGrup","valid","memMembruTipRequestSchimbare","MemMembruTipRequest_Schimbare","crtmemtipcod","newmemtipcod","crtmemrolcod","newmemrolcod","selector","template","routes","path","component","VizGrupPageRoutingModule","imports","exports","VizGrupPageModule","declarations"],"mappings":"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","file":"x","sourcesContent":["export class MemMembruRequest_GrupulMeuVizualizare\r\n{\r\n\r\n    constructor(){\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { IonSelect, NavController, Platform } from '@ionic/angular';\nimport { Store } from '@ngxs/store';\nimport { Observable, of } from 'rxjs';\nimport { Storage } from '@ionic/storage';\nimport { MemMembruTipRequest_Schimbare } from '../../../../payloads/mem/MemMembruTipRequest_Schimbare';\nimport { AuthAction } from '../../../../core/auth-guard/auth-guard.actions';\nimport { MemGrupRequest_Vizualizare } from '../../../../payloads/mem/MemGrupRequest_Vizualizare';\nimport { ActiuneParametri } from '../../../../payloads/aut/ActiuneParametri';\nimport { MemMembruRequest_GrupulMeuVizualizare } from '../../../../payloads/mem/MemMembruRequest_GrupulMeuVizualizare';\n\n\n@Component({\n  selector: 'app-vizgrup',\n  templateUrl: './vizgrup.page.html',\n  styleUrls: ['./vizgrup.page.scss'],\n})\nexport class VizGrupPage implements OnInit {\n\n  frmVizGruperea: FormGroup = new FormGroup(\n    {\n       mesaj: new FormControl('Trimite Confirmarea Cererii de a deveni Membru',[]),// [Validators.required, Validators.minLength(8), Validators.maxLength(16)]),\n    });\n  crtgrupact = null;\n  crtactiune : any = null;\n  loginResponse : any;\n  token : string;\n  grupmembri$ : Observable<any> = null;\n  grupmembri  : any = null;\n  infogrup$ : Observable<any> = null;\n  memGrupRequestVizualizare : MemMembruRequest_GrupulMeuVizualizare = new MemMembruRequest_GrupulMeuVizualizare();\n  infogrup : any = null; //.gruinfogrupp infogrup.membriGrup infogrup.sefGrup infogrup.membru\n\n  constructor(private store: Store, private navController: NavController, private platform: Platform, private storage: Storage)  \n  {\n    var self = this;\n\n    //this.confirmsimact = null;\n    var self = this;\n    this.getLocalStorageData()\n            .then(async data =>{\n              data = await self.storage.get(\"token\");\n              while (data == null) \n                data = await this.storage.get(\"token\");\n              //---\n              self.token = <string>(data);\n\n              //---------------------------\n              var storageResultKey = \"grupmembri\";\n              this.store.dispatch(new AuthAction.MemMembruGrupulMeuVizualizare(\n                                        self.memGrupRequestVizualizare, self.token, storageResultKey)).subscribe(async () => \n              {\n                //console.log('Call Action Mem Grup Vizualizare: ');\n                \n                var data = await this.storage.get(storageResultKey);\n                while (data == null) \n                  data = await this.storage.get(storageResultKey);\n                //---\n                self.grupmembri = data.membriGrup;\n                self.infogrup   = data; \n                self.infogrup$   = data; \n                self.grupmembri$ = of(data.membriGrup);\n          \n                var data = await this.storage.get(\"crtgrupact\");\n                while (data == null) \n                  data = await this.storage.get(\"crtgrupact\");\n                //---\n                self.crtgrupact = data;\n\n              },\n              error => {\n                console.log('Error Calling Action Vizualizare Grup: ' + error);\n              }\n              );          \n              //------------------------\n            })\n  }\n\n  getLocalStorageData(){\n    var self =this;\n    return new Promise(resolve => {\n      self.storage.get(\"crtactiune\")\n        .then( value => \n            { \n              self.crtactiune = value;\n              console.log(value);\n              resolve(value);\n            });\n            \n         });\n    }\n\n  done() {\n    /**\n    if (this.frmVizGrup.valid) {\n      console.log(this.frmVizGrup.value);\n    }*/\n  }\n\n  selectieFaActiune(actiuneid : number) {\n      console.log(\"selectie fa actiune : \" + actiuneid);\n  }\n\n  selectieMembruGrup(memMembrugrupId : number) \n  {\n    console.log(\"selectie membru grup id:\" + memMembrugrupId);\n    return;\n    //this.selDomZonataraid  = event.detail.value; //this.register.get(\"domzonatara\").value;\n    var parentactiuneid : number = this.crtactiune.autActiuneId;\n    var grupactactiuniid : number = this.crtgrupact.autGrupactiuniId;\n    var subactiuniParams = new ActiuneParametri();\n    var memMembruGrup = this.getSelectedMembruGrup(memMembrugrupId, this.grupmembri);\n    subactiuniParams.setData(memMembruGrup);\n    subactiuniParams.title = memMembruGrup.userinfo.autUserInfoNume + \" \" + memMembruGrup.userinfo.autUserInfoPrenume;\n    //this.storage.set(\"crtsubactiuniparams\", subactiuniParams);\n    //this.storage.set(\"backaction\",\"/sefgrup/gestgrup/vizgrup\");\n    var backaction = \"/sefgrup/gestgrup/vizgrup\";\n    this.store.dispatch(new AuthAction.ActiuneSubactiuni(parentactiuneid, grupactactiuniid, this.crtgrupact, \n                        subactiuniParams, backaction));\n  }\n\n\n  getSelectedMembruGrup(memMembrugrupId : number, arrmembrigrup : any) : any\n  {\n    var selMembruGrup = null;\n    //var crtMembruGrup = null;\n    for (let idx in arrmembrigrup)\n    {\n      var crtMembruGrup = arrmembrigrup[idx];\n      if (crtMembruGrup.memMembrugrupId == memMembrugrupId)\n      {\n        selMembruGrup = crtMembruGrup;\n        break;\n      }\n    }\n    return selMembruGrup;\n  }\n\n\n  onVizGruperea() {\n    if (this.frmVizGruperea.valid) \n    {\n      console.log(this.frmVizGruperea.value);\n      var memMembruTipRequestSchimbare : MemMembruTipRequest_Schimbare = new MemMembruTipRequest_Schimbare();\n      //---\n      memMembruTipRequestSchimbare.crtmemtipcod = \"MEMINCNFL\";\n\t    memMembruTipRequestSchimbare.newmemtipcod = \"MEMACTNFL\";\n      //---\n\t    memMembruTipRequestSchimbare.crtmemrolcod = \"MEMINCNFL\";\n\t    memMembruTipRequestSchimbare.newmemrolcod = \"MEMACTNFL\";\n      //---\n      this.store.dispatch(new AuthAction.MemMembruTipSchimbare(memMembruTipRequestSchimbare, this.token));\n\n    }\n  }\n\n  ngOnInit(){\n    //this.frmVizGrup = new FormControl('', [Validators.required, Validators.email]);\n    console.log(this.crtactiune);\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button [text]=\\\"'backButtonTitle' | translate\\\" defaultHref=\\\"/aut/grupactactiuni\\\"></ion-back-button>\\n        </ion-buttons>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"person-circle\\\"></ion-icon>\\n      </ion-button>\\n      <!-- \\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n      -->\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button color=\\\"danger\\\">\\n        <ion-icon slot=\\\"icon-only\\\" ios=\\\"ellipsis-horizontal\\\" md=\\\"ellipsis-vertical\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Bine Ai Venit ! &nbsp; &nbsp; &nbsp; </ion-title>\\n  </ion-toolbar>  \\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n   \\n  <!-- List of Text Items -->\\n      <ng-container *ngIf=\\\"crtactiune\\\">\\n        <h3>{{crtactiune.autActiuneDisplaynume}}</h3>\\n     </ng-container>\\n    <!-- \\n     <ion-grid>\\n      <ion-row>\\n        <ion-col class=\\\"ion-text-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <form [formGroup]=\\\"frmVizGruperea\\\" (ngSubmit)=\\\"onVizGruperea()\\\">\\n            <ion-card color=\\\"light\\\" class=\\\"auth-card ion-margin\\\">\\n              <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n                <ion-input type=\\\"text\\\" [readonly]=\\\"true\\\" placeholder=\\\"Trimite Confirmarea pentru a deveni Membru Activ Neafiliat\\\" formControlName=\\\"mesaj\\\"></ion-input>\\n              </ion-item>\\n            </ion-card>\\n  \\n            <ion-button\\n              expand=\\\"block\\\"\\n              class=\\\"ion-margin-start ion-margin-end ion-margin-bottom\\\"\\n              type=\\\"submit\\\"\\n              [disabled]=\\\"!frmVizGruperea.valid\\\"\\n            >\\n              Confirmare Cerere Membru Activ\\n            </ion-button>\\n            <span class=\\\"ion-margin\\\"></span>\\n          </form>\\n  \\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  -->\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col class=\\\"ion-text-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n    <ng-container *ngIf=\\\"grupmembri$\\\">\\n      \\n        <ng-container *ngIf=\\\"infogrup$\\\">\\n        <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n          <ion-input type=\\\"text\\\" value=\\\"Nume Grup: {{infogrup.grup.memGrupNume}}\\\" [readonly]=\\\"true\\\"></ion-input>\\n          \\n        </ion-item>\\n        <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n          <ion-input type=\\\"text\\\" value=\\\"Grup Cod Unic: {{infogrup.grup.memGrupCodunic}}\\\" [readonly]=\\\"true\\\"></ion-input>\\n          \\n        </ion-item>\\n        <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n          <ion-input type=\\\"text\\\" value=\\\"Șef Grup: {{infogrup.sefGrup.userinfo.autUserInfoNume}} {{infogrup.sefGrup.userinfo.autUserInfoPrenume}}\\\" [readonly]=\\\"true\\\"></ion-input>\\n          \\n        </ion-item>\\n      </ng-container>\\n        <ion-list>\\n          <ion-item>Componența:</ion-item>\\n          <ion-item button=\\\"true\\\" detail *ngFor='let grupmembru of (grupmembri$|async); let idx=index;' \\n                                        (click)=\\\"selectieMembruGrup(grupmembru.memMembrugrupId)\\\">\\n            <ion-label>\\n              <h2>{{idx+1}}. {{grupmembru.userinfo.autUserInfoNume}} {{grupmembru.userinfo.autUserInfoPrenume}}</h2>\\n              <p>Nume utilizator: {{grupmembru.memMembrugrupUsernume}}</p>\\n            </ion-label>\\n          </ion-item>\\n        </ion-list>\\n\\n\\n   </ng-container>\\n</ion-col>\\n</ion-row>\\n</ion-grid>\\n   \\n    <!--\\n      <ng-container *ngIf=\\\"grupmembri$\\\">\\n      <ion-select placeholder=\\\"Membri Grup\\\" formControlName=\\\"selmembrigrup\\\" (ionChange)=\\\"selectieMembruGrup($event)\\\">\\n         <ion-select-option value=\\\"{{grupmembru.memMembrugrupUserid}}\\\" *ngFor='let grupmembru of (grupmembri$|async)'>{{grupmembru.memMembrugrupUsernume}}</ion-select-option>\\n    </ion-select>\\n    </ng-container>              \\n  -->\\n\\n</ion-content>\\n\";","export default \"\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VizGrupPage } from './vizgrup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VizGrupPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VizGrupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../../.././../shared/shared.module';\nimport { VizGrupPage } from './vizgrup.page';\nimport { VizGrupPageRoutingModule } from './vizgrup-routing.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, VizGrupPageRoutingModule, SharedModule],\n  declarations: [VizGrupPage],\n})\nexport class VizGrupPageModule {}\n"]}