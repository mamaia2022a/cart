{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-col_3.entry.js"],"names":["SIZE_TO_MEDIA","matchBreakpoint","breakpoint","window","matchMedia","mediaQuery","matches","win","SUPPORTS_VARS","CSS","supports","BREAKPOINTS","Col","hostRef","r","this","property","matched","columns","charAt","toUpperCase","slice","getColumns","colSize","modifier","isRTL","calculatePosition","document","dir","mode","h","H","class","style","Object","assign","calculateOffset","calculatePull","calculatePush","calculateSize","Grid","fixed","Row"],"mappings":"4rDAGMA,EAAgB,CACpB,GAAM,mBACN,GAAM,qBACN,GAAM,qBACN,GAAM,qBACN,GAAM,uBAKFC,EAAmBC,YACvB,YAAIA,GAA2C,KAAfA,EAC9B,OAAM,EAER,GAAIC,OAAOC,WAAY,CACrB,IAAMC,EAAaL,EAAcE,GACjC,OAAOC,OAAOC,WAAWC,GAAYC,QAEvC,OAAM,GAKFC,EAAMJ,OACNK,KAAmBD,EAAIE,KAAOF,EAAIE,IAAIC,UAAYH,EAAIE,IAAIC,SAAS,WACnEC,EAAc,CAAC,GAAI,KAAM,KAAM,KAAM,KAAM,MAC3CC,EAAG,WACP,WAAYC,GAAQ,WAARA,EACV,EAAAC,GAAiBC,KAAMF,GAFlB,kCAIP,cACE,KAAYE,QALP,wBASP,SAAWC,GACT,IAAIC,EADc,MAEON,GAFP,IAElB,2BAAsC,CAAC,IAA5BT,EAA2B,QAC9BI,EAAUL,EAAgBC,GAG1BgB,EAAUH,KAAKC,EAAWd,EAAWiB,OAAO,GAAGC,cAAgBlB,EAAWmB,MAAM,IAClFf,YAAWY,IACbD,EAAUC,IARI,8BAalB,OAAOD,IAtBF,2BAwBP,WACE,IAAMC,EAAUH,KAAKO,WAAW,QAKhC,GAAKJ,GAAuB,KAAZA,EAAhB,CAIA,IAAMK,EAAuB,SAAZL,EACb,OAEAV,EAAa,oBAAgBU,EAAhB,2CAGTA,EAAU,GAAM,IAAO,IAC/B,MAAO,CACL,mBAAeK,GACf,gBAAYA,GACZ,sBAAgBA,OA5Cb,+BAgDP,SAAkBP,EAAUQ,GAC1B,IAAMN,EAAUH,KAAKO,WAAWN,GAChC,GAAKE,EAWL,OAAO,EAAP,GACGM,EAPYhB,EAAa,oBAEXU,EAFW,2CAKvBA,EAAU,GAAKA,EAAU,GAAOA,EAAU,GAAK,IAAO,IAAM,UA5D5D,6BAiEP,SAAgBO,GACd,OAAOV,KAAKW,kBAAkB,SAAUD,EAAQ,eAAiB,iBAlE5D,2BAoEP,SAAcA,GACZ,OAAOV,KAAKW,kBAAkB,OAAQD,EAAQ,OAAS,WArElD,2BAuEP,SAAcA,GACZ,OAAOV,KAAKW,kBAAkB,OAAQD,EAAQ,QAAU,UAxEnD,oBA0EP,WACE,IAAMA,EAAyB,QAAjBE,SAASC,IACjBC,KAAO,KAAWd,MACxB,OAAM,EAAE,EAAAe,GAAE,EAAAC,EAAM,CAAEC,WACbH,GAAM,GACNI,MAAOC,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,GAAIpB,KAAKqB,gBAAgBX,IAASV,KAAKsB,cAAcZ,IAASV,KAAKuB,cAAcb,IAASV,KAAKwB,qBAAoB,EAAAT,GAAE,OAAQ,WA/E5L,KAkFTlB,EAAIqB,MAvFW,+/IAyFf,IAEMO,EAAI,WACR,WAAY3B,GAAQ,WAARA,EACV,EAAAC,GAAiBC,KAAMF,GAIvBE,KAAK0B,SANC,gCAQR,WAAQ,MACAZ,KAAO,KAAWd,MACxB,OAAM,EAAE,EAAAe,GAAE,EAAAC,EAAM,CAAEC,gBACbH,GAAM,GADOG,IAEd,aAAcjB,KAAK0B,OAFLT,KAEKS,EAChB,EAAAX,GAAE,OAAQ,WAbX,KAgBVU,EAAKP,MAlBW,yuJAoBhB,IAEMS,EAAG,WACP,WAAY7B,GAAQ,WAARA,EACV,EAAAC,GAAiBC,KAAMF,GAFlB,gCAIP,WACE,OAAM,EAAE,EAAAiB,GAAE,EAAAC,EAAM,CAAEC,OAAM,EAAC,KAAWjB,UAAS,EAAAe,GAAE,OAAQ,WALlD,KAQTY,EAAIT,MAVW,gF","file":"x","sourcesContent":["import { r as registerInstance, j as forceUpdate, h, H as Host } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\n\r\nconst SIZE_TO_MEDIA = {\r\n  'xs': '(min-width: 0px)',\r\n  'sm': '(min-width: 576px)',\r\n  'md': '(min-width: 768px)',\r\n  'lg': '(min-width: 992px)',\r\n  'xl': '(min-width: 1200px)',\r\n};\r\n// Check if the window matches the media query\r\n// at the breakpoint passed\r\n// e.g. matchBreakpoint('sm') => true if screen width exceeds 576px\r\nconst matchBreakpoint = (breakpoint) => {\r\n  if (breakpoint === undefined || breakpoint === '') {\r\n    return true;\r\n  }\r\n  if (window.matchMedia) {\r\n    const mediaQuery = SIZE_TO_MEDIA[breakpoint];\r\n    return window.matchMedia(mediaQuery).matches;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst colCss = \":host{padding-left:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;width:100%;max-width:100%;min-height:1px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px))}}@media (min-width: 576px){:host{padding-left:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 768px){:host{padding-left:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 992px){:host{padding-left:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 1200px){:host{padding-left:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px))}}}\";\r\n\r\nconst win = window;\r\nconst SUPPORTS_VARS = !!(win.CSS && win.CSS.supports && win.CSS.supports('--a: 0'));\r\nconst BREAKPOINTS = ['', 'xs', 'sm', 'md', 'lg', 'xl'];\r\nconst Col = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n  }\r\n  onResize() {\r\n    forceUpdate(this);\r\n  }\r\n  // Loop through all of the breakpoints to see if the media query\r\n  // matches and grab the column value from the relevant prop if so\r\n  getColumns(property) {\r\n    let matched;\r\n    for (const breakpoint of BREAKPOINTS) {\r\n      const matches = matchBreakpoint(breakpoint);\r\n      // Grab the value of the property, if it exists and our\r\n      // media query matches we return the value\r\n      const columns = this[property + breakpoint.charAt(0).toUpperCase() + breakpoint.slice(1)];\r\n      if (matches && columns !== undefined) {\r\n        matched = columns;\r\n      }\r\n    }\r\n    // Return the last matched columns since the breakpoints\r\n    // increase in size and we want to return the largest match\r\n    return matched;\r\n  }\r\n  calculateSize() {\r\n    const columns = this.getColumns('size');\r\n    // If size wasn't set for any breakpoint\r\n    // or if the user set the size without a value\r\n    // it means we need to stick with the default and return\r\n    // e.g. <ion-col size-md>\r\n    if (!columns || columns === '') {\r\n      return;\r\n    }\r\n    // If the size is set to auto then don't calculate a size\r\n    const colSize = (columns === 'auto')\r\n      ? 'auto'\r\n      // If CSS supports variables we should use the grid columns var\r\n      : SUPPORTS_VARS ? `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\r\n        // Convert the columns to a percentage by dividing by the total number\r\n        // of columns (12) and then multiplying by 100\r\n        : ((columns / 12) * 100) + '%';\r\n    return {\r\n      'flex': `0 0 ${colSize}`,\r\n      'width': `${colSize}`,\r\n      'max-width': `${colSize}`\r\n    };\r\n  }\r\n  // Called by push, pull, and offset since they use the same calculations\r\n  calculatePosition(property, modifier) {\r\n    const columns = this.getColumns(property);\r\n    if (!columns) {\r\n      return;\r\n    }\r\n    // If the number of columns passed are greater than 0 and less than\r\n    // 12 we can position the column, else default to auto\r\n    const amount = SUPPORTS_VARS\r\n      // If CSS supports variables we should use the grid columns var\r\n      ? `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\r\n      // Convert the columns to a percentage by dividing by the total number\r\n      // of columns (12) and then multiplying by 100\r\n      : (columns > 0 && columns < 12) ? (columns / 12 * 100) + '%' : 'auto';\r\n    return {\r\n      [modifier]: amount\r\n    };\r\n  }\r\n  calculateOffset(isRTL) {\r\n    return this.calculatePosition('offset', isRTL ? 'margin-right' : 'margin-left');\r\n  }\r\n  calculatePull(isRTL) {\r\n    return this.calculatePosition('pull', isRTL ? 'left' : 'right');\r\n  }\r\n  calculatePush(isRTL) {\r\n    return this.calculatePosition('push', isRTL ? 'right' : 'left');\r\n  }\r\n  render() {\r\n    const isRTL = document.dir === 'rtl';\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { class: {\r\n        [mode]: true\r\n      }, style: Object.assign(Object.assign(Object.assign(Object.assign({}, this.calculateOffset(isRTL)), this.calculatePull(isRTL)), this.calculatePush(isRTL)), this.calculateSize()) }, h(\"slot\", null)));\r\n  }\r\n};\r\nCol.style = colCss;\r\n\r\nconst gridCss = \":host{padding-left:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));margin-left:auto;margin-right:auto;display:block;-ms-flex:1;flex:1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px))}}@media (min-width: 576px){:host{padding-left:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px))}}}@media (min-width: 768px){:host{padding-left:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px))}}}@media (min-width: 992px){:host{padding-left:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px))}}}@media (min-width: 1200px){:host{padding-left:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px))}}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.grid-fixed){width:var(--ion-grid-width-xs, var(--ion-grid-width, 100%));max-width:100%}@media (min-width: 576px){:host(.grid-fixed){width:var(--ion-grid-width-sm, var(--ion-grid-width, 540px))}}@media (min-width: 768px){:host(.grid-fixed){width:var(--ion-grid-width-md, var(--ion-grid-width, 720px))}}@media (min-width: 992px){:host(.grid-fixed){width:var(--ion-grid-width-lg, var(--ion-grid-width, 960px))}}@media (min-width: 1200px){:host(.grid-fixed){width:var(--ion-grid-width-xl, var(--ion-grid-width, 1140px))}}:host(.ion-no-padding){--ion-grid-column-padding:0;--ion-grid-column-padding-xs:0;--ion-grid-column-padding-sm:0;--ion-grid-column-padding-md:0;--ion-grid-column-padding-lg:0;--ion-grid-column-padding-xl:0}\";\r\n\r\nconst Grid = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /**\r\n     * If `true`, the grid will have a fixed width based on the screen size.\r\n     */\r\n    this.fixed = false;\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { class: {\r\n        [mode]: true,\r\n        'grid-fixed': this.fixed\r\n      } }, h(\"slot\", null)));\r\n  }\r\n};\r\nGrid.style = gridCss;\r\n\r\nconst rowCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}\";\r\n\r\nconst Row = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n  }\r\n  render() {\r\n    return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\r\n  }\r\n};\r\nRow.style = rowCss;\r\n\r\nexport { Col as ion_col, Grid as ion_grid, Row as ion_row };\r\n"]}