{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","webpack:///node_modules/@ionic/core/dist/esm/index-9e3fe806.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","webpack:///node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","webpack:///src/app/payloads/aut/ActiuneParametri.ts","webpack:///src/app/payloads/mem/MemGrupRequest_Vizualizare.ts","webpack:///src/app/payloads/mem/MemMembruTipRequest_Schimbare.ts"],"names":["createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","classList","add","dispatchClick","remove","click","undefined","createGesture","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","h","attachComponent","async","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","Object","assign","appendChild","Promise","resolve","detachComponent","element","parentElement","removeViewFromDom","HapticEngine","win","window","Capacitor","isPluginAvailable","Plugins","Haptics","this","getEngine","isCordova","TapticEngine","isCapacitor","options","engine","style","toUpperCase","impact","notification","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","selection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","sanitizeDOMString","untrustedString","value","isSanitizerEnabled","documentFragment","createDocumentFragment","workingDiv","innerHTML","blockedTags","blockedTag","getElementsToRemove","querySelectorAll","elementIndex","length","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","querySelector","err","console","error","nodeType","i","attributes","attribute","item","attributeName","name","allowedAttributes","includes","toLowerCase","removeAttribute","attributeValue","children","childNodes","config","Ionic","get","sanitizerEnabled","SPINNERS","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","hostContext","selector","closest","createColorClasses","color","cssClassMap","getClassMap","classes","map","Array","isArray","split","filter","trim","SCHEME","openURL","url","direction","animation","test","router","preventDefault","push","ActiuneParametri","params","MemGrupRequest_Vizualizare","MemMembruTipRequest_Schimbare"],"mappings":"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","file":"x","sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\r\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\r\nimport { createGesture } from './index-f49d994d.js';\r\n\r\nconst createButtonActiveGesture = (el, isButton) => {\r\n  let currentTouchedButton;\r\n  let initialTouchedButton;\r\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\r\n    if (typeof document === 'undefined') {\r\n      return;\r\n    }\r\n    const target = document.elementFromPoint(x, y);\r\n    if (!target || !isButton(target)) {\r\n      clearActiveButton();\r\n      return;\r\n    }\r\n    if (target !== currentTouchedButton) {\r\n      clearActiveButton();\r\n      setActiveButton(target, hapticFeedbackFn);\r\n    }\r\n  };\r\n  const setActiveButton = (button, hapticFeedbackFn) => {\r\n    currentTouchedButton = button;\r\n    if (!initialTouchedButton) {\r\n      initialTouchedButton = currentTouchedButton;\r\n    }\r\n    const buttonToModify = currentTouchedButton;\r\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\r\n    hapticFeedbackFn();\r\n  };\r\n  const clearActiveButton = (dispatchClick = false) => {\r\n    if (!currentTouchedButton) {\r\n      return;\r\n    }\r\n    const buttonToModify = currentTouchedButton;\r\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\r\n    /**\r\n     * Clicking on one button, but releasing on another button\r\n     * does not dispatch a click event in browsers, so we\r\n     * need to do it manually here. Some browsers will\r\n     * dispatch a click if clicking on one button, dragging over\r\n     * another button, and releasing on the original button. In that\r\n     * case, we need to make sure we do not cause a double click there.\r\n     */\r\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\r\n      currentTouchedButton.click();\r\n    }\r\n    currentTouchedButton = undefined;\r\n  };\r\n  return createGesture({\r\n    el,\r\n    gestureName: 'buttonActiveDrag',\r\n    threshold: 0,\r\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\r\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\r\n    onEnd: () => {\r\n      clearActiveButton(true);\r\n      hapticSelectionEnd();\r\n      initialTouchedButton = undefined;\r\n    }\r\n  });\r\n};\r\n\r\nexport { createButtonActiveGesture as c };\r\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\r\n\r\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n  if (delegate) {\r\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n  }\r\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n    throw new Error('framework delegate is missing');\r\n  }\r\n  const el = (typeof component === 'string')\r\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n    : component;\r\n  if (cssClasses) {\r\n    cssClasses.forEach(c => el.classList.add(c));\r\n  }\r\n  if (componentProps) {\r\n    Object.assign(el, componentProps);\r\n  }\r\n  container.appendChild(el);\r\n  await new Promise(resolve => componentOnReady(el, resolve));\r\n  return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n  if (element) {\r\n    if (delegate) {\r\n      const container = element.parentElement;\r\n      return delegate.removeViewFromDom(container, element);\r\n    }\r\n    element.remove();\r\n  }\r\n  return Promise.resolve();\r\n};\r\n\r\nexport { attachComponent as a, detachComponent as d };\r\n","const HapticEngine = {\r\n  getEngine() {\r\n    const win = window;\r\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\r\n  },\r\n  available() {\r\n    return !!this.getEngine();\r\n  },\r\n  isCordova() {\r\n    return !!window.TapticEngine;\r\n  },\r\n  isCapacitor() {\r\n    const win = window;\r\n    return !!win.Capacitor;\r\n  },\r\n  impact(options) {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n    engine.impact({ style });\r\n  },\r\n  notification(options) {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n    engine.notification({ style });\r\n  },\r\n  selection() {\r\n    this.impact({ style: 'light' });\r\n  },\r\n  selectionStart() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionStart();\r\n    }\r\n    else {\r\n      engine.gestureSelectionStart();\r\n    }\r\n  },\r\n  selectionChanged() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionChanged();\r\n    }\r\n    else {\r\n      engine.gestureSelectionChanged();\r\n    }\r\n  },\r\n  selectionEnd() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionEnd();\r\n    }\r\n    else {\r\n      engine.gestureSelectionEnd();\r\n    }\r\n  }\r\n};\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n  HapticEngine.selection();\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n  HapticEngine.selectionStart();\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n  HapticEngine.selectionChanged();\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n  HapticEngine.selectionEnd();\r\n};\r\n/**\r\n * Use this to indicate success/failure/warning to the user.\r\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\r\n */\r\nconst hapticImpact = (options) => {\r\n  HapticEngine.impact(options);\r\n};\r\n\r\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\r\n","/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\r\nconst sanitizeDOMString = (untrustedString) => {\r\n  try {\r\n    if (untrustedString instanceof IonicSafeString) {\r\n      return untrustedString.value;\r\n    }\r\n    if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\r\n      return untrustedString;\r\n    }\r\n    /**\r\n     * Create a document fragment\r\n     * separate from the main DOM,\r\n     * create a div to do our work in\r\n     */\r\n    const documentFragment = document.createDocumentFragment();\r\n    const workingDiv = document.createElement('div');\r\n    documentFragment.appendChild(workingDiv);\r\n    workingDiv.innerHTML = untrustedString;\r\n    /**\r\n     * Remove any elements\r\n     * that are blocked\r\n     */\r\n    blockedTags.forEach(blockedTag => {\r\n      const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\r\n      for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\r\n        const element = getElementsToRemove[elementIndex];\r\n        if (element.parentNode) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        else {\r\n          documentFragment.removeChild(element);\r\n        }\r\n        /**\r\n         * We still need to sanitize\r\n         * the children of this element\r\n         * as they are left behind\r\n         */\r\n        const childElements = getElementChildren(element);\r\n        /* tslint:disable-next-line */\r\n        for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\r\n          sanitizeElement(childElements[childIndex]);\r\n        }\r\n      }\r\n    });\r\n    /**\r\n     * Go through remaining elements and remove\r\n     * non-allowed attribs\r\n     */\r\n    // IE does not support .children on document fragments, only .childNodes\r\n    const dfChildren = getElementChildren(documentFragment);\r\n    /* tslint:disable-next-line */\r\n    for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\r\n      sanitizeElement(dfChildren[childIndex]);\r\n    }\r\n    // Append document fragment to div\r\n    const fragmentDiv = document.createElement('div');\r\n    fragmentDiv.appendChild(documentFragment);\r\n    // First child is always the div we did our work in\r\n    const getInnerDiv = fragmentDiv.querySelector('div');\r\n    return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\r\n  }\r\n  catch (err) {\r\n    console.error(err);\r\n    return '';\r\n  }\r\n};\r\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\r\nconst sanitizeElement = (element) => {\r\n  // IE uses childNodes, so ignore nodes that are not elements\r\n  if (element.nodeType && element.nodeType !== 1) {\r\n    return;\r\n  }\r\n  for (let i = element.attributes.length - 1; i >= 0; i--) {\r\n    const attribute = element.attributes.item(i);\r\n    const attributeName = attribute.name;\r\n    // remove non-allowed attribs\r\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\r\n      element.removeAttribute(attributeName);\r\n      continue;\r\n    }\r\n    // clean up any allowed attribs\r\n    // that attempt to do any JS funny-business\r\n    const attributeValue = attribute.value;\r\n    /* tslint:disable-next-line */\r\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\r\n      element.removeAttribute(attributeName);\r\n    }\r\n  }\r\n  /**\r\n   * Sanitize any nested children\r\n   */\r\n  const childElements = getElementChildren(element);\r\n  /* tslint:disable-next-line */\r\n  for (let i = 0; i < childElements.length; i++) {\r\n    sanitizeElement(childElements[i]);\r\n  }\r\n};\r\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\r\nconst getElementChildren = (el) => {\r\n  return (el.children != null) ? el.children : el.childNodes;\r\n};\r\nconst isSanitizerEnabled = () => {\r\n  const win = window;\r\n  const config = win && win.Ionic && win.Ionic.config;\r\n  if (config) {\r\n    if (config.get) {\r\n      return config.get('sanitizerEnabled', true);\r\n    }\r\n    else {\r\n      return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\r\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\r\nclass IonicSafeString {\r\n  constructor(value) {\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nexport { IonicSafeString as I, sanitizeDOMString as s };\r\n","const spinners = {\r\n  'bubbles': {\r\n    dur: 1000,\r\n    circles: 9,\r\n    fn: (dur, index, total) => {\r\n      const animationDelay = `${(dur * index / total) - dur}ms`;\r\n      const angle = 2 * Math.PI * index / total;\r\n      return {\r\n        r: 5,\r\n        style: {\r\n          'top': `${9 * Math.sin(angle)}px`,\r\n          'left': `${9 * Math.cos(angle)}px`,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'circles': {\r\n    dur: 1000,\r\n    circles: 8,\r\n    fn: (dur, index, total) => {\r\n      const step = index / total;\r\n      const animationDelay = `${(dur * step) - dur}ms`;\r\n      const angle = 2 * Math.PI * step;\r\n      return {\r\n        r: 5,\r\n        style: {\r\n          'top': `${9 * Math.sin(angle)}px`,\r\n          'left': `${9 * Math.cos(angle)}px`,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'circular': {\r\n    dur: 1400,\r\n    elmDuration: true,\r\n    circles: 1,\r\n    fn: () => {\r\n      return {\r\n        r: 20,\r\n        cx: 48,\r\n        cy: 48,\r\n        fill: 'none',\r\n        viewBox: '24 24 48 48',\r\n        transform: 'translate(0,0)',\r\n        style: {}\r\n      };\r\n    }\r\n  },\r\n  'crescent': {\r\n    dur: 750,\r\n    circles: 1,\r\n    fn: () => {\r\n      return {\r\n        r: 26,\r\n        style: {}\r\n      };\r\n    }\r\n  },\r\n  'dots': {\r\n    dur: 750,\r\n    circles: 3,\r\n    fn: (_, index) => {\r\n      const animationDelay = -(110 * index) + 'ms';\r\n      return {\r\n        r: 6,\r\n        style: {\r\n          'left': `${9 - (9 * index)}px`,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'lines': {\r\n    dur: 1000,\r\n    lines: 12,\r\n    fn: (dur, index, total) => {\r\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n      const animationDelay = `${(dur * index / total) - dur}ms`;\r\n      return {\r\n        y1: 17,\r\n        y2: 29,\r\n        style: {\r\n          'transform': transform,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'lines-small': {\r\n    dur: 1000,\r\n    lines: 12,\r\n    fn: (dur, index, total) => {\r\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n      const animationDelay = `${(dur * index / total) - dur}ms`;\r\n      return {\r\n        y1: 12,\r\n        y2: 20,\r\n        style: {\r\n          'transform': transform,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\nconst SPINNERS = spinners;\r\n\r\nexport { SPINNERS as S };\r\n","const hostContext = (selector, el) => {\r\n  return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color, cssClassMap) => {\r\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\r\n};\r\nconst getClassList = (classes) => {\r\n  if (classes !== undefined) {\r\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n    return array\r\n      .filter(c => c != null)\r\n      .map(c => c.trim())\r\n      .filter(c => c !== '');\r\n  }\r\n  return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n  const map = {};\r\n  getClassList(classes).forEach(c => map[c] = true);\r\n  return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction, animation) => {\r\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n    const router = document.querySelector('ion-router');\r\n    if (router) {\r\n      if (ev != null) {\r\n        ev.preventDefault();\r\n      }\r\n      return router.push(url, direction, animation);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\r\n","import { State } from \"@ngxs/store\";\r\n\r\nexport class ActiuneParametri\r\n{\r\n    params: any;\r\n    title : string;\r\n\r\n    constructor(){\r\n      this.params = null;\r\n    }\r\n\r\n    public setData(params: any)\r\n    {\r\n      this.params = params;\r\n    }\r\n\r\n    public getData() : any\r\n    {\r\n      return this.params;\r\n    }\r\n\r\n}\r\n","export class MemGrupRequest_Vizualizare\r\n{\r\n\r\n    constructor(){\r\n    }\r\n}\r\n","export class MemMembruTipRequest_Schimbare\r\n{\r\n\tcrtmemtipcod : string;\r\n\tnewmemtipcod : string;\r\n\r\n\tcrtmemrolcod : string;\r\n\tnewmemrolcod : string;\r\n\r\n    constructor(){\r\n    }\r\n}\r\n"]}