{"version":3,"sources":["webpack:///src/app/pages/aut/logout/logout.page.ts","webpack:///src/app/pages/aut/logout/logout.page.html","webpack:///src/app/pages/aut/logout/logout.page.scss","webpack:///src/app/pages/aut/logout/logout-routing.module.ts","webpack:///src/app/pages/aut/logout/logout.module.ts"],"names":["LogoutPage","storage","store","logout","logoutMessage","this","getLocalStorageData","then","data","self","Promise","resolve","get","value","loginResponse","console","log","dispatch","selector","template","routes","path","component","LogoutPageRoutingModule","imports","exports","LogoutPageModule","declarations"],"mappings":"oQAaaA,EAAU,MAQrB,YAAoBC,EAA0BC,GAA1B,KAAAD,UAA0B,KAAAC,QAN9C,KAAAC,OAAoB,IAAI,KACtB,CACEC,cAAe,IAAI,KAAY,GAAI,CAAC,cAAqB,eAAqB,SAOhFC,KAAKC,sBACJC,KAAKC,OAKR,sBAEE,IAAIC,EAAMJ,KACV,OAAO,IAAIK,QAAQC,IACnBF,EAAKR,QAAQW,IAAI,iBAChBL,KAAMM,IAEHJ,EAAKK,cAAgBD,EACrBE,QAAQC,IAAIH,GACZF,EAAQE,OAMd,WAEIE,QAAQC,IAAIX,KAAKF,OAAOU,OACxBR,KAAKH,MAAMe,SAAS,IAAI,WAAkBZ,KAAKS,eAAe,IAIlE,c,4BAjDO,K,MACA,OASId,GAAU,UAPtB,SAAU,CACTkB,SAAU,aACVC,SCRF,g2C,QCAA,OFaanB,G,eGTb,MAAMoB,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAWtB,I,IAQFuB,EAAuB,QAAvBA,GAAuB,UAJnC,SAAS,CACRC,QAAS,CAAC,cAAsBJ,IAChCK,QAAS,CAAC,SAECF,G,ICFAG,EAAgB,QAAhBA,GAAgB,UAJ5B,SAAS,CACRF,QAAS,CAAC,KAAc,KAAa,KAAaD,EAAyB,KAC3EI,aAAc,CAAC3B,MAEJ0B","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { AuthAction } from '../../../core/auth-guard/auth-guard.actions';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Store } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.page.html',\r\n  styleUrls: ['./logout.page.scss'],\r\n})\r\n\r\n\r\nexport class LogoutPage implements OnInit {\r\n  loginResponse: any;\r\n  logout: FormGroup = new FormGroup( \r\n    {\r\n      logoutMessage: new FormControl('', [Validators.required, Validators.maxLength(150)]),\r\n    },\r\n  );\r\n\r\n  constructor(private storage: Storage, private store: Store)\r\n  {\r\n\r\n    this.getLocalStorageData()\r\n    .then(data =>{\r\n          //ok\r\n    })\r\n  }\r\n\r\n  getLocalStorageData()\r\n  {\r\n    var self =this;\r\n    return new Promise(resolve => {\r\n    self.storage.get(\"loginresponse\")\r\n    .then( value => \r\n      { \r\n        self.loginResponse = value;\r\n        console.log(value);\r\n        resolve(value);\r\n      });\r\n      \r\n    });\r\n  }\r\n\r\n  onLogout() {\r\n    //if (this.logout.valid) {\r\n      console.log(this.logout.value);\r\n      this.store.dispatch(new AuthAction.Logout(this.loginResponse, false));\r\n    //}\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"dark\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button [text]=\\\"'backButtonTitle' | translate\\\" defaultHref=\\\"/auth/login\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Logout &nbsp; &nbsp; &nbsp; </ion-title>\\r\\n  </ion-toolbar>  \\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"auth-page\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col class=\\\"ion-text-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n        <form [formGroup]=\\\"logout\\\" (ngSubmit)=\\\"onLogout()\\\">\\r\\n\\r\\n          <ion-card color=\\\"light\\\" class=\\\"auth-card ion-margin\\\">\\r\\n            <ion-item color=\\\"light\\\">\\r\\n              <p>Sunteți sigur că doriți să vă Delogați?</p>\\r\\n              <ion-input type=\\\"hidden\\\" placeholder=\\\"Nume\\\" formControlName=\\\"logoutMessage\\\" value=\\\"Sunteți sigur că doriți să vă Delogați?\\\"></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-card>\\r\\n\\r\\n          <ion-button\\r\\n            expand=\\\"block\\\"\\r\\n            class=\\\"ion-margin-start ion-margin-end ion-margin-bottom\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            \\r\\n          >\\r\\n            Logout\\r\\n          </ion-button>\\r\\n          <span class=\\\"ion-margin\\\"></span>\\r\\n        </form>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","export default \"\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogoutPage } from './logout.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogoutPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogoutPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { LogoutPage } from './logout.page';\r\nimport { LogoutPageRoutingModule } from './logout-routing.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, LogoutPageRoutingModule, SharedModule],\r\n  declarations: [LogoutPage],\r\n})\r\nexport class LogoutPageModule {}\r\n"]}