{"version":3,"sources":["webpack:///src/app/payloads/aut/RegisterRequest.ts","webpack:///src/app/pages/auth/register/register.page.ts","webpack:///src/app/pages/auth/register/register.page.html","webpack:///src/app/pages/auth/register/register.page.scss","webpack:///src/app/pages/auth/register/register-routing.module.ts","webpack:///src/app/pages/auth/register/register.module.ts"],"names":["RegisterRequest","RegisterPage","store","navController","platform","storage","register","username","password","passwordConfirm","nume","prenume","telefon","email","sex","domzonatara","domjudet","domlocalitate","domcodpostal","domadresa","validators","this","passwordConfirmMatchValidator","zonetara$","domjudete$","domjudete","domlocalitati$","domlocalitati","rezjudete$","rezjudete","rezlocalitati$","rezlocalitati","loadZonetara","storageResultKey","self","dispatch","subscribe","data","get","of","error","console","log","zonataraid","judetid","event","detail","value","selDomZonataraid","selDomJudetid","loadJudete","loadLocalitati","selDomLocalitateid","selRezZonataraid","selRezJudetid","selRezLocalitateid","valid","registerRequest","domZonataraid","domJudetid","domLocalitateid","domCodpostal","domAdresa","g","hasError","setErrors","mismatch","selector","template","routes","path","component","RegisterPageRoutingModule","imports","exports","RegisterPageModule","declarations"],"mappings":"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","file":"x","sourcesContent":["export class RegisterRequest\r\n{\r\n\r\n\tusername:string;\r\n\r\n\tpassword:string;\r\n\r\n\tuserinfoid:number;\r\n\r\n\tuserid:number;\r\n\r\n\tnume:string;\r\n\r\n\tprenume:string;\r\n\r\n\ttelefon:string;\r\n\r\n\tsex:string;\r\n\r\n\temail:string;\r\n\r\n\tdomZonataraid:string;\r\n\tdomZonataracod:string;\r\n\r\n\tdomJudetid:number;\r\n\tdomJudetcod:string;\r\n\r\n\tdomLocalitateid:number;\r\n\tdomLocalitatecod:string;\r\n\r\n\tdomCodpostal:string;\r\n\r\n\tdomAdresa:string;\r\n\r\n    rezdifdedom:string;\r\n\r\n\trezZonataraid:string;\r\n\r\n\trezZonataracod:string;\r\n\r\n\trezJudetid:string;\r\n\r\n\trezJudetcod:string;\r\n\r\n\trezLocalitateid:string;\r\n\r\n\trezLocalitatecod:string;\r\n\r\n\trezCodpostal:string;\r\n\r\n\trezAdresa:string;\r\n\r\n\r\n    constructor(){\r\n    \r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { AuthAction } from '../../../core/auth-guard/auth-guard.actions';\nimport { RegisterRequest } from '../../../payloads/aut/RegisterRequest';\nimport { NavController, Platform } from '@ionic/angular';\nimport { Store } from '@ngxs/store';\nimport { Observable, of } from 'rxjs';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  register: FormGroup = new FormGroup(\n    {\n       username: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(150)]),\n       password: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(150)]),\n       passwordConfirm: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(150)]),\n       nume: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n       prenume: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n       telefon: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n       email: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n       sex: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n       domzonatara: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n       domjudet: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n       domlocalitate: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n       domcodpostal: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n       domadresa: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n    },\n    { validators: this.passwordConfirmMatchValidator },\n  );\n\n  //obsActionRegister: Observable<any>;\n  //obsActionJudete: Observable<any>;\n\n  zonetara$ : Observable<any> = null;\n  \n  //------------- pentru domiciliu\n  selDomZonataraid : number ;\n  \n  domjudete$ : Observable<any> = null;\n  domjudete : Array<any> = null;\n\n  selDomJudetid : number ;\n\n  domlocalitati$ : Observable<any> = null;\n  domlocalitati : Array<any> = null;\n\n  selDomLocalitateid : number ;\n\n  //------------- pentru rezidenta \n  selRezZonataraid : number ;\n\n  rezjudete$ : Observable<any> = null;\n  rezjudete : Array<any> = null;\n\n  selRezJudetid : number ;\n\n  rezlocalitati$ : Observable<any> = null;\n  rezlocalitati : Array<any> = null;\n\n  selRezLocalitateid : number ;\n\n\n  constructor(private store: Store, private navController: NavController, private platform: Platform, private storage: Storage) \n  {\n    this.loadZonetara(\"zonetara\");\n  }  \n\n\n  loadZonetara(storageResultKey: string) \n  {\n    var self = this;\n    this.store.dispatch(new AuthAction.GeoZonetara(storageResultKey)).subscribe(async () => {\n      //console.log('Call Action GeoZonetara: ');\n      var data = null;\n      {\n        data = await this.storage.get(storageResultKey);\n        if (data == null) \n          data = await this.storage.get(storageResultKey);\n        //---\n        self.zonetara$ = of(data);        \n      }\n    },\n    error => {\n      console.log('Error Calling Action GeoZoneTara: ' + error);\n    }\n    );\n  }\n\n\n  loadJudete(zonataraid : number, storageResultKey: string) \n  {\n    var self = this;\n    this.store.dispatch(new AuthAction.GeoJudete(zonataraid, storageResultKey)).subscribe(async () => {\n      console.log('Call Action GeoJudete: ');\n      var data = await this.storage.get(storageResultKey);\n      if (data == null) \n      {\n        data = await this.storage.get(storageResultKey);\n      }\n      //---\n      if (storageResultKey == \"domjudete\")\n        self.domjudete$ = of(data);      \n      else if (storageResultKey == \"rezjudete\")\n        self.rezjudete$ = of(data);      \n\n    },\n    error => {\n      console.log('Error Calling Action GeoJudete: ' + error);\n    }\n    );\n  }\n\n\n  loadLocalitati(zonataraid : number, judetid : number, storageResultKey: string) \n  {\n    var self = this;\n    this.store.dispatch(new AuthAction.GeoLocalitati(zonataraid, judetid, storageResultKey)).subscribe(async () => {\n      console.log('Call Action GeoLocalitati: ');\n      var data = await this.storage.get(storageResultKey);\n      if (data == null) \n      {\n        data = await this.storage.get(storageResultKey);\n      }\n      //---\n      if (storageResultKey == \"domlocalitati\")\n        self.domlocalitati$ = of(data);      \n      else if (storageResultKey == \"rezlocalitati\")\n        self.rezlocalitati$ = of(data);      \n\n    },\n    error => {\n      console.log('Error Calling Action GeoLocalitati: ' + error);\n    }\n    );\n  }  \n\n\n  selectieDomZonatara(event : any) \n  {\n    console.log(\"selectie dom zona tara id:\" + event.detail.value);\n    this.selDomZonataraid  = event.detail.value; //this.register.get(\"domzonatara\").value;\n    console.log(this.selDomJudetid);\n    this.loadJudete(this.selDomZonataraid, \"domjudete\");\n  }\n\n\n  selectieDomJudet(event : any) \n  {\n    console.log(\"selectie dom judet id:\" + event.detail.value);\n    this.selDomJudetid  = event.detail.value; //this.register.get(\"domjudet\").value;\n    console.log(this.selDomJudetid);\n    this.loadLocalitati(this.selDomZonataraid, this.selDomJudetid, \"domlocalitati\");\n  }\n\n\n  selectieDomLocalitate(event : any) \n  {\n    console.log(\"selectie dom localitate id:\" + event.detail.value);\n    this.selDomLocalitateid  = event.detail.value; //this.register.get(\"domjudet\").value;\n    console.log(this.selDomLocalitateid);\n  }\n\n\n  selectieRezZonatara(event : any) \n  {\n    console.log(\"selectie rez zona tara id:\" + event.detail.value);\n    this.selRezZonataraid  = event.detail.value; //this.register.get(\"domzonatara\").value;\n    console.log(this.selDomJudetid);\n    this.loadJudete(this.selRezZonataraid, \"rezjudete\");\n  }\n\n\n  selectieRezJudet(event : any) \n  {\n    console.log(\"selectie rez judet id:\" + event.detail.value);\n    this.selRezJudetid  = event.detail.value; //this.register.get(\"domjudet\").value;\n    console.log(this.selDomJudetid);\n    this.loadLocalitati(this.selRezZonataraid, this.selRezJudetid, \"rezlocalitati\");\n  }\n\n\n  selectieRezLocalitate(event : any) \n  {\n    console.log(\"selectie rez localitate id:\" + event.detail.value);\n    this.selRezLocalitateid  = event.detail.value; //this.register.get(\"domjudet\").value;\n    console.log(this.selRezLocalitateid);\n  }\n\n\n  onRegister() {\n    if (this.register.valid) {\n      console.log(this.register.value);\n      var registerRequest : RegisterRequest = new RegisterRequest();\n      registerRequest.username         = this.register.get(\"username\").value;\n      registerRequest.password         = this.register.get(\"password\").value;\n      registerRequest.nume             = this.register.get(\"nume\").value;\n      registerRequest.prenume          = this.register.get(\"prenume\").value;\n      registerRequest.telefon          = this.register.get(\"telefon\").value;\n      registerRequest.email            = this.register.get(\"email\").value;\n      registerRequest.sex              = this.register.get(\"sex\").value;\n      registerRequest.domZonataraid    = this.register.get(\"domzonatara\").value;\n      registerRequest.domJudetid       = this.register.get(\"domjudet\").value;\n      registerRequest.domLocalitateid  = this.register.get(\"domlocalitate\").value;\n      registerRequest.domCodpostal     = this.register.get(\"domcodpostal\").value;\n      registerRequest.domAdresa        = this.register.get(\"domadresa\").value;\n\n      this.store.dispatch(new AuthAction.Register(registerRequest));\n      //this.obsActionRegister = this.store.dispatch(new AuthAction.Register(registerRequest));\n      /** \n      this.obsActionRegister.subscribe(\n        info => {\n          console.log('REGISTER: ' + info);\n        },\n        error => {\n          console.log('REGISTER ERROR: ' + error);\n        }\n      );*/\n\n    }\n  }\n\n  ngOnInit(): void {}\n\n  passwordConfirmMatchValidator(g: AbstractControl): ValidationErrors | null {\n    const password = g.get('password');\n    const passwordConfirm = g.get('passwordConfirm');\n\n    if (passwordConfirm.hasError('required') || passwordConfirm.hasError('minlength')) {\n      return;\n    }\n\n    if (password.value !== passwordConfirm.value) {\n      passwordConfirm.setErrors({\n        mismatch: true,\n      });\n    } else {\n      passwordConfirm.setErrors(null);\n    }\n  }\n \n\n      /*\n    this.judete.subscribe(judetee => \n    {\n      var judet = judetee[selIdx];\n      console.log(judet);\n    });*/\n\n    /** \n    var zonataraid : number = 1;\n    var self = this;\n    this.store.dispatch(new AuthAction.GeoJudete(zonataraid,\"domjudete\")).subscribe(async () => {\n      console.log('GEO JUDETE: ');\n      var data = await this.storage.get('judete');\n      if (data == null) \n      {\n        data = await this.storage.get('judete');\n      }\n      //---\n      self.judete = of(data);\n       \n      //self.getLocalStorageData()\n      //.then(data =>{\n      //  self.judete = of(data);\n      //})\n      \n    },\n    error => {\n      console.log('GEO JUDETE ERROR: ' + error);\n    }\n    );\n  }*/\n   \n    /**   \n    this.store.dispatch(new AuthAction.GeoJudete(zonataraid)).subscribe(\n        info => {\n          console.log('GEO JUDETE: ' + info);\n          this.getLocalStorageData()\n          .then(data =>{\n                //ok\n          })\n        },\n        error => {\n          console.log('GEO JUDETE ERROR: ' + error);\n        }\n      );\n      */\n\n  /** \n  getLocalStorageData(){\n    var self =this;\n    return new Promise(resolve => {\n      self.storage.get(\"judete\")\n        .then( value => \n            { \n              //if (value == null)\n                //return this.store.dispatch(new AuthAction.GeoJudete(1));\n              //self.judete = of(value);\n              //console.log(value);\n              resolve(value);\n            });\n            \n         });\n    }*/\n\n\n  /**\n  authUrl = \"https://sampleapi.herokuapp.com\"\n  authHeaders;\n\n  getToken() {\n  this.storage.get('token').then((token) => {\n    console.log('Bearer ' + token);\n    this.authHeaders = {\n      headers: new HttpHeaders({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n  }\n  });\n  }\n\n  getInfo(): Observable<Info> {\n  return this.http.get<Info>(this.authUrl + '/api/users/info', this.authHeaders).pipe(\n    catchError(this.handleError)\n  );\n  }\n\n  ionViewDidLoad() {\n    this._dashboardService.getToken();\n    this._dashboardService.getInfo().subscribe(\n      info => {\n        console.log('USER INFO: ' + info);\n        this.info = info\n      },\n      error => {\n        console.log('INFO ERROR: ' + error);\n      }\n    );\n    }\n    */\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button [text]=\\\"'backButtonTitle' | translate\\\" defaultHref=\\\"/auth/login\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Înregistrare</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"auth-page\\\">\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col class=\\\"ion-text-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n        <form [formGroup]=\\\"register\\\" (ngSubmit)=\\\"onRegister()\\\">\\n          <ion-card color=\\\"light\\\" class=\\\"auth-card ion-margin\\\">\\n            <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n              <ion-input type=\\\"text\\\" placeholder=\\\"Nume utilizator (minim 5)\\\" formControlName=\\\"username\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n              <ion-input type=\\\"password\\\" placeholder=\\\"Parola (minim 5)\\\" formControlName=\\\"password\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n              <ion-input type=\\\"password\\\" placeholder=\\\"Parola (confirmare)\\\" formControlName=\\\"passwordConfirm\\\">\\n              </ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ion-input type=\\\"text\\\" placeholder=\\\"Nume\\\" formControlName=\\\"nume\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ion-input type=\\\"text\\\" placeholder=\\\"Prenume\\\" formControlName=\\\"prenume\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ion-input type=\\\"text\\\" placeholder=\\\"Telefon\\\" formControlName=\\\"telefon\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ion-input type=\\\"text\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ion-select placeholder=\\\"Sexul\\\" formControlName=\\\"sex\\\">\\n                <ion-select-option value=\\\"f\\\">Feminin</ion-select-option>\\n                <ion-select-option value=\\\"m\\\">Masculin</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ng-container *ngIf=\\\"zonetara$\\\">\\n                <ion-select placeholder=\\\"Domiciliu în Țară sau în Diaspora?\\\" formControlName=\\\"domzonatara\\\" (ionChange)=\\\"selectieDomZonatara($event)\\\">\\n                   <ion-select-option value=\\\"{{zonatara.geoZonaTaraId}}\\\" *ngFor='let zonatara of (zonetara$|async)'>{{zonatara.geoZonaTaraNume}}</ion-select-option>\\n              </ion-select>\\n              </ng-container>              \\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ng-container *ngIf=\\\"domjudete$\\\">\\n                <ion-select placeholder=\\\"Județul de domiciliu\\\" formControlName=\\\"domjudet\\\" (ionChange)=\\\"selectieDomJudet($event)\\\">\\n                   <ion-select-option value=\\\"{{domjudet.geoJudetId}}\\\" *ngFor='let domjudet of (domjudete$|async)'>{{domjudet.geoJudetNume}}</ion-select-option>\\n              </ion-select>\\n              </ng-container>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ng-container *ngIf=\\\"domlocalitati$\\\">\\n                <ion-select placeholder=\\\"Județul de domiciliu\\\" formControlName=\\\"domjudet\\\" (ionChange)=\\\"selectieDomLocalitate($event)\\\">\\n                   <ion-select-option value=\\\"{{domlocalitate.geoLocalitateId}}\\\" *ngFor='let domlocalitate of (domlocalitati$|async)'>{{domlocalitate.geoLocalitateNume}}</ion-select-option>\\n              </ion-select>\\n              </ng-container>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ion-input type=\\\"text\\\" placeholder=\\\"Codul Postal la Domiciliu\\\" formControlName=\\\"domcodpostal\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"light\\\">\\n              <ion-input type=\\\"text\\\" placeholder=\\\"Adresa de Domiciliu\\\" formControlName=\\\"domadresa\\\"></ion-input>\\n            </ion-item>\\n\\n          </ion-card>\\n\\n          <ion-button\\n            expand=\\\"block\\\"\\n            class=\\\"ion-margin-start ion-margin-end ion-margin-bottom\\\"\\n            type=\\\"submit\\\"\\n            [disabled]=\\\"!register.valid\\\"\\n          >\\n            Înregistrare\\n          </ion-button>\\n          <span class=\\\"ion-margin\\\"></span>\\n        </form>\\n\\n        <p class=\\\"ion-margin\\\">\\n          <ion-text>\\n            Apăsând butonul \\\"Înregistrare\\\", sunteți de acord cu:\\n            <a href=\\\"http://\\\">Terms of Service</a>\\n            și cu:\\n            <a href=\\\"http://\\\">Privacy Policy</a>\\n          </ion-text>\\n        </p>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { RegisterPage } from './register.page';\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, RegisterPageRoutingModule, SharedModule],\n  declarations: [RegisterPage],\n})\nexport class RegisterPageModule {}\n"]}