{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-spinner.entry.js"],"names":["Spinner","hostRef","r","this","paused","spinnerName","name","c","mode","getName","spinner","S","duration","dur","svgs","undefined","circles","i","push","buildCircle","lines","buildLine","h","H","class","color","role","style","elmDuration","animationDuration","index","total","data","fn","viewBox","transform","cx","cy","y1","y2"],"mappings":"sMAKA,MAEMA,EAAU,MACd,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,GAIvBE,KAAKC,QAAS,EAEhB,UACE,MAAMC,EAAcF,KAAKG,MAAQ,EAAAC,EAAA,IAAW,WACtCC,GAAO,OAAWL,MACxB,OAAIE,IAGa,QAATG,EAAkB,QAAU,YAEtC,SACE,MACMA,GAAO,OADAL,MAEPE,EAFOF,KAEYM,UACnBC,EAAU,EAAAC,EAASN,IAAgB,EAAAM,EAAA,MACnCC,EAAqC,iBAJ9BT,KAIiBS,UAJjBT,KAI+CS,SAAW,GAJ1DT,KAIoES,SAAWF,EAAQG,IAC9FC,EAAO,GACb,QAAwBC,IAApBL,EAAQM,QACV,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQM,QAASC,IACnCH,EAAKI,KAAKC,EAAYT,EAASE,EAAUK,EAAGP,EAAQM,eAGnD,QAAsBD,IAAlBL,EAAQU,MACf,IAAK,IAAIH,EAAI,EAAGA,EAAIP,EAAQU,MAAOH,IACjCH,EAAKI,KAAKG,EAAUX,EAASE,EAAUK,EAAGP,EAAQU,QAGtD,OAAQ,IAAAE,GAAE,EAAAC,EAAM,CAAEC,OAAO,IAAAjB,GAhBZJ,KAgBoCsB,MAAO,CACpD,CAACjB,IAAO,EACR,CAAC,WAAWH,MAAgB,EAC5B,mBAnBSF,KAmBgBC,QAAU,EAAAG,EAAA,WAAkB,cACnDmB,KAAM,cAAeC,MAAOjB,EAAQkB,YAAc,CAAEC,kBAAmBjB,EAAW,MAAS,IAAME,KAGrGK,EAAc,CAACT,EAASE,EAAUkB,EAAOC,KAC7C,MAAMC,EAAOtB,EAAQuB,GAAGrB,EAAUkB,EAAOC,GAEzC,OADAC,EAAKL,MAAM,sBAAwBf,EAAW,MACtC,IAAAU,GAAE,MAAO,CAAEY,QAASF,EAAKE,SAAW,YAAaP,MAAOK,EAAKL,QAAS,IAAAL,GAAE,SAAU,CAAEa,UAAWH,EAAKG,WAAa,mBAAoBC,GAAIJ,EAAKI,GAAIC,GAAIL,EAAKK,GAAInC,EAAG8B,EAAK9B,EAAGyB,MAAOjB,EAAQkB,YAAc,CAAEC,kBAAmBjB,EAAW,MAAS,OAEpPS,EAAY,CAACX,EAASE,EAAUkB,EAAOC,KAC3C,MAAMC,EAAOtB,EAAQuB,GAAGrB,EAAUkB,EAAOC,GAEzC,OADAC,EAAKL,MAAM,sBAAwBf,EAAW,MACtC,IAAAU,GAAE,MAAO,CAAEY,QAASF,EAAKE,SAAW,YAAaP,MAAOK,EAAKL,QAAS,IAAAL,GAAE,OAAQ,CAAEa,UAAW,mBAAoBG,GAAIN,EAAKM,GAAIC,GAAIP,EAAKO,OAEjJvC,EAAQ2B,MApDW","file":"x","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-7a8b7a1c.js';\r\nimport { c as config, b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\r\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\r\n\r\nconst spinnerCss = \":host{display:inline-block;position:relative;width:28px;height:28px;color:var(--color);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.ion-color){color:var(--ion-color-base)}svg{left:0;top:0;-webkit-transform-origin:center;transform-origin:center;position:absolute;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0)}[dir=rtl] svg,:host-context([dir=rtl]) svg{left:unset;right:unset;right:0}[dir=rtl] svg,:host-context([dir=rtl]) svg{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}:host(.spinner-lines) line,:host(.spinner-lines-small) line{stroke-width:4px;stroke-linecap:round;stroke:currentColor}:host(.spinner-lines) svg,:host(.spinner-lines-small) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite}:host(.spinner-bubbles) svg{-webkit-animation:spinner-scale-out 1s linear infinite;animation:spinner-scale-out 1s linear infinite;fill:currentColor}:host(.spinner-circles) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite;fill:currentColor}:host(.spinner-crescent) circle{fill:transparent;stroke-width:4px;stroke-dasharray:128px;stroke-dashoffset:82px;stroke:currentColor}:host(.spinner-crescent) svg{-webkit-animation:spinner-rotate 1s linear infinite;animation:spinner-rotate 1s linear infinite}:host(.spinner-dots) circle{stroke-width:0;fill:currentColor}:host(.spinner-dots) svg{-webkit-animation:spinner-dots 1s linear infinite;animation:spinner-dots 1s linear infinite}:host(.spinner-circular){-webkit-animation:spinner-circular linear infinite;animation:spinner-circular linear infinite}:host(.spinner-circular) circle{-webkit-animation:spinner-circular-inner ease-in-out infinite;animation:spinner-circular-inner ease-in-out infinite;stroke:currentColor;stroke-dasharray:80px, 200px;stroke-dashoffset:0px;stroke-width:5.6;fill:none}:host(.spinner-paused),:host(.spinner-paused) svg,:host(.spinner-paused) circle{-webkit-animation-play-state:paused;animation-play-state:paused}@-webkit-keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@-webkit-keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@-webkit-keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@-webkit-keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}@keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}\";\r\n\r\nconst Spinner = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /**\r\n     * If `true`, the spinner's animation will be paused.\r\n     */\r\n    this.paused = false;\r\n  }\r\n  getName() {\r\n    const spinnerName = this.name || config.get('spinner');\r\n    const mode = getIonMode(this);\r\n    if (spinnerName) {\r\n      return spinnerName;\r\n    }\r\n    return (mode === 'ios') ? 'lines' : 'circular';\r\n  }\r\n  render() {\r\n    const self = this;\r\n    const mode = getIonMode(self);\r\n    const spinnerName = self.getName();\r\n    const spinner = SPINNERS[spinnerName] || SPINNERS['lines'];\r\n    const duration = (typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur);\r\n    const svgs = [];\r\n    if (spinner.circles !== undefined) {\r\n      for (let i = 0; i < spinner.circles; i++) {\r\n        svgs.push(buildCircle(spinner, duration, i, spinner.circles));\r\n      }\r\n    }\r\n    else if (spinner.lines !== undefined) {\r\n      for (let i = 0; i < spinner.lines; i++) {\r\n        svgs.push(buildLine(spinner, duration, i, spinner.lines));\r\n      }\r\n    }\r\n    return (h(Host, { class: createColorClasses(self.color, {\r\n        [mode]: true,\r\n        [`spinner-${spinnerName}`]: true,\r\n        'spinner-paused': !!self.paused || config.getBoolean('_testing')\r\n      }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\r\n  }\r\n};\r\nconst buildCircle = (spinner, duration, index, total) => {\r\n  const data = spinner.fn(duration, index, total);\r\n  data.style['animation-duration'] = duration + 'ms';\r\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\r\n};\r\nconst buildLine = (spinner, duration, index, total) => {\r\n  const data = spinner.fn(duration, index, total);\r\n  data.style['animation-duration'] = duration + 'ms';\r\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\r\n};\r\nSpinner.style = spinnerCss;\r\n\r\nexport { Spinner as ion_spinner };\r\n"]}