{"version":3,"sources":["webpack:///src/app/pages/auth/auth-pin/auth-pin.page.ts","webpack:///src/app/pages/auth/auth-pin/auth-pin.animation.ts","webpack:///src/app/pages/auth/auth-pin/auth-pin-routing.module.ts","webpack:///src/app/pages/auth/auth-pin/auth-pin.page.html","webpack:///src/app/pages/auth/auth-pin/auth-pin.page.scss","webpack:///src/app/pages/auth/auth-pin/auth-pin.module.ts"],"names":["AuthPinPage","pinLength","pinRange","Array","this","fill","pin","fingerPrintAvailable","digits","area","dig","length","push","baseEl","document","getElementById","addElement","easing","duration","keyframes","offset","transform","play","pop","console","log","routes","path","component","selector","template","AuthPinPageRoutingModule","imports","exports","AuthPinPageModule","declarations"],"mappings":"kfAQaA,EAAW,WAwBtB,aAAa,UAvBb,KAAAC,UAAY,EACZ,KAAAC,SAAWC,MAAMC,KAAKH,WAAWI,UAAK,GACtC,KAAAC,IAAgB,GAChB,KAAAC,wBAEA,KAAAC,OAAgB,CACd,CAAEC,KAAM,SAAUH,IAAK,GACvB,CAAEG,KAAM,SAAUH,IAAK,GACvB,CAAEG,KAAM,SAAUH,IAAK,GACvB,CAAEG,KAAM,SAAUH,IAAK,GACvB,CAAEG,KAAM,SAAUH,IAAK,GACvB,CAAEG,KAAM,SAAUH,IAAK,GACvB,CAAEG,KAAM,SAAUH,IAAK,GACvB,CAAEG,KAAM,SAAUH,IAAK,GACvB,CAAEG,KAAM,SAAUH,IAAK,GACvB,CAAEG,MAAK,GACP,CAAEA,KAAM,SAAUH,IAAK,GACvB,CAAEG,KAAM,aACR,CAAEA,MAAK,GACP,CAAEA,KAAM,UACR,CAAEA,MAAK,I,UArBa,O,EAAA,G,EAAA,4BA0BhB,SAAcC,G,oKACdN,KAAKE,IAAIK,OAASP,KAAKH,U,wBAI3BG,KAAKE,IAAIM,KAAKF,EAAIJ,K,KAEdF,KAAKE,IAAIK,SAAWP,KAAKH,W,qBAAAA,O,UCpCFY,EDqCJC,SAASC,eAAe,sBCpCjC,QACbC,WAAWH,GACXI,OAAO,YACPC,SAAS,KACTC,UAAU,CACT,CAAEC,OAAQ,EAAGC,UAAW,mBACxB,CAAED,OAAQ,GAAKC,UAAW,uBAC1B,CAAED,OAAQ,GAAKC,UAAW,sBAC1B,CAAED,OAAQ,GAAKC,UAAW,uBAC1B,CAAED,OAAQ,GAAKC,UAAW,sBAC1B,CAAED,OAAQ,GAAKC,UAAW,uBAC1B,CAAED,OAAQ,GAAKC,UAAW,sBAC1B,CAAED,OAAQ,GAAKC,UAAW,sBAC1B,CAAED,OAAQ,GAAKC,UAAW,qBAC1B,CAAED,OAAQ,EAAGC,UAAW,sBDsByCC,O,OACjElB,KAAKE,IAAM,G,gDAnCO,2BAuCtB,WACEF,KAAKE,IAAIiB,QAxCW,iCA2CtB,WACEC,QAAQC,IAAI,yBA5CQ,sBA+CtB,iB,2BA/CsB,K,sCEHxB,IAAMC,EAAiB,CACrB,CACEC,KAAM,GACNC,UFAS5B,KAAW,UALvB,OAAU,CACT6B,SAAU,eACVC,SGLF,0yF,QCAA,w3BJQa9B,KEQA+B,EAAwB,wBAAxBA,KAAwB,UAJpC,OAAS,CACRC,QAAS,CAAC,cAAsBN,IAChCO,QAAS,CAAC,SAECF,G,IGJAG,EAAiB,wBAAjBA,KAAiB,UAJ7B,OAAS,CACRF,QAAS,CAAC,KAAcD,EAA0B,KAClDI,aAAc,CAACnC,MAEJkC,O","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { shakeAnimation } from './auth-pin.animation';\r\n\r\n@Component({\r\n  selector: 'app-auth-pin',\r\n  templateUrl: './auth-pin.page.html',\r\n  styleUrls: ['./auth-pin.page.scss'],\r\n})\r\nexport class AuthPinPage implements OnInit {\r\n  pinLength = 6;\r\n  pinRange = Array(this.pinLength).fill(undefined);\r\n  pin: number[] = [];\r\n  fingerPrintAvailable = true;\r\n\r\n  digits: any[] = [\r\n    { area: 'number', pin: 1 },\r\n    { area: 'number', pin: 2 },\r\n    { area: 'number', pin: 3 },\r\n    { area: 'number', pin: 4 },\r\n    { area: 'number', pin: 5 },\r\n    { area: 'number', pin: 6 },\r\n    { area: 'number', pin: 7 },\r\n    { area: 'number', pin: 8 },\r\n    { area: 'number', pin: 9 },\r\n    { area: false },\r\n    { area: 'number', pin: 0 },\r\n    { area: 'backspace' },\r\n    { area: false },\r\n    { area: 'finger' },\r\n    { area: false },\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  async passwordClick(dig) {\r\n    if (this.pin.length > this.pinLength) {\r\n      return;\r\n    }\r\n\r\n    this.pin.push(dig.pin);\r\n\r\n    if (this.pin.length === this.pinLength) {\r\n      await shakeAnimation(document.getElementById('shake-animation')).play();\r\n      this.pin = [];\r\n    }\r\n  }\r\n\r\n  passwordClear() {\r\n    this.pin.pop();\r\n  }\r\n\r\n  fingerPrintActivate() {\r\n    console.log('fingerPrintActivate');\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { createAnimation } from '@ionic/angular';\r\n\r\n/**\r\n * Shake anumation\r\n */\r\nexport const shakeAnimation = (baseEl: any) => {\r\n  const squareA = createAnimation()\r\n    .addElement(baseEl)\r\n    .easing('ease-out')\r\n    .duration(800)\r\n    .keyframes([\r\n      { offset: 0, transform: 'translate(0, 0)' },\r\n      { offset: 0.1, transform: 'translate(-25px, 0)' },\r\n      { offset: 0.2, transform: 'translate(25px, 0)' },\r\n      { offset: 0.3, transform: 'translate(-20px, 0)' },\r\n      { offset: 0.4, transform: 'translate(20px, 0)' },\r\n      { offset: 0.5, transform: 'translate(-10px, 0)' },\r\n      { offset: 0.6, transform: 'translate(10px, 0)' },\r\n      { offset: 0.7, transform: 'translate(-5px, 0)' },\r\n      { offset: 0.8, transform: 'translate(5px, 0)' },\r\n      { offset: 1, transform: 'translate(0, 0)' },\r\n    ]);\r\n\r\n  return squareA;\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthPinPage } from './auth-pin.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthPinPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthPinPageRoutingModule {}\r\n","export default \"<ion-content>\\r\\n  <ion-grid class=\\\"ion-no-padding\\\">\\r\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n      <ion-col size=\\\"12\\\" size-sm=\\\"6\\\" size-lg=\\\"12\\\" class=\\\"ion-align-self-center ion-text-center\\\">\\r\\n        <p>\\r\\n          <ion-icon name=\\\"lock-closed\\\" color=\\\"dark\\\" size=\\\"large\\\"></ion-icon>\\r\\n        </p>\\r\\n        <p>\\r\\n          <ion-text color=\\\"dark\\\"> {{'authPin' | translate: { app_name: 'Tk' } }} </ion-text>\\r\\n        </p>\\r\\n        <div id=\\\"shake-animation\\\">\\r\\n          <ion-icon\\r\\n            class=\\\"ion-margin-end\\\"\\r\\n            *ngFor=\\\"let _ of pinRange; let i = index\\\"\\r\\n            [name]=\\\"pin[i] !== undefined ? 'ellipse' : 'ellipse-outline'\\\"\\r\\n            [color]=\\\"pin[i] !== undefined ? 'primary' : 'dark'\\\"\\r\\n          >\\r\\n          </ion-icon>\\r\\n        </div>\\r\\n        <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" class=\\\"finger-print-button showsm-hidelg\\\" *ngIf=\\\"fingerPrintAvailable\\\">\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"finger-print-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"12\\\" size-sm=\\\"6\\\" size-lg=\\\"12\\\" class=\\\"ion-no-margin ion-no-padding digit-coll-position\\\">\\r\\n        <ion-row class=\\\"digit-max-width\\\">\\r\\n          <ion-col size=\\\"4\\\" class=\\\"ion-align-self-center ion-text-center\\\" *ngFor=\\\"let dig of digits\\\">\\r\\n            <ng-container [ngSwitch]=\\\"dig.area\\\">\\r\\n              <!-- Clear area -->\\r\\n              <ng-container *ngSwitchCase=\\\"false\\\"></ng-container>\\r\\n\\r\\n              <!-- Finger print activate button -->\\r\\n              <ng-container *ngSwitchCase=\\\"'finger'\\\">\\r\\n                <ion-button\\r\\n                  color=\\\"medium\\\"\\r\\n                  fill=\\\"clear\\\"\\r\\n                  class=\\\"finger-print-button hidesm-showlg\\\"\\r\\n                  *ngIf=\\\"fingerPrintAvailable\\\"\\r\\n                >\\r\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"finger-print-outline\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Clear button -->\\r\\n              <ng-container *ngSwitchCase=\\\"'backspace'\\\">\\r\\n                <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" class=\\\"clear-button\\\" (click)=\\\"passwordClear()\\\">\\r\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"backspace-outline\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Digits -->\\r\\n              <ng-container *ngSwitchDefault>\\r\\n                <ion-button color=\\\"light\\\" class=\\\"digit-button\\\" (click)=\\\"passwordClick(dig)\\\">\\r\\n                  <ion-text style=\\\"font-size: 22px\\\"> {{dig.pin}} </ion-text>\\r\\n                </ion-button>\\r\\n              </ng-container>\\r\\n            </ng-container>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","export default \"ion-grid {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\nion-row {\\n  height: 100%;\\n}\\n\\n.digit-max-width {\\n  max-width: 320px;\\n  margin: auto;\\n}\\n\\n@media (min-width: 992px) {\\n  .digit-max-width {\\n    max-width: 576px !important;\\n  }\\n}\\n\\n.digit-button {\\n  --box-shadow: none;\\n}\\n\\n.digit-button,\\n.clear-button,\\n.finger-print-button {\\n  width: 70px;\\n  height: 70px;\\n  --border-radius: 64px;\\n}\\n\\n.digit-coll-position {\\n  align-self: flex-end;\\n}\\n\\n@media (min-width: 576px) {\\n  .digit-coll-position {\\n    align-self: center !important;\\n  }\\n}\\n\\n.hidesm-showlg {\\n  display: inline-block;\\n}\\n\\n@media (min-width: 576px) and (max-width: 992px) {\\n  .hidesm-showlg {\\n    display: none !important;\\n  }\\n}\\n\\n.showsm-hidelg {\\n  display: none;\\n}\\n\\n@media (min-width: 576px) and (max-width: 992px) {\\n  .showsm-hidelg {\\n    display: inline-block !important;\\n  }\\n}\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { AuthPinPageRoutingModule } from './auth-pin-routing.module';\r\n\r\nimport { AuthPinPage } from './auth-pin.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AuthPinPageRoutingModule, SharedModule],\r\n  declarations: [AuthPinPage],\r\n})\r\nexport class AuthPinPageModule {}\r\n"]}