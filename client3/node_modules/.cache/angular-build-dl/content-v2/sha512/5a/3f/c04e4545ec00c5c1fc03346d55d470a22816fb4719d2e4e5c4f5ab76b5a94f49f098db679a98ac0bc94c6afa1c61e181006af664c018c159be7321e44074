(self.webpackChunkcart2=self.webpackChunkcart2||[]).push([[7223],{27223:function(n,i,t){"use strict";t.r(i),t.d(i,{AuthPinPageModule:function(){return d}});var e=t(64762),o=t(62272),a=t(38583),r=t(44466),s=t(26096),l=t(76461);let c=class{constructor(){this.pinLength=6,this.pinRange=Array(this.pinLength).fill(void 0),this.pin=[],this.fingerPrintAvailable=!0,this.digits=[{area:"number",pin:1},{area:"number",pin:2},{area:"number",pin:3},{area:"number",pin:4},{area:"number",pin:5},{area:"number",pin:6},{area:"number",pin:7},{area:"number",pin:8},{area:"number",pin:9},{area:!1},{area:"number",pin:0},{area:"backspace"},{area:!1},{area:"finger"},{area:!1}]}passwordClick(n){return(0,e.mG)(this,void 0,void 0,function*(){var i;this.pin.length>this.pinLength||(this.pin.push(n.pin),this.pin.length===this.pinLength&&(yield(i=document.getElementById("shake-animation"),(0,l.ih)().addElement(i).easing("ease-out").duration(800).keyframes([{offset:0,transform:"translate(0, 0)"},{offset:.1,transform:"translate(-25px, 0)"},{offset:.2,transform:"translate(25px, 0)"},{offset:.3,transform:"translate(-20px, 0)"},{offset:.4,transform:"translate(20px, 0)"},{offset:.5,transform:"translate(-10px, 0)"},{offset:.6,transform:"translate(10px, 0)"},{offset:.7,transform:"translate(-5px, 0)"},{offset:.8,transform:"translate(5px, 0)"},{offset:1,transform:"translate(0, 0)"}])).play(),this.pin=[]))})}passwordClear(){this.pin.pop()}fingerPrintActivate(){console.log("fingerPrintActivate")}ngOnInit(){}};c.ctorParameters=()=>[],c=(0,e.gn)([(0,o.wA2)({selector:"app-auth-pin",template:'<ion-content>\n  <ion-grid class="ion-no-padding">\n    <ion-row class="ion-justify-content-center">\n      <ion-col size="12" size-sm="6" size-lg="12" class="ion-align-self-center ion-text-center">\n        <p>\n          <ion-icon name="lock-closed" color="dark" size="large"></ion-icon>\n        </p>\n        <p>\n          <ion-text color="dark"> {{\'authPin\' | translate: { app_name: \'Tk\' } }} </ion-text>\n        </p>\n        <div id="shake-animation">\n          <ion-icon\n            class="ion-margin-end"\n            *ngFor="let _ of pinRange; let i = index"\n            [name]="pin[i] !== undefined ? \'ellipse\' : \'ellipse-outline\'"\n            [color]="pin[i] !== undefined ? \'primary\' : \'dark\'"\n          >\n          </ion-icon>\n        </div>\n        <ion-button color="medium" fill="clear" class="finger-print-button showsm-hidelg" *ngIf="fingerPrintAvailable">\n          <ion-icon slot="icon-only" name="finger-print-outline"></ion-icon>\n        </ion-button>\n      </ion-col>\n      <ion-col size="12" size-sm="6" size-lg="12" class="ion-no-margin ion-no-padding digit-coll-position">\n        <ion-row class="digit-max-width">\n          <ion-col size="4" class="ion-align-self-center ion-text-center" *ngFor="let dig of digits">\n            <ng-container [ngSwitch]="dig.area">\n              \x3c!-- Clear area --\x3e\n              <ng-container *ngSwitchCase="false"></ng-container>\n\n              \x3c!-- Finger print activate button --\x3e\n              <ng-container *ngSwitchCase="\'finger\'">\n                <ion-button\n                  color="medium"\n                  fill="clear"\n                  class="finger-print-button hidesm-showlg"\n                  *ngIf="fingerPrintAvailable"\n                >\n                  <ion-icon slot="icon-only" name="finger-print-outline"></ion-icon>\n                </ion-button>\n              </ng-container>\n\n              \x3c!-- Clear button --\x3e\n              <ng-container *ngSwitchCase="\'backspace\'">\n                <ion-button color="medium" fill="clear" class="clear-button" (click)="passwordClear()">\n                  <ion-icon slot="icon-only" name="backspace-outline"></ion-icon>\n                </ion-button>\n              </ng-container>\n\n              \x3c!-- Digits --\x3e\n              <ng-container *ngSwitchDefault>\n                <ion-button color="light" class="digit-button" (click)="passwordClick(dig)">\n                  <ion-text style="font-size: 22px"> {{dig.pin}} </ion-text>\n                </ion-button>\n              </ng-container>\n            </ng-container>\n          </ion-col>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n',styles:["ion-grid {\n  width: 100%;\n  height: 100%;\n}\n\nion-row {\n  height: 100%;\n}\n\n.digit-max-width {\n  max-width: 320px;\n  margin: auto;\n}\n\n@media (min-width: 992px) {\n  .digit-max-width {\n    max-width: 576px !important;\n  }\n}\n\n.digit-button {\n  --box-shadow: none;\n}\n\n.digit-button,\n.clear-button,\n.finger-print-button {\n  width: 70px;\n  height: 70px;\n  --border-radius: 64px;\n}\n\n.digit-coll-position {\n  align-self: flex-end;\n}\n\n@media (min-width: 576px) {\n  .digit-coll-position {\n    align-self: center !important;\n  }\n}\n\n.hidesm-showlg {\n  display: inline-block;\n}\n\n@media (min-width: 576px) and (max-width: 992px) {\n  .hidesm-showlg {\n    display: none !important;\n  }\n}\n\n.showsm-hidelg {\n  display: none;\n}\n\n@media (min-width: 576px) and (max-width: 992px) {\n  .showsm-hidelg {\n    display: inline-block !important;\n  }\n}"]})],c);const p=[{path:"",component:c}];let g=class{};g=(0,e.gn)([(0,o.LVF)({imports:[s.Bz.forChild(p)],exports:[s.Bz]})],g);let d=class{};d=(0,e.gn)([(0,o.LVF)({imports:[a.ez,g,r.m],declarations:[c]})],d)}}]);
//# sourceMappingURL=7223-es2015.js.map