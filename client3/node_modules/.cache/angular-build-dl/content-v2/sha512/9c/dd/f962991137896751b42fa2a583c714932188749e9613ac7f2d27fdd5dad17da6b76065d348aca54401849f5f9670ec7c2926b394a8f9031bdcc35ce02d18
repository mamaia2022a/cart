{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],"names":["QUERY","SplitPane","hostRef","r","this","ionSplitPaneVisible","visible","disabled","when","detail","isPane","bind","emit","styleChildren","updateState","rmL","query","mediaQuery","length","window","matchMedia","callback","q","matches","mediaList","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","console","warn","setPaneClass","mode","h","H","class","toAdd","toRemove","add","remove","style","ios","md"],"mappings":"6dASMA,EAAQ,CACZ,GAAM,mBACN,GAAM,qBACN,GAAM,qBACN,GAAM,qBACN,GAAM,sBACN,MAAS,IAELC,EAAS,WACb,WAAYC,I,4FAAQ,UAARA,EACV,EAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,uBAAsB,KAAYD,KAAM,sBAAuB,GACpEA,KAAKE,WAILF,KAAKG,YAMLH,KAAKI,KAAOR,EAAU,G,UAdX,O,EAAA,E,EAAA,qBAsGb,WAAwB,MAAO,CAC7B,QAAW,CAAC,kBACZ,SAAY,CAAC,eACb,KAAQ,CAAC,oB,EAzGE,6BAgBb,SAAeM,GACb,IAAMG,EAAS,CAAEH,UAASI,OAAQN,KAAKM,OAAOC,KAAKP,OACnDA,KAAKC,oBAAoBO,KAAKH,KAlBnB,+BAoBb,WACEL,KAAKS,gBACLT,KAAKU,gBAtBM,kCAwBb,WACMV,KAAKW,MACPX,KAAKW,MACLX,KAAKW,cA3BI,yBA8Bb,WAAa,WAMX,GALIX,KAAKW,MACPX,KAAKW,MACLX,KAAKW,YAGHX,KAAKG,SACPH,KAAKE,eADP,CAKA,IAAMU,EAAQZ,KAAKI,KACnB,GAAqB,kBAAVQ,EAAX,CAKA,IAAMC,EAAajB,EAAMgB,IAAUA,EAEnC,GAA0B,IAAtBC,EAAWC,QAIf,GAAIC,OAAOC,WAAY,CAErB,IAAMC,EAAYC,YAChBlB,EAAKE,QAAUgB,EAAEC,SAEbC,EAAYL,OAAOC,WAAWH,GACpCO,EAAUC,YAAYJ,GACtBjB,KAAKW,IAAM,kBAAMS,EAAUE,eAAeL,IAC1CjB,KAAKE,QAAUkB,EAAUD,cAXzBnB,KAAKE,gBAPLF,KAAKE,QAAUU,KA3CN,oBAgEb,SAAOW,GACL,QAAKvB,KAAKE,SAGHqB,EAAQC,gBAAkBxB,KAAKyB,IACjCF,EAAQG,UAAUC,SA9EH,qBAST,2BAuEb,WAKE,IAJA,IAAMC,EAAY5B,KAAK4B,UACjBC,EAAW7B,KAAKyB,GAAGI,SACnBC,EAAK9B,KAAKyB,GAAGM,kBACfC,KACKC,EAAI,EAAGA,EAAIH,EAAIG,IAAK,CAC3B,IAAMC,EAAQL,EAASI,GACjBE,WAASP,GAA2BM,EAAME,KAAOR,EACvD,GAAIO,EAAQ,CACV,GAAIH,EAEF,YADAK,QAAQC,KAAK,kDAGfN,KAEFO,EAAaL,EAAOC,GAEjBH,GACHK,QAAQC,KAAK,oDAzFJ,oBA4Fb,WAAQ,MACAE,KAAO,KAAWxC,MACxB,OAAM,EAAE,EAAAyC,GAAE,EAAAC,EAAM,CAAEC,gBACbH,GAAM,GADOG,yBAGCH,IAAQ,GAHTG,IAId,qBAAsB3C,KAAKE,SAJbyC,KAIazC,EACxB,EAAAuC,GAAE,OAAQ,SAnGN,cAqGb,WAAW,OAAM,EAAC,KAAWzC,W,2BArGhB,KA4GTuC,EAAe,SAACd,EAAIU,GACxB,IAAIS,EACAC,EACAV,GACFS,EA1HoB,kBA2HpBC,EA1HoB,oBA6HpBD,EA7HoB,kBA8HpBC,EA/HoB,mBAiItB,IAAMnB,EAAYD,EAAGC,UACrBA,EAAUoB,IAAIF,GACdlB,EAAUqB,OAAOF,IAEnBhD,EAAUmD,MAAQ,CAChBC,IA1IsB,mtEA2ItBC,GAzIqB,iuE","file":"x","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\n\r\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\r\n\r\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\r\n\r\nconst SPLIT_PANE_MAIN = 'split-pane-main';\r\nconst SPLIT_PANE_SIDE = 'split-pane-side';\r\nconst QUERY = {\r\n  'xs': '(min-width: 0px)',\r\n  'sm': '(min-width: 576px)',\r\n  'md': '(min-width: 768px)',\r\n  'lg': '(min-width: 992px)',\r\n  'xl': '(min-width: 1200px)',\r\n  'never': ''\r\n};\r\nconst SplitPane = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\r\n    this.visible = false;\r\n    /**\r\n     * If `true`, the split pane will be hidden.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * When the split-pane should be shown.\r\n     * Can be a CSS media query expression, or a shortcut expression.\r\n     * Can also be a boolean expression.\r\n     */\r\n    this.when = QUERY['lg'];\r\n  }\r\n  visibleChanged(visible) {\r\n    const detail = { visible, isPane: this.isPane.bind(this) };\r\n    this.ionSplitPaneVisible.emit(detail);\r\n  }\r\n  connectedCallback() {\r\n    this.styleChildren();\r\n    this.updateState();\r\n  }\r\n  disconnectedCallback() {\r\n    if (this.rmL) {\r\n      this.rmL();\r\n      this.rmL = undefined;\r\n    }\r\n  }\r\n  updateState() {\r\n    if (this.rmL) {\r\n      this.rmL();\r\n      this.rmL = undefined;\r\n    }\r\n    // Check if the split-pane is disabled\r\n    if (this.disabled) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n    // When query is a boolean\r\n    const query = this.when;\r\n    if (typeof query === 'boolean') {\r\n      this.visible = query;\r\n      return;\r\n    }\r\n    // When query is a string, let's find first if it is a shortcut\r\n    const mediaQuery = QUERY[query] || query;\r\n    // Media query is empty or null, we hide it\r\n    if (mediaQuery.length === 0) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n    if (window.matchMedia) {\r\n      // Listen on media query\r\n      const callback = (q) => {\r\n        this.visible = q.matches;\r\n      };\r\n      const mediaList = window.matchMedia(mediaQuery);\r\n      mediaList.addListener(callback);\r\n      this.rmL = () => mediaList.removeListener(callback);\r\n      this.visible = mediaList.matches;\r\n    }\r\n  }\r\n  isPane(element) {\r\n    if (!this.visible) {\r\n      return false;\r\n    }\r\n    return element.parentElement === this.el\r\n      && element.classList.contains(SPLIT_PANE_SIDE);\r\n  }\r\n  styleChildren() {\r\n    const contentId = this.contentId;\r\n    const children = this.el.children;\r\n    const nu = this.el.childElementCount;\r\n    let foundMain = false;\r\n    for (let i = 0; i < nu; i++) {\r\n      const child = children[i];\r\n      const isMain = contentId !== undefined && child.id === contentId;\r\n      if (isMain) {\r\n        if (foundMain) {\r\n          console.warn('split pane cannot have more than one main node');\r\n          return;\r\n        }\r\n        foundMain = true;\r\n      }\r\n      setPaneClass(child, isMain);\r\n    }\r\n    if (!foundMain) {\r\n      console.warn('split pane does not have a specified main node');\r\n    }\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { class: {\r\n        [mode]: true,\r\n        // Used internally for styling\r\n        [`split-pane-${mode}`]: true,\r\n        'split-pane-visible': this.visible\r\n      } }, h(\"slot\", null)));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"visible\": [\"visibleChanged\"],\r\n    \"disabled\": [\"updateState\"],\r\n    \"when\": [\"updateState\"]\r\n  }; }\r\n};\r\nconst setPaneClass = (el, isMain) => {\r\n  let toAdd;\r\n  let toRemove;\r\n  if (isMain) {\r\n    toAdd = SPLIT_PANE_MAIN;\r\n    toRemove = SPLIT_PANE_SIDE;\r\n  }\r\n  else {\r\n    toAdd = SPLIT_PANE_SIDE;\r\n    toRemove = SPLIT_PANE_MAIN;\r\n  }\r\n  const classList = el.classList;\r\n  classList.add(toAdd);\r\n  classList.remove(toRemove);\r\n};\r\nSplitPane.style = {\r\n  ios: splitPaneIosCss,\r\n  md: splitPaneMdCss\r\n};\r\n\r\nexport { SplitPane as ion_split_pane };\r\n"]}