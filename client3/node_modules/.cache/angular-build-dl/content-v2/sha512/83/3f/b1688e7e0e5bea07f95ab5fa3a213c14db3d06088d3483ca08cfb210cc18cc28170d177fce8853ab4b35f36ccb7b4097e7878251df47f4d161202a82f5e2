{"version":3,"sources":["webpack:///src/app/payloads/aut/ValidateRegistrationRequest.ts","webpack:///src/app/pages/simpatpend/confirmsim/confirmsimact/confirmsimact.page.ts","webpack:///src/app/pages/simpatpend/confirmsim/confirmsimact/confirmsimact.page.html","webpack:///src/app/pages/simpatpend/confirmsim/confirmsimact/confirmsimact.page.scss","webpack:///src/app/pages/simpatpend/confirmsim/confirmsimact/confirmsimact-routing.module.ts","webpack:///src/app/pages/simpatpend/confirmsim/confirmsimact/confirmsimact.module.ts"],"names":["ValidateRegistrationRequest","ConfirmSimActPage","store","navController","platform","storage","frmValidateRegistration","codvalidare","crtactiune","self","this","getLocalStorageData","then","data","get","token","Promise","resolve","value","console","log","actiuneid","valid","validateRegistrationRequest","codValidare","dispatch","selector","template","routes","path","component","ConfirmSimActPageRoutingModule","imports","exports","ConfirmSimActPageModule","declarations"],"mappings":"iPAAO,MAAMA,EAKT,gB,8BCYSC,EAAiB,MAS5B,YAAoBC,EAAsBC,EAAsCC,EAA4BC,GAAxF,KAAAH,QAAsB,KAAAC,gBAAsC,KAAAC,WAA4B,KAAAC,UAR5G,KAAAC,wBAAqC,IAAI,KACvC,CACGC,YAAa,IAAI,KAAY,GAAI,CAAC,cAAqB,eAAqB,GAAI,eAAqB,QAE1G,KAAAC,WAAmB,KAOjB,IAAIC,EAAOC,KACXA,KAAKC,sBACIC,KAAWC,IAAO,uCAEjB,IADAA,QAAaJ,EAAKJ,QAAQS,IAAI,SACf,MAARD,GACLA,QAAaH,KAAKL,QAAQS,IAAI,SAEhCL,EAAKM,MAAgB,KAKjC,sBACE,IAAIN,EAAMC,KACV,OAAO,IAAIM,QAAQC,IACjBR,EAAKJ,QAAQS,IAAI,cACdF,KAAMM,IAEDT,EAAKD,WAAaU,EAClBC,QAAQC,IAAIF,GACZD,EAAQC,OAOpB,kBAAkBG,GACdF,QAAQC,IAAI,yBAA2BC,GAG3C,WAEEF,QAAQC,IAAIV,KAAKF,YAInB,yBACE,GAAIE,KAAKJ,wBAAwBgB,MACjC,CACEH,QAAQC,IAAIV,KAAKJ,wBAAwBY,OACzC,IAAIK,EAA4D,IAAIvB,EACpEuB,EAA4BC,YAAgBd,KAAKJ,wBAAwBY,MAAmB,YAC5FR,KAAKR,MAAMuB,SAAS,IAAI,yBAAgCF,EAA6Bb,KAAKK,SAI9F,U,4BAtEO,M,MADW,M,MAAe,M,MAG1B,MASId,GAAiB,UAN7B,SAAU,CACTyB,SAAU,oBACVC,SCbF,w+D,QCAA,OFiBa1B,G,eGbb,MAAM2B,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAW7B,I,IAQF8B,EAA8B,QAA9BA,GAA8B,UAJ1C,SAAS,CACRC,QAAS,CAAC,cAAsBJ,IAChCK,QAAS,CAAC,SAECF,G,ICFAG,EAAuB,QAAvBA,GAAuB,UAJnC,SAAS,CACRF,QAAS,CAAC,KAAc,KAAa,KAAaD,EAAgC,KAClFI,aAAc,CAAClC,MAEJiC","file":"x","sourcesContent":["export class ValidateRegistrationRequest\r\n{\r\n\r\n    codValidare: number;\r\n\r\n    constructor(){\r\n    \r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthAction } from '../../../../core/auth-guard/auth-guard.actions';\nimport { ValidateRegistrationRequest } from '../../../../payloads/aut/ValidateRegistrationRequest';\n\nimport { IonSelect, NavController, Platform } from '@ionic/angular';\nimport { Store } from '@ngxs/store';\nimport { Observable, of } from 'rxjs';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'app-confirmsimact',\n  templateUrl: './confirmsimact.page.html',\n  styleUrls: ['./confirmsimact.page.scss'],\n})\n\nexport class ConfirmSimActPage implements OnInit {\n  frmValidateRegistration: FormGroup = new FormGroup(\n    {\n       codvalidare: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]),\n    });\n  crtactiune : any = null;\n  loginResponse : any;\n  token : string;\n\n  constructor(private store: Store, private navController: NavController, private platform: Platform, private storage: Storage)  \n  {\n    //this.confirmsimact = null;\n    var self = this;\n    this.getLocalStorageData()\n            .then(async data =>{\n              data = await self.storage.get(\"token\");\n              while (data == null) \n                data = await this.storage.get(\"token\");\n              //---\n              self.token = <string>(data);\n        \n            })\n  }\n\n  getLocalStorageData(){\n    var self =this;\n    return new Promise(resolve => {\n      self.storage.get(\"crtactiune\")\n        .then( value => \n            { \n              self.crtactiune = value;\n              console.log(value);\n              resolve(value);\n            });\n            \n         });\n    }\n\n\n  selectieFaActiune(actiuneid : number) {\n      console.log(\"selectie fa actiune : \" + actiuneid);\n  }\n\n  ngOnInit(){\n    //this.frmConfirmSimAct = new FormControl('', [Validators.required, Validators.email]);\n    console.log(this.crtactiune);\n  }\n\n\n  onValidateRegistration() {\n    if (this.frmValidateRegistration.valid)\n    {\n      console.log(this.frmValidateRegistration.value);\n      var validateRegistrationRequest : ValidateRegistrationRequest = new ValidateRegistrationRequest();\n      validateRegistrationRequest.codValidare   = this.frmValidateRegistration.value[\"codvalidare\"];\n      this.store.dispatch(new AuthAction.ValidateRegistration(validateRegistrationRequest, this.token));\n    }\n  }\n\n  done() {\n  }\n  \n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button [text]=\\\"'backButtonTitle' | translate\\\" defaultHref=\\\"/aut/grupactactiuni\\\"></ion-back-button>\\n        </ion-buttons>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"person-circle\\\"></ion-icon>\\n      </ion-button>\\n      <!-- \\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n      -->\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button color=\\\"danger\\\">\\n        <ion-icon slot=\\\"icon-only\\\" ios=\\\"ellipsis-horizontal\\\" md=\\\"ellipsis-vertical\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Bine Ai Venit ! &nbsp; &nbsp; &nbsp; </ion-title>\\n  </ion-toolbar>  \\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n   \\n  <!-- List of Text Items -->\\n      <ng-container *ngIf=\\\"crtactiune\\\">\\n        <h3>{{crtactiune.autActiuneDisplaynume}}</h3>\\n     </ng-container>\\n  \\n     <ion-grid>\\n      <ion-row>\\n        <ion-col class=\\\"ion-text-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <form [formGroup]=\\\"frmValidateRegistration\\\" (ngSubmit)=\\\"onValidateRegistration()\\\">\\n            <ion-card color=\\\"light\\\" class=\\\"auth-card ion-margin\\\">\\n              <ion-item color=\\\"light\\\" class=\\\"ion-no-inner-padding-end\\\">\\n                <ion-input type=\\\"text\\\" placeholder=\\\"Introduceți Codul de Validare Primit\\\" formControlName=\\\"codvalidare\\\"></ion-input>\\n              </ion-item>\\n            </ion-card>\\n  \\n            <ion-button\\n              expand=\\\"block\\\"\\n              class=\\\"ion-margin-start ion-margin-end ion-margin-bottom\\\"\\n              type=\\\"submit\\\"\\n              [disabled]=\\\"!frmValidateRegistration.valid\\\"\\n            >\\n              Validare Înregistrare\\n            </ion-button>\\n            <span class=\\\"ion-margin\\\"></span>\\n          </form>\\n  \\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  \\n\\n</ion-content>\\n\";","export default \"\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfirmSimActPage } from './confirmsimact.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmSimActPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfirmSimActPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../../.././../shared/shared.module';\nimport { ConfirmSimActPage } from './confirmsimact.page';\nimport { ConfirmSimActPageRoutingModule } from './confirmsimact-routing.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ConfirmSimActPageRoutingModule, SharedModule],\n  declarations: [ConfirmSimActPage],\n})\nexport class ConfirmSimActPageModule {}\n"]}