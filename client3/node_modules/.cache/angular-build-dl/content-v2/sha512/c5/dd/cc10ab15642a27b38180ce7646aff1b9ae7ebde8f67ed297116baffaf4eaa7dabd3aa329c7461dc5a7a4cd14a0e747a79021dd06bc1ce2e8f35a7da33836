{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/focus-visible-f4ad4f1a.js"],"names":["FOCUS_KEYS","startFocusVisible","currentFocus","keyboardMode","doc","document","setFocus","elements","forEach","el","classList","remove","add","pointerDown","addEventListener","ev","includes","key","composedPath","toFocus","filter","contains","activeElement","body"],"mappings":"4JAAA,IAEMA,EAAa,CAAC,MAAO,YAAa,QAAS,SAAU,IAAK,QAAS,QAAS,YAAa,aAAc,WACvGC,EAAoB,WACxB,IAAIC,EAAe,GACfC,KACEC,EAAMC,SACNC,EAAYC,YAChBL,EAAaM,QAAQC,YAAE,OAAIA,EAAGC,UAAUC,OARxB,iBAShBJ,EAASC,QAAQC,YAAE,OAAIA,EAAGC,UAAUE,IATpB,iBAUhBV,EAAeK,GAEXM,EAAc,WAClBV,KACAG,EAAS,KAEXF,EAAIU,iBAAiB,UAAWC,aAC9BZ,EAAeH,EAAWgB,SAASD,EAAGE,OAEpCX,EAAS,MAGbF,EAAIU,iBAAiB,UAAWC,YAC9B,GAAIZ,GAAgBY,EAAGG,aAAc,CACnC,IAAMC,EAAUJ,EAAGG,eAAeE,OAAQX,YAAE,QACtCA,EAAGC,WACED,EAAGC,UAAUW,SAzBR,mBA6BhBf,EAASa,MAGbf,EAAIU,iBAAiB,WAAY,WAC3BV,EAAIkB,gBAAkBlB,EAAImB,MAC5BjB,EAAS,MAGbF,EAAIU,iBAAiB,aAAcD,GACnCT,EAAIU,iBAAiB,YAAaD","file":"x","sourcesContent":["const ION_FOCUSED = 'ion-focused';\r\nconst ION_FOCUSABLE = 'ion-focusable';\r\nconst FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\r\nconst startFocusVisible = () => {\r\n  let currentFocus = [];\r\n  let keyboardMode = true;\r\n  const doc = document;\r\n  const setFocus = (elements) => {\r\n    currentFocus.forEach(el => el.classList.remove(ION_FOCUSED));\r\n    elements.forEach(el => el.classList.add(ION_FOCUSED));\r\n    currentFocus = elements;\r\n  };\r\n  const pointerDown = () => {\r\n    keyboardMode = false;\r\n    setFocus([]);\r\n  };\r\n  doc.addEventListener('keydown', ev => {\r\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\r\n    if (!keyboardMode) {\r\n      setFocus([]);\r\n    }\r\n  });\r\n  doc.addEventListener('focusin', ev => {\r\n    if (keyboardMode && ev.composedPath) {\r\n      const toFocus = ev.composedPath().filter((el) => {\r\n        if (el.classList) {\r\n          return el.classList.contains(ION_FOCUSABLE);\r\n        }\r\n        return false;\r\n      });\r\n      setFocus(toFocus);\r\n    }\r\n  });\r\n  doc.addEventListener('focusout', () => {\r\n    if (doc.activeElement === doc.body) {\r\n      setFocus([]);\r\n    }\r\n  });\r\n  doc.addEventListener('touchstart', pointerDown);\r\n  doc.addEventListener('mousedown', pointerDown);\r\n};\r\n\r\nexport { startFocusVisible };\r\n"]}