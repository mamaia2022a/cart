{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js"],"names":["Backdrop","hostRef","r","this","ionBackdropTap","blocker","G","disableScroll","visible","tappable","stopPropagation","block","unblock","ev","emitTap","preventDefault","emit","mode","h","H","tabindex","class","style","ios","md"],"mappings":"seAQMA,EAAQ,WACZ,WAAYC,I,4FAAQ,UAARA,EACV,EAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,kBAAiB,KAAYD,KAAM,iBAAkB,GAC1DA,KAAKE,QAAU,EAAAC,EAAA,cAAiC,CAC9CC,eAAc,IAKhBJ,KAAKK,WAILL,KAAKM,YAILN,KAAKO,mB,UAlBK,O,EAAA,G,EAAA,gCAoBZ,WACMP,KAAKO,iBACPP,KAAKE,QAAQM,UAtBL,kCAyBZ,WACER,KAAKE,QAAQO,YA1BH,yBA4BZ,SAAYC,GACVV,KAAKW,QAAQD,KA7BH,qBA+BZ,SAAQA,GACFV,KAAKO,kBACPG,EAAGE,iBACHF,EAAGH,mBAEDP,KAAKM,UACPN,KAAKC,eAAeY,SArCZ,oBAwCZ,WAAQ,MACAC,KAAO,KAAWd,MACxB,OAAM,EAAE,EAAAe,GAAE,EAAAC,EAAM,CAAEC,SAAU,KAAM,cAAe,OAAQC,gBACpDJ,GAAM,GAD8CI,IAErD,iBAAkBlB,KAAKK,SAF8Ba,IAGrD,wBAAyBlB,KAAKM,UAHuBY,U,2BA1C/C,KAiDdrB,EAASsB,MAAQ,CACfC,IAtDqB,yWAuDrBC,GArDoB,8W","file":"x","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-31cb6bb9.js';\r\n\r\nconst backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\r\n\r\nconst backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\r\n\r\nconst Backdrop = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\r\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\r\n      disableScroll: true\r\n    });\r\n    /**\r\n     * If `true`, the backdrop will be visible.\r\n     */\r\n    this.visible = true;\r\n    /**\r\n     * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\r\n     */\r\n    this.tappable = true;\r\n    /**\r\n     * If `true`, the backdrop will stop propagation on tap.\r\n     */\r\n    this.stopPropagation = true;\r\n  }\r\n  connectedCallback() {\r\n    if (this.stopPropagation) {\r\n      this.blocker.block();\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    this.blocker.unblock();\r\n  }\r\n  onMouseDown(ev) {\r\n    this.emitTap(ev);\r\n  }\r\n  emitTap(ev) {\r\n    if (this.stopPropagation) {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n    if (this.tappable) {\r\n      this.ionBackdropTap.emit();\r\n    }\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { tabindex: \"-1\", \"aria-hidden\": \"true\", class: {\r\n        [mode]: true,\r\n        'backdrop-hide': !this.visible,\r\n        'backdrop-no-tappable': !this.tappable,\r\n      } }));\r\n  }\r\n};\r\nBackdrop.style = {\r\n  ios: backdropIosCss,\r\n  md: backdropMdCss\r\n};\r\n\r\nexport { Backdrop as ion_backdrop };\r\n"]}