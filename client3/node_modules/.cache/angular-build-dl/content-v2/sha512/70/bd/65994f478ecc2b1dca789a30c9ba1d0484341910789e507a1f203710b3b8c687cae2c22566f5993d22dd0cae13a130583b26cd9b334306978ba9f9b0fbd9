{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js"],"names":["Tab","hostRef","r","this","loaded","active","setActive","prepareLazyLoaded","isActive","component","a","delegate","el","e","console","error","Promise","resolve","undefined","tab","h","H","role","class","style","Tabs","ionNavWillLoad","ionTabsWillChange","ionTabsDidChange","transitioning","useRouter","onTabClicked","ev","href","detail","router","document","querySelector","push","select","closest","tabs","length","emit","tabBar","selectedTab","getTab","shouldSwitch","notifyRouter","tabSwitch","id","changed","element","markVisible","tabId","reject","leavingTab","navChanged","Array","from","querySelectorAll","onIonTabButtonClick","name","tabEl","find","t"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-7a8b7a1c.js';\r\nimport { a as attachComponent } from './framework-delegate-4392cd63.js';\r\nimport './helpers-dd7e4b7b.js';\r\n\r\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\r\n\r\nconst Tab = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.loaded = false;\r\n    /** @internal */\r\n    this.active = false;\r\n  }\r\n  async componentWillLoad() {\r\n    if (this.active) {\r\n      await this.setActive();\r\n    }\r\n  }\r\n  /** Set the active component for the tab */\r\n  async setActive() {\r\n    await this.prepareLazyLoaded();\r\n    this.active = true;\r\n  }\r\n  changeActive(isActive) {\r\n    if (isActive) {\r\n      this.prepareLazyLoaded();\r\n    }\r\n  }\r\n  prepareLazyLoaded() {\r\n    if (!this.loaded && this.component != null) {\r\n      this.loaded = true;\r\n      try {\r\n        return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\r\n      }\r\n      catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    return Promise.resolve(undefined);\r\n  }\r\n  render() {\r\n    const { tab, active, component } = this;\r\n    return (h(Host, { role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\r\n        'ion-page': component === undefined,\r\n        'tab-hidden': !active\r\n      } }, h(\"slot\", null)));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"active\": [\"changeActive\"]\r\n  }; }\r\n};\r\nTab.style = tabCss;\r\n\r\nconst tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\r\n\r\nconst Tabs = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\r\n    this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\r\n    this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\r\n    this.transitioning = false;\r\n    /** @internal */\r\n    this.useRouter = false;\r\n    this.onTabClicked = (ev) => {\r\n      const { href, tab } = ev.detail;\r\n      if (this.useRouter && href !== undefined) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n          router.push(href);\r\n        }\r\n      }\r\n      else {\r\n        this.select(tab);\r\n      }\r\n    };\r\n  }\r\n  async componentWillLoad() {\r\n    if (!this.useRouter) {\r\n      this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\r\n    }\r\n    if (!this.useRouter) {\r\n      const tabs = this.tabs;\r\n      if (tabs.length > 0) {\r\n        await this.select(tabs[0]);\r\n      }\r\n    }\r\n    this.ionNavWillLoad.emit();\r\n  }\r\n  componentWillRender() {\r\n    const tabBar = this.el.querySelector('ion-tab-bar');\r\n    if (tabBar) {\r\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\r\n      tabBar.selectedTab = tab;\r\n    }\r\n  }\r\n  /**\r\n   * Select a tab by the value of its `tab` property or an element reference.\r\n   *\r\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\r\n   */\r\n  async select(tab) {\r\n    const selectedTab = getTab(this.tabs, tab);\r\n    if (!this.shouldSwitch(selectedTab)) {\r\n      return false;\r\n    }\r\n    await this.setActive(selectedTab);\r\n    await this.notifyRouter();\r\n    this.tabSwitch();\r\n    return true;\r\n  }\r\n  /**\r\n   * Get a specific tab by the value of its `tab` property or an element reference.\r\n   *\r\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\r\n   */\r\n  async getTab(tab) {\r\n    return getTab(this.tabs, tab);\r\n  }\r\n  /**\r\n   * Get the currently selected tab.\r\n   */\r\n  getSelected() {\r\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\r\n  }\r\n  /** @internal */\r\n  async setRouteId(id) {\r\n    const selectedTab = getTab(this.tabs, id);\r\n    if (!this.shouldSwitch(selectedTab)) {\r\n      return { changed: false, element: this.selectedTab };\r\n    }\r\n    await this.setActive(selectedTab);\r\n    return {\r\n      changed: true,\r\n      element: this.selectedTab,\r\n      markVisible: () => this.tabSwitch(),\r\n    };\r\n  }\r\n  /** @internal */\r\n  async getRouteId() {\r\n    const tabId = this.selectedTab && this.selectedTab.tab;\r\n    return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\r\n  }\r\n  setActive(selectedTab) {\r\n    if (this.transitioning) {\r\n      return Promise.reject('transitioning already happening');\r\n    }\r\n    this.transitioning = true;\r\n    this.leavingTab = this.selectedTab;\r\n    this.selectedTab = selectedTab;\r\n    this.ionTabsWillChange.emit({ tab: selectedTab.tab });\r\n    selectedTab.active = true;\r\n    return Promise.resolve();\r\n  }\r\n  tabSwitch() {\r\n    const selectedTab = this.selectedTab;\r\n    const leavingTab = this.leavingTab;\r\n    this.leavingTab = undefined;\r\n    this.transitioning = false;\r\n    if (!selectedTab) {\r\n      return;\r\n    }\r\n    if (leavingTab !== selectedTab) {\r\n      if (leavingTab) {\r\n        leavingTab.active = false;\r\n      }\r\n      this.ionTabsDidChange.emit({ tab: selectedTab.tab });\r\n    }\r\n  }\r\n  notifyRouter() {\r\n    if (this.useRouter) {\r\n      const router = document.querySelector('ion-router');\r\n      if (router) {\r\n        return router.navChanged('forward');\r\n      }\r\n    }\r\n    return Promise.resolve(false);\r\n  }\r\n  shouldSwitch(selectedTab) {\r\n    const leavingTab = this.selectedTab;\r\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\r\n  }\r\n  get tabs() {\r\n    return Array.from(this.el.querySelectorAll('ion-tab'));\r\n  }\r\n  render() {\r\n    return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\nconst getTab = (tabs, tab) => {\r\n  const tabEl = (typeof tab === 'string')\r\n    ? tabs.find(t => t.tab === tab)\r\n    : tab;\r\n  if (!tabEl) {\r\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\r\n  }\r\n  return tabEl;\r\n};\r\nTabs.style = tabsCss;\r\n\r\nexport { Tab as ion_tab, Tabs as ion_tabs };\r\n"]}