{"version":3,"file":"ngxs-form-plugin.js","sources":["@ngxs/form-plugin/src/actions.ts","@ngxs/form-plugin/src/form.plugin.ts","@ngxs/form-plugin/src/directive.ts","@ngxs/form-plugin/src/form.module.ts"],"names":[],"mappings":"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","sourcesContent":["export class UpdateFormStatus {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Update Form Status';\r\n  }\r\n  constructor(\r\n    public payload: {\r\n      status: string | null;\r\n      path: string;\r\n    }\r\n  ) {}\r\n}\r\n\r\nexport class UpdateFormValue {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Update Form Value';\r\n  }\r\n  constructor(public payload: { value: any; path: string; propertyPath?: string }) {}\r\n}\r\n\r\nexport class UpdateForm {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Update Form';\r\n  }\r\n  constructor(\r\n    public payload: {\r\n      value: any;\r\n      errors: { [k: string]: string } | null;\r\n      dirty: boolean | null;\r\n      status: string | null;\r\n      path: string;\r\n    }\r\n  ) {}\r\n}\r\n\r\nexport class UpdateFormDirty {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Update Form Dirty';\r\n  }\r\n  constructor(public payload: { dirty: boolean | null; path: string }) {}\r\n}\r\n\r\nexport class SetFormDirty {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Set Form Dirty';\r\n  }\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class SetFormPristine {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Set Form Pristine';\r\n  }\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class UpdateFormErrors {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Update Form Errors';\r\n  }\r\n  constructor(public payload: { errors: { [k: string]: string } | null; path: string }) {}\r\n}\r\n\r\nexport class SetFormDisabled {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Set Form Disabled';\r\n  }\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class SetFormEnabled {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Set Form Enabled';\r\n  }\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class ResetForm {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Forms] Reset Form';\r\n  }\r\n  constructor(public payload: { path: string; value?: any }) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  getActionTypeFromInstance,\r\n  getValue,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue\r\n} from '@ngxs/store';\r\nimport {\r\n  ResetForm,\r\n  SetFormDirty,\r\n  SetFormDisabled,\r\n  SetFormEnabled,\r\n  SetFormPristine,\r\n  UpdateForm,\r\n  UpdateFormDirty,\r\n  UpdateFormErrors,\r\n  UpdateFormStatus,\r\n  UpdateFormValue\r\n} from './actions';\r\n\r\n@Injectable()\r\nexport class NgxsFormPlugin implements NgxsPlugin {\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const type = getActionTypeFromInstance(event);\r\n\r\n    let nextState = state;\r\n\r\n    if (type === UpdateFormValue.type || type === UpdateForm.type || type === ResetForm.type) {\r\n      const { value } = event.payload;\r\n      const payloadValue = Array.isArray(value) ? value.slice() : { ...value };\r\n      const path = this.joinPathWithPropertyPath(event);\r\n      nextState = setValue(nextState, path, payloadValue);\r\n    }\r\n\r\n    if (type === ResetForm.type) {\r\n      const model = getValue(nextState, `${event.payload.path}.model`);\r\n      nextState = setValue(nextState, `${event.payload.path}`, { model: model });\r\n    }\r\n\r\n    if (type === UpdateFormStatus.type || type === UpdateForm.type) {\r\n      nextState = setValue(nextState, `${event.payload.path}.status`, event.payload.status);\r\n    }\r\n\r\n    if (type === UpdateFormErrors.type || type === UpdateForm.type) {\r\n      nextState = setValue(nextState, `${event.payload.path}.errors`, {\r\n        ...event.payload.errors\r\n      });\r\n    }\r\n\r\n    if (type === UpdateFormDirty.type || type === UpdateForm.type) {\r\n      nextState = setValue(nextState, `${event.payload.path}.dirty`, event.payload.dirty);\r\n    }\r\n\r\n    if (type === SetFormDirty.type) {\r\n      nextState = setValue(nextState, `${event.payload}.dirty`, true);\r\n    }\r\n\r\n    if (type === SetFormPristine.type) {\r\n      nextState = setValue(nextState, `${event.payload}.dirty`, false);\r\n    }\r\n\r\n    if (type === SetFormDisabled.type) {\r\n      nextState = setValue(nextState, `${event.payload}.disabled`, true);\r\n    }\r\n\r\n    if (type === SetFormEnabled.type) {\r\n      nextState = setValue(nextState, `${event.payload}.disabled`, false);\r\n    }\r\n\r\n    return next(nextState, event);\r\n  }\r\n\r\n  private joinPathWithPropertyPath({ payload }: UpdateFormValue): string {\r\n    let path = `${payload.path}.model`;\r\n\r\n    if (payload.propertyPath) {\r\n      path += `.${payload.propertyPath}`;\r\n    }\r\n\r\n    return path;\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { Actions, getValue, ofActionDispatched, Store } from '@ngxs/store';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, takeUntil } from 'rxjs/operators';\r\nimport {\r\n  ResetForm,\r\n  UpdateForm,\r\n  UpdateFormDirty,\r\n  UpdateFormErrors,\r\n  UpdateFormStatus,\r\n  UpdateFormValue\r\n} from './actions';\r\n\r\n@Directive({ selector: '[ngxsForm]' })\r\nexport class FormDirective implements OnInit, OnDestroy {\r\n  @Input('ngxsForm')\r\n  path: string = null!;\r\n\r\n  @Input('ngxsFormDebounce')\r\n  debounce = 100;\r\n\r\n  @Input('ngxsFormClearOnDestroy')\r\n  set clearDestroy(val: boolean) {\r\n    this._clearDestroy = val != null && `${val}` !== 'false';\r\n  }\r\n\r\n  get clearDestroy(): boolean {\r\n    return this._clearDestroy;\r\n  }\r\n\r\n  _clearDestroy = false;\r\n\r\n  private readonly _destroy$ = new Subject<void>();\r\n  private _updating = false;\r\n\r\n  constructor(\r\n    private _actions$: Actions,\r\n    private _store: Store,\r\n    private _formGroupDirective: FormGroupDirective,\r\n    private _cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this._actions$\r\n      .pipe(\r\n        ofActionDispatched(ResetForm),\r\n        filter((action: ResetForm) => action.payload.path === this.path),\r\n        takeUntil(this._destroy$)\r\n      )\r\n      .subscribe(({ payload: { value } }: ResetForm) => {\r\n        this.form.reset(value);\r\n        this.updateFormStateWithRawValue(true);\r\n        this._cd.markForCheck();\r\n      });\r\n\r\n    this.getStateStream(`${this.path}.model`).subscribe(model => {\r\n      if (this._updating || !model) {\r\n        return;\r\n      }\r\n\r\n      this.form.patchValue(model);\r\n      this._cd.markForCheck();\r\n    });\r\n\r\n    this.getStateStream(`${this.path}.dirty`).subscribe(dirty => {\r\n      if (this.form.dirty === dirty || typeof dirty !== 'boolean') {\r\n        return;\r\n      }\r\n\r\n      if (dirty) {\r\n        this.form.markAsDirty();\r\n      } else {\r\n        this.form.markAsPristine();\r\n      }\r\n\r\n      this._cd.markForCheck();\r\n    });\r\n\r\n    // On first state change, sync form model, status and dirty with state\r\n    this._store\r\n      .selectOnce(state => getValue(state, this.path))\r\n      .subscribe(() => {\r\n        this._store.dispatch([\r\n          new UpdateFormValue({\r\n            path: this.path,\r\n            value: this.form.getRawValue()\r\n          }),\r\n          new UpdateFormStatus({\r\n            path: this.path,\r\n            status: this.form.status\r\n          }),\r\n          new UpdateFormDirty({\r\n            path: this.path,\r\n            dirty: this.form.dirty\r\n          })\r\n        ]);\r\n      });\r\n\r\n    this.getStateStream(`${this.path}.disabled`).subscribe(disabled => {\r\n      if (this.form.disabled === disabled || typeof disabled !== 'boolean') {\r\n        return;\r\n      }\r\n\r\n      if (disabled) {\r\n        this.form.disable();\r\n      } else {\r\n        this.form.enable();\r\n      }\r\n\r\n      this._cd.markForCheck();\r\n    });\r\n\r\n    this._formGroupDirective.valueChanges!.pipe(this.debounceChange()).subscribe(() => {\r\n      this.updateFormStateWithRawValue();\r\n    });\r\n\r\n    this._formGroupDirective\r\n      .statusChanges!.pipe(distinctUntilChanged(), this.debounceChange())\r\n      .subscribe((status: string) => {\r\n        this._store.dispatch(\r\n          new UpdateFormStatus({\r\n            status,\r\n            path: this.path\r\n          })\r\n        );\r\n      });\r\n  }\r\n\r\n  updateFormStateWithRawValue(withFormStatus?: boolean) {\r\n    if (this._updating) return;\r\n\r\n    const value = this._formGroupDirective.control.getRawValue();\r\n\r\n    const actions: any[] = [\r\n      new UpdateFormValue({\r\n        path: this.path,\r\n        value\r\n      }),\r\n      new UpdateFormDirty({\r\n        path: this.path,\r\n        dirty: this._formGroupDirective.dirty\r\n      }),\r\n      new UpdateFormErrors({\r\n        path: this.path,\r\n        errors: this._formGroupDirective.errors\r\n      })\r\n    ];\r\n\r\n    if (withFormStatus) {\r\n      actions.push(\r\n        new UpdateFormStatus({\r\n          path: this.path,\r\n          status: this._formGroupDirective.status\r\n        })\r\n      );\r\n    }\r\n\r\n    this._updating = true;\r\n    this._store.dispatch(actions).subscribe({\r\n      error: () => (this._updating = false),\r\n      complete: () => (this._updating = false)\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this._destroy$.next();\r\n    this._destroy$.complete();\r\n\r\n    if (this.clearDestroy) {\r\n      this._store.dispatch(\r\n        new UpdateForm({\r\n          path: this.path,\r\n          value: null,\r\n          dirty: null,\r\n          status: null,\r\n          errors: null\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private debounceChange() {\r\n    const skipDebounceTime =\r\n      this._formGroupDirective.control.updateOn !== 'change' || this.debounce < 0;\r\n\r\n    return skipDebounceTime\r\n      ? (change: Observable<any>) => change.pipe(takeUntil(this._destroy$))\r\n      : (change: Observable<any>) =>\r\n          change.pipe(debounceTime(this.debounce), takeUntil(this._destroy$));\r\n  }\r\n\r\n  private get form(): FormGroup {\r\n    return this._formGroupDirective.form;\r\n  }\r\n\r\n  private getStateStream(path: string) {\r\n    return this._store.select(state => getValue(state, path)).pipe(takeUntil(this._destroy$));\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { NGXS_PLUGINS } from '@ngxs/store';\r\nimport { NgxsFormPlugin } from './form.plugin';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormDirective } from './directive';\r\n\r\n@NgModule({\r\n  imports: [ReactiveFormsModule],\r\n  declarations: [FormDirective],\r\n  exports: [FormDirective]\r\n})\r\nexport class NgxsFormPluginModule {\r\n  static forRoot(): ModuleWithProviders<NgxsFormPluginModule> {\r\n    return {\r\n      ngModule: NgxsFormPluginModule,\r\n      providers: [\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: NgxsFormPlugin,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}