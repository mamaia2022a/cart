/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UpdateFormStatus = /** @class */ (function () {
    function UpdateFormStatus(payload) {
        this.payload = payload;
    }
    Object.defineProperty(UpdateFormStatus, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Update Form Status';
        },
        enumerable: true,
        configurable: true
    });
    return UpdateFormStatus;
}());
export { UpdateFormStatus };
if (false) {
    /** @type {?} */
    UpdateFormStatus.prototype.payload;
}
var UpdateFormValue = /** @class */ (function () {
    function UpdateFormValue(payload) {
        this.payload = payload;
    }
    Object.defineProperty(UpdateFormValue, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Update Form Value';
        },
        enumerable: true,
        configurable: true
    });
    return UpdateFormValue;
}());
export { UpdateFormValue };
if (false) {
    /** @type {?} */
    UpdateFormValue.prototype.payload;
}
var UpdateForm = /** @class */ (function () {
    function UpdateForm(payload) {
        this.payload = payload;
    }
    Object.defineProperty(UpdateForm, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Update Form';
        },
        enumerable: true,
        configurable: true
    });
    return UpdateForm;
}());
export { UpdateForm };
if (false) {
    /** @type {?} */
    UpdateForm.prototype.payload;
}
var UpdateFormDirty = /** @class */ (function () {
    function UpdateFormDirty(payload) {
        this.payload = payload;
    }
    Object.defineProperty(UpdateFormDirty, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Update Form Dirty';
        },
        enumerable: true,
        configurable: true
    });
    return UpdateFormDirty;
}());
export { UpdateFormDirty };
if (false) {
    /** @type {?} */
    UpdateFormDirty.prototype.payload;
}
var SetFormDirty = /** @class */ (function () {
    function SetFormDirty(payload) {
        this.payload = payload;
    }
    Object.defineProperty(SetFormDirty, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Set Form Dirty';
        },
        enumerable: true,
        configurable: true
    });
    return SetFormDirty;
}());
export { SetFormDirty };
if (false) {
    /** @type {?} */
    SetFormDirty.prototype.payload;
}
var SetFormPristine = /** @class */ (function () {
    function SetFormPristine(payload) {
        this.payload = payload;
    }
    Object.defineProperty(SetFormPristine, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Set Form Pristine';
        },
        enumerable: true,
        configurable: true
    });
    return SetFormPristine;
}());
export { SetFormPristine };
if (false) {
    /** @type {?} */
    SetFormPristine.prototype.payload;
}
var UpdateFormErrors = /** @class */ (function () {
    function UpdateFormErrors(payload) {
        this.payload = payload;
    }
    Object.defineProperty(UpdateFormErrors, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Update Form Errors';
        },
        enumerable: true,
        configurable: true
    });
    return UpdateFormErrors;
}());
export { UpdateFormErrors };
if (false) {
    /** @type {?} */
    UpdateFormErrors.prototype.payload;
}
var SetFormDisabled = /** @class */ (function () {
    function SetFormDisabled(payload) {
        this.payload = payload;
    }
    Object.defineProperty(SetFormDisabled, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Set Form Disabled';
        },
        enumerable: true,
        configurable: true
    });
    return SetFormDisabled;
}());
export { SetFormDisabled };
if (false) {
    /** @type {?} */
    SetFormDisabled.prototype.payload;
}
var SetFormEnabled = /** @class */ (function () {
    function SetFormEnabled(payload) {
        this.payload = payload;
    }
    Object.defineProperty(SetFormEnabled, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Set Form Enabled';
        },
        enumerable: true,
        configurable: true
    });
    return SetFormEnabled;
}());
export { SetFormEnabled };
if (false) {
    /** @type {?} */
    SetFormEnabled.prototype.payload;
}
var ResetForm = /** @class */ (function () {
    function ResetForm(payload) {
        this.payload = payload;
    }
    Object.defineProperty(ResetForm, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Forms] Reset Form';
        },
        enumerable: true,
        configurable: true
    });
    return ResetForm;
}());
export { ResetForm };
if (false) {
    /** @type {?} */
    ResetForm.prototype.payload;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL2Zvcm0tcGx1Z2luLyIsInNvdXJjZXMiOlsic3JjL2FjdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0lBS0UsMEJBQ1MsT0FHTjtRQUhNLFlBQU8sR0FBUCxPQUFPLENBR2I7SUFDQSxDQUFDO0lBVEosc0JBQVcsd0JBQUk7Ozs7UUFBZjtZQUNFLHNJQUFzSTtZQUN0SSxPQUFPLDRCQUE0QixDQUFDO1FBQ3RDLENBQUM7OztPQUFBO0lBT0gsdUJBQUM7QUFBRCxDQUFDLEFBWEQsSUFXQzs7OztJQUxHLG1DQUdDOztBQUlMO0lBS0UseUJBQW1CLE9BQTREO1FBQTVELFlBQU8sR0FBUCxPQUFPLENBQXFEO0lBQUcsQ0FBQztJQUpuRixzQkFBVyx1QkFBSTs7OztRQUFmO1lBQ0Usc0lBQXNJO1lBQ3RJLE9BQU8sMkJBQTJCLENBQUM7UUFDckMsQ0FBQzs7O09BQUE7SUFFSCxzQkFBQztBQUFELENBQUMsQUFORCxJQU1DOzs7O0lBRGEsa0NBQW1FOztBQUdqRjtJQUtFLG9CQUNTLE9BTU47UUFOTSxZQUFPLEdBQVAsT0FBTyxDQU1iO0lBQ0EsQ0FBQztJQVpKLHNCQUFXLGtCQUFJOzs7O1FBQWY7WUFDRSxzSUFBc0k7WUFDdEksT0FBTyxxQkFBcUIsQ0FBQztRQUMvQixDQUFDOzs7T0FBQTtJQVVILGlCQUFDO0FBQUQsQ0FBQyxBQWRELElBY0M7Ozs7SUFSRyw2QkFNQzs7QUFJTDtJQUtFLHlCQUFtQixPQUFnRDtRQUFoRCxZQUFPLEdBQVAsT0FBTyxDQUF5QztJQUFHLENBQUM7SUFKdkUsc0JBQVcsdUJBQUk7Ozs7UUFBZjtZQUNFLHNJQUFzSTtZQUN0SSxPQUFPLDJCQUEyQixDQUFDO1FBQ3JDLENBQUM7OztPQUFBO0lBRUgsc0JBQUM7QUFBRCxDQUFDLEFBTkQsSUFNQzs7OztJQURhLGtDQUF1RDs7QUFHckU7SUFLRSxzQkFBbUIsT0FBZTtRQUFmLFlBQU8sR0FBUCxPQUFPLENBQVE7SUFBRyxDQUFDO0lBSnRDLHNCQUFXLG9CQUFJOzs7O1FBQWY7WUFDRSxzSUFBc0k7WUFDdEksT0FBTyx3QkFBd0IsQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTtJQUVILG1CQUFDO0FBQUQsQ0FBQyxBQU5ELElBTUM7Ozs7SUFEYSwrQkFBc0I7O0FBR3BDO0lBS0UseUJBQW1CLE9BQWU7UUFBZixZQUFPLEdBQVAsT0FBTyxDQUFRO0lBQUcsQ0FBQztJQUp0QyxzQkFBVyx1QkFBSTs7OztRQUFmO1lBQ0Usc0lBQXNJO1lBQ3RJLE9BQU8sMkJBQTJCLENBQUM7UUFDckMsQ0FBQzs7O09BQUE7SUFFSCxzQkFBQztBQUFELENBQUMsQUFORCxJQU1DOzs7O0lBRGEsa0NBQXNCOztBQUdwQztJQUtFLDBCQUFtQixPQUFpRTtRQUFqRSxZQUFPLEdBQVAsT0FBTyxDQUEwRDtJQUFHLENBQUM7SUFKeEYsc0JBQVcsd0JBQUk7Ozs7UUFBZjtZQUNFLHNJQUFzSTtZQUN0SSxPQUFPLDRCQUE0QixDQUFDO1FBQ3RDLENBQUM7OztPQUFBO0lBRUgsdUJBQUM7QUFBRCxDQUFDLEFBTkQsSUFNQzs7OztJQURhLG1DQUF3RTs7QUFHdEY7SUFLRSx5QkFBbUIsT0FBZTtRQUFmLFlBQU8sR0FBUCxPQUFPLENBQVE7SUFBRyxDQUFDO0lBSnRDLHNCQUFXLHVCQUFJOzs7O1FBQWY7WUFDRSxzSUFBc0k7WUFDdEksT0FBTywyQkFBMkIsQ0FBQztRQUNyQyxDQUFDOzs7T0FBQTtJQUVILHNCQUFDO0FBQUQsQ0FBQyxBQU5ELElBTUM7Ozs7SUFEYSxrQ0FBc0I7O0FBR3BDO0lBS0Usd0JBQW1CLE9BQWU7UUFBZixZQUFPLEdBQVAsT0FBTyxDQUFRO0lBQUcsQ0FBQztJQUp0QyxzQkFBVyxzQkFBSTs7OztRQUFmO1lBQ0Usc0lBQXNJO1lBQ3RJLE9BQU8sMEJBQTBCLENBQUM7UUFDcEMsQ0FBQzs7O09BQUE7SUFFSCxxQkFBQztBQUFELENBQUMsQUFORCxJQU1DOzs7O0lBRGEsaUNBQXNCOztBQUdwQztJQUtFLG1CQUFtQixPQUFzQztRQUF0QyxZQUFPLEdBQVAsT0FBTyxDQUErQjtJQUFHLENBQUM7SUFKN0Qsc0JBQVcsaUJBQUk7Ozs7UUFBZjtZQUNFLHNJQUFzSTtZQUN0SSxPQUFPLG9CQUFvQixDQUFDO1FBQzlCLENBQUM7OztPQUFBO0lBRUgsZ0JBQUM7QUFBRCxDQUFDLEFBTkQsSUFNQzs7OztJQURhLDRCQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBVcGRhdGVGb3JtU3RhdHVzIHtcclxuICBzdGF0aWMgZ2V0IHR5cGUoKSB7XHJcbiAgICAvLyBOT1RFOiBOb3QgbmVjZXNzYXJ5IHRvIGRlY2xhcmUgdGhlIHR5cGUgaW4gdGhpcyB3YXkgaW4geW91ciBjb2RlLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL25neHMvc3RvcmUvcHVsbC82NDQjaXNzdWVjb21tZW50LTQzNjAwMzEzOFxyXG4gICAgcmV0dXJuICdbRm9ybXNdIFVwZGF0ZSBGb3JtIFN0YXR1cyc7XHJcbiAgfVxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHVibGljIHBheWxvYWQ6IHtcclxuICAgICAgc3RhdHVzOiBzdHJpbmcgfCBudWxsO1xyXG4gICAgICBwYXRoOiBzdHJpbmc7XHJcbiAgICB9XHJcbiAgKSB7fVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVXBkYXRlRm9ybVZhbHVlIHtcclxuICBzdGF0aWMgZ2V0IHR5cGUoKSB7XHJcbiAgICAvLyBOT1RFOiBOb3QgbmVjZXNzYXJ5IHRvIGRlY2xhcmUgdGhlIHR5cGUgaW4gdGhpcyB3YXkgaW4geW91ciBjb2RlLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL25neHMvc3RvcmUvcHVsbC82NDQjaXNzdWVjb21tZW50LTQzNjAwMzEzOFxyXG4gICAgcmV0dXJuICdbRm9ybXNdIFVwZGF0ZSBGb3JtIFZhbHVlJztcclxuICB9XHJcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHsgdmFsdWU6IGFueTsgcGF0aDogc3RyaW5nOyBwcm9wZXJ0eVBhdGg/OiBzdHJpbmcgfSkge31cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFVwZGF0ZUZvcm0ge1xyXG4gIHN0YXRpYyBnZXQgdHlwZSgpIHtcclxuICAgIC8vIE5PVEU6IE5vdCBuZWNlc3NhcnkgdG8gZGVjbGFyZSB0aGUgdHlwZSBpbiB0aGlzIHdheSBpbiB5b3VyIGNvZGUuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbmd4cy9zdG9yZS9wdWxsLzY0NCNpc3N1ZWNvbW1lbnQtNDM2MDAzMTM4XHJcbiAgICByZXR1cm4gJ1tGb3Jtc10gVXBkYXRlIEZvcm0nO1xyXG4gIH1cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHB1YmxpYyBwYXlsb2FkOiB7XHJcbiAgICAgIHZhbHVlOiBhbnk7XHJcbiAgICAgIGVycm9yczogeyBbazogc3RyaW5nXTogc3RyaW5nIH0gfCBudWxsO1xyXG4gICAgICBkaXJ0eTogYm9vbGVhbiB8IG51bGw7XHJcbiAgICAgIHN0YXR1czogc3RyaW5nIHwgbnVsbDtcclxuICAgICAgcGF0aDogc3RyaW5nO1xyXG4gICAgfVxyXG4gICkge31cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFVwZGF0ZUZvcm1EaXJ0eSB7XHJcbiAgc3RhdGljIGdldCB0eXBlKCkge1xyXG4gICAgLy8gTk9URTogTm90IG5lY2Vzc2FyeSB0byBkZWNsYXJlIHRoZSB0eXBlIGluIHRoaXMgd2F5IGluIHlvdXIgY29kZS4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9uZ3hzL3N0b3JlL3B1bGwvNjQ0I2lzc3VlY29tbWVudC00MzYwMDMxMzhcclxuICAgIHJldHVybiAnW0Zvcm1zXSBVcGRhdGUgRm9ybSBEaXJ0eSc7XHJcbiAgfVxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiB7IGRpcnR5OiBib29sZWFuIHwgbnVsbDsgcGF0aDogc3RyaW5nIH0pIHt9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBTZXRGb3JtRGlydHkge1xyXG4gIHN0YXRpYyBnZXQgdHlwZSgpIHtcclxuICAgIC8vIE5PVEU6IE5vdCBuZWNlc3NhcnkgdG8gZGVjbGFyZSB0aGUgdHlwZSBpbiB0aGlzIHdheSBpbiB5b3VyIGNvZGUuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbmd4cy9zdG9yZS9wdWxsLzY0NCNpc3N1ZWNvbW1lbnQtNDM2MDAzMTM4XHJcbiAgICByZXR1cm4gJ1tGb3Jtc10gU2V0IEZvcm0gRGlydHknO1xyXG4gIH1cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogc3RyaW5nKSB7fVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgU2V0Rm9ybVByaXN0aW5lIHtcclxuICBzdGF0aWMgZ2V0IHR5cGUoKSB7XHJcbiAgICAvLyBOT1RFOiBOb3QgbmVjZXNzYXJ5IHRvIGRlY2xhcmUgdGhlIHR5cGUgaW4gdGhpcyB3YXkgaW4geW91ciBjb2RlLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL25neHMvc3RvcmUvcHVsbC82NDQjaXNzdWVjb21tZW50LTQzNjAwMzEzOFxyXG4gICAgcmV0dXJuICdbRm9ybXNdIFNldCBGb3JtIFByaXN0aW5lJztcclxuICB9XHJcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHN0cmluZykge31cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFVwZGF0ZUZvcm1FcnJvcnMge1xyXG4gIHN0YXRpYyBnZXQgdHlwZSgpIHtcclxuICAgIC8vIE5PVEU6IE5vdCBuZWNlc3NhcnkgdG8gZGVjbGFyZSB0aGUgdHlwZSBpbiB0aGlzIHdheSBpbiB5b3VyIGNvZGUuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbmd4cy9zdG9yZS9wdWxsLzY0NCNpc3N1ZWNvbW1lbnQtNDM2MDAzMTM4XHJcbiAgICByZXR1cm4gJ1tGb3Jtc10gVXBkYXRlIEZvcm0gRXJyb3JzJztcclxuICB9XHJcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHsgZXJyb3JzOiB7IFtrOiBzdHJpbmddOiBzdHJpbmcgfSB8IG51bGw7IHBhdGg6IHN0cmluZyB9KSB7fVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgU2V0Rm9ybURpc2FibGVkIHtcclxuICBzdGF0aWMgZ2V0IHR5cGUoKSB7XHJcbiAgICAvLyBOT1RFOiBOb3QgbmVjZXNzYXJ5IHRvIGRlY2xhcmUgdGhlIHR5cGUgaW4gdGhpcyB3YXkgaW4geW91ciBjb2RlLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL25neHMvc3RvcmUvcHVsbC82NDQjaXNzdWVjb21tZW50LTQzNjAwMzEzOFxyXG4gICAgcmV0dXJuICdbRm9ybXNdIFNldCBGb3JtIERpc2FibGVkJztcclxuICB9XHJcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHN0cmluZykge31cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFNldEZvcm1FbmFibGVkIHtcclxuICBzdGF0aWMgZ2V0IHR5cGUoKSB7XHJcbiAgICAvLyBOT1RFOiBOb3QgbmVjZXNzYXJ5IHRvIGRlY2xhcmUgdGhlIHR5cGUgaW4gdGhpcyB3YXkgaW4geW91ciBjb2RlLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL25neHMvc3RvcmUvcHVsbC82NDQjaXNzdWVjb21tZW50LTQzNjAwMzEzOFxyXG4gICAgcmV0dXJuICdbRm9ybXNdIFNldCBGb3JtIEVuYWJsZWQnO1xyXG4gIH1cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogc3RyaW5nKSB7fVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgUmVzZXRGb3JtIHtcclxuICBzdGF0aWMgZ2V0IHR5cGUoKSB7XHJcbiAgICAvLyBOT1RFOiBOb3QgbmVjZXNzYXJ5IHRvIGRlY2xhcmUgdGhlIHR5cGUgaW4gdGhpcyB3YXkgaW4geW91ciBjb2RlLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL25neHMvc3RvcmUvcHVsbC82NDQjaXNzdWVjb21tZW50LTQzNjAwMzEzOFxyXG4gICAgcmV0dXJuICdbRm9ybXNdIFJlc2V0IEZvcm0nO1xyXG4gIH1cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogeyBwYXRoOiBzdHJpbmc7IHZhbHVlPzogYW55IH0pIHt9XHJcbn1cclxuIl19